type Query {
  """"""
  currentUser: BauAccount!

  """
  Returns partial BAU account details by provided legacy login and instance
  """
  partialBauAccountDetails(input: PartialBauAccountDetailsInput!): PartialBauAccountDetails!

  """Redirect user to Onboarding or B21 application"""
  verifyAccount(input: VerifyAccountInput!): Json!

  """"""
  verifyAccountByBauCookie(input: VerifyAccountByCookieInput!): Json!

  """"""
  lookupBauUsername(legacyInstance: String!, legacyPhone: String!, legacyEmail: String!): String!

  """"""
  getProfileByLegacyPersonId: [BauProfile!]

  """Get Artist by BAU Account"""
  artistByBauAccount: [BauArtist!]!

  """"""
  getEnterpriseUserOrganization: UserOrganization

  """"""
  getBauCountries: [BauCountry!]

  """"""
  getPhone(entityType: EntityTypeEnum!, phoneNumber: String!): [Phone!]!

  """"""
  getPlans: [PlanModel!]!

  """"""
  getPlanFeatures(planId: ID!): [PlanFeatureModel!]!

  """"""
  previewPurchase(input: PurchaseInput!): PurchaseModel!

  """"""
  artistSubscriptions(input: ArtistSubscriptionInput!): [SubscriptionModel!]!

  """"""
  getFreeCreditItems(artistId: Float!): [FreeCreditItemModel!]!

  """"""
  myAccount: Account!

  """"""
  getAccountByIds(accountIds: [ID!]!): [Account!]!

  """"""
  getRepresentativeSystemRole: [RepresentationSystemRole!]!

  """"""
  getAccountSystemRoleCodes(accountIds: [ID!]!): [AccountsSystemRoleCodes!]!

  """"""
  getComplexAccountInfo(accountId: Float!): Account!

  """"""
  divisionCastingOrganizations(organizationId: Int!, page: PageInput): [Organization!]!

  """"""
  verifyToken(authToken: String!): Boolean!

  """Get account id, phone and legacy email for UNCLAIMED profile"""
  getUnclaimedProfileRecipientAccount(profileId: Float!): Account

  """Get account id, phone and legacy email for UNCLAIMED profile"""
  getUnclaimedProfilesRecipientAccount(profileIds: [Int!]!): [UnclaimedAccount!]

  """"""
  getActiveOnboardedPaypalAccounts(input: AccountPaypalLocationInput!): [AccountActiveOnboardedPaypal!]!

  """"""
  getAccountIds(page: PageInput!): [ID!]!

  """"""
  getLanguageByLocale(locale: String!): LanguageInfo

  """"""
  getLanguageLocales: [LanguageInfo!]!

  """"""
  artistByAccount(accountId: Float!): [Artist!]!

  """"""
  artistByAccountWithUnclaimed(accountId: Float!): [Artist!]!

  """"""
  getArtist(artistId: Int!): Artist!

  """Artists by ids"""
  artists(ids: [Int!]!): [Artist!]!

  """"""
  getMediaByArtist(artistId: Float, mediaTypeCode: String!): [ArtistMedia!]!

  """"""
  mediaAsset(id: Int!): Media

  """"""
  mediaAssets(ids: [Int!]!): [Media!]!

  """"""
  mediaFileTypes(input: FilterInput): [MediaFileType!]!

  """"""
  getMediaMediaTypeById(ids: [Int!]!): [MediaMediaType!]!

  """Gets paginated result of Audition Sessions by provided project id"""
  auditionSessionsByProject(
    """Paginated input params """
    pageInput: PageInput

    """Id of project"""
    projectId: [Int!]!
  ): AuditionSessionPaginatedResult!

  """Gets single record of Audition Session by provided session id"""
  getAuditionSession(sessionId: Int!): AuditionSession

  """"""
  getAuditionTalentPool(sessionId: Int!): AuditionTalentPool

  """
  This endpoint is specifically designed for FastCapture adapater usage for retrieving the audition talentpool list
  """
  getAuditionTalentPoolFlat(sessionId: Int!): AuditionTalentPool

  """Audition history of the talent within the company"""
  getAuditionHistory(page: PageInput!, profileId: Int!): AuditionHistoryPaginatedResult!

  """Gets paginated result of Audition Groups by provided session id"""
  auditionGroupsBySession(
    """Paginated input params """
    pageInput: PageInput

    """Id of audition session"""
    sessionId: Int!
  ): AuditionGroupPaginatedResult!

  """Gets single record of Audition Group by provided group id"""
  auditionGroup(
    """Id of audition group"""
    groupId: Int!
  ): AuditionGroup!

  """Gets audition group ids record by profile and session id"""
  auditionGroupIdsByProfile(
    """Id of audition session"""
    sessionId: Int!

    """Ids of audition group talent"""
    profileIds: [Int!]!
  ): [AuditionGroupTalent!]

  """"""
  getSubmissionIdsByAuditionGroups(groupIds: [Int!]!): [BigInt!]!

  """"""
  accountsIndexable(ids: [Int!]!): JSON!

  """"""
  artistsIndexable(ids: [Int!]!): JSON!

  """"""
  profilesIndexable(ids: [Int!]!): JSON!

  """"""
  organizationsIndexable(ids: [Int!]!): JSON!

  """"""
  rolesIndexable(ids: [Int!]!): JSON!

  """"""
  submissionsIndexable(ids: [Int!]!): JSON!

  """"""
  getInternalNotesByAccountId(noteTypeCode: NoteTypeEnum, entityTypeCode: [EntityTypeEnum!], page: PageInput, accountId: Int!): NotePaginatedResult!

  """"""
  getLastNote(noteTypeCode: NoteTypeEnum, organizationId: Int, entityTypeCode: EntityTypeEnum!, entityIds: [BigInt!]!): [Note!]!

  """Get notification settings for specific artist"""
  getNotificationNotificationSubscriptionByArtist(artistId: Float!): [NotificationTypeNotificationSubscription!]

  """Get notification settings for artists"""
  getNotificationNotificationSubscriptionByArtists(artistIds: [Int!]!): [NotificationTypeNotificationSubscription!]

  """Get notification settings for specific artist"""
  getNotificationEntitySubscriptionByArtist(artistId: Float!): [NotificationEntitySubscription!]

  """Get notification settings for specific account"""
  getNotificationEntitySubscriptionByAccount(accountId: Float!): [NotificationEntitySubscription!]

  """Get notification settings for specific account"""
  getNotificationNotificationSubscriptionByAccount(accountId: Float!): [NotificationTypeNotificationSubscription!]

  """Get notification settings for specific account"""
  getNotificationNotificationSubscriptionByAccounts(accountIds: [Int!]!): [NotificationTypeNotificationSubscription!]

  """"""
  getRolesFitForYouNotificationContext(messageToTalents: String, artistAndRoles: [FFYContextInput!]!): [RolesFitForYouContext!]!

  """"""
  buildRolesOrganizationMatchNotificationPayloads(messageToReps: String, publicationTimestamp: DateTime!, roleIds: [Int!]!, organizationId: Int!, projectId: Int!): RolesPublishedContextNotificationContextAndRecipient!

  """"""
  getTalentAccessProfileContext(input: TalentAccessProfileContextInput!): TalentAccessProfileContextNotificationContextAndRecipient!

  """"""
  getProfileDirectMessageContext(input: ProfileDirectMessageContextInput!): ProfileDirectMessageContextAndProfile!

  """"""
  getVerificationEmailContext(audience: String, token: String!): BaseEmailContextNotificationContextAndRecipient!

  """"""
  getInternalWelcomeContext(id: Float!): InternalWelcomeContextNotificationContextAndRecipient!

  """"""
  getWelcomeContext(id: Float!): WelcomeContextNotificationContextAndRecipient!

  """"""
  getScheduleReminderContext(input: ScheduleReminderInput!): ScheduleReminder!

  """"""
  getCommentsForSubmission(submissionId: BigInt!): [PresentationSubmissionComment!]!

  """"""
  getCommentsForSubmissions(userName: [String!], page: PageInput, submissionIds: [BigInt!]!): PresentationSubmissionCommentPaginatedResult!

  """"""
  getSubmissionFeedback(submissionId: BigInt!): PresentationSubmissionFeedback!

  """Retrieve Presentations by project"""
  getPresentationsByProject(activeOnly: Boolean, projectId: Int!): [Presentation!]!

  """Retrieve Presentations for representative organizations"""
  getRepPresentations(sortOrder: SortOrderEnum = DESC, page: PageInput): RepPresentations!

  """Retrieve Presentations by IDs"""
  getPresentations(ids: [Int!]!): [Presentation!]!

  """Query for getting Presentation folder talent(s) by folder ids"""
  getPresentationFolderTalent(profileIds: [Int!], pageInput: PageInput = {pageSize: 100, pageNumber: 1}, presentationFolderIds: [Int!]!): [PresentationFolderTalent!]!

  """"""
  getPackageFolderTalent(profileIds: [Int!], pageInput: PageInput = {pageSize: 100, pageNumber: 1}, folderId: Int!): [PresentationFolderTalent!]!

  """Query for getting Presentation folder talent(s) by talent ids"""
  getPresentationFolderTalentById(groupTalentIds: [Int!]!): [PresentationFolderTalent!]!

  """Gets list of presentation folders for the presentation"""
  getPresentationFolders(presentationId: Int!): [PresentationFolder!]!

  """Gets presentation folders details"""
  getPresentationFoldersDetails(folderIds: [Int!]!): [PresentationFolder!]!

  """Gets info about media which should be archived"""
  getPresentationMediaDownloadInfo(groupId: Int, folderId: Int!): [MediaToArchive!]!

  """Query for getting Presentation Group details"""
  presentationGroupDetails(groupIds: [Int!]!): [PresentationGroup!]!

  """Query for getting Presentation Groups for the Presentation Folder"""
  getPresentationGroupsByFolder(hasPicks: Boolean, folderId: Int!): [PresentationGroup!]!

  """"""
  getPresentationGroupSubmissions(
    """"""
    hasPicks: Boolean

    """"""
    page: PageInput!

    """Presentation Group ID"""
    presentationGroupId: Int!
  ): PresentationGroupSubmissionPaginatedResult!

  """"""
  getPresentationGroupsSubmissions(
    """"""
    clientNames: [String!]

    """"""
    hasPicks: Boolean

    """"""
    page: PageInput!

    """Presentation Group IDs"""
    presentationGroupIds: [Int!]!
  ): PresentationGroupSubmissionPaginatedResult!

  """Query for getting Submissions IDs by Presentation Group"""
  getSubmissionIdsByPresentationGroupId(groupId: Int!): [BigInt!]!

  """"""
  isPresentationMediaArchiveReady(
    """Archive's file name"""
    fileKey: String!
  ): Boolean!

  """Retrieve Presentation by GUID"""
  getPresentationPublic(guid: String!): PresentationPublic!

  """Retrieve Presentation by filters"""
  getPresentationByFilters(input: PresentationFilterInput!): PresentationPublic!

  """Retrieve Presentation filters Data"""
  getPresentationFiltersData(presentationId: Int!): PresentationFilterData!

  """"""
  getPresentationGroupPublic(groupId: Int!, guid: String!): PresentationGroupPublic

  """Retrieve Presentation Group by filters"""
  getPresentationGroupByFilters(input: PresentationFilterInput!, groupId: Int!, guid: String!): PresentationGroupPublic

  """"""
  getCommentsForPresentationSubmissionPublic(
    """"""
    userName: String

    """"""
    submissionId: BigInt!

    """"""
    groupId: Int!

    """Presentation GUID"""
    guid: String!
  ): [PresentationSubmissionComment!]!

  """"""
  getCommentsForPresentationSubmissionPublicBySubmissionId(userName: String, page: PageInput!, submissionIds: [BigInt!]!, presentationId: Int!): PresentationSubmissionCommentPaginatedResult!

  """"""
  getPresentationGroupsSubmissionsPublic(
    """"""
    userName: String

    """"""
    hasPicks: Boolean

    """"""
    page: PageInput!

    """Presentation Group IDs"""
    presentationGroupIds: [Int!]!

    """"""
    presentationId: Int!
  ): PresentationTalentPublicPaginatedResult!

  """Get all the profiles in the db"""
  profiles(ids: [ID!]!): [Profile!]

  """Get all the profile ids by account"""
  profileIdsByAccounts(accountIds: [ID!]!): [ProfileIdsByAccount!]

  """Get account by legacy profileId"""
  getLegacyAccountDetails(profileId: Int!): [LegacyAccount!]!

  """"""
  getArtistByProfileId(profileId: Int!): Artist!

  """"""
  getArtistByProfiles(profileIds: [Int!]!): [Artist!]!

  """Get submissions for given role and profile id"""
  getSubmissionByRoleProfile(input: GetSubmissionByRoleProfileInput!): [Submission!]!

  """Gets the count for all the profiles for a project."""
  getTotalProfileCount(id: Float!): Float!

  """Get submission profile information for given submission id"""
  getSubmissionProfile(id: BigInt!): SubmissionProfile!

  """
  Get fit for you values for the specific artist id (Used at Casting Billboard )
  """
  getFitForYouValuesForArtist(artistId: Float): DefaultFitForYouArtist

  """Get profileAccessToken details"""
  getProfileByAccessToken(accessToken: String!): ProfileAccessToken

  """Get all the profiles by artist"""
  getProfilesByArtist(artistId: Int!): [Profile!]!

  """"""
  searchProfilesByOrgId(page: PageInput = {pageSize: 100, pageNumber: 1}, partialStageName: String = ""): ProfileSearchResultByOrgIdPaginatedResult!

  """Get all the profile's credits in the db"""
  credits(profileId: Float!): [Credit!]

  """Retrieve Profile by GUID"""
  publicProfile(guid: String!): PublicProfile

  """Returns list of submissions for submissionIds"""
  submissions(ids: [BigInt!]!): [Submission!]!

  """Returns list of submissions for given profileId"""
  getSubmissionsByProfileId(input: SubmissionByProfileInput, profileId: Float!): [Submission!]!

  """"""
  getSubmissionParticipants(roleId: Float!): [String!]!

  """"""
  searchSubmissions(
    """Input object for search submissions"""
    input: SubmissionSearchInput!

    """"""
    page: PageInput

    """"""
    searchPage: SearchPageInput

    """Result sort options. By default sorted DESC by the "Created"."""
    sortOptions: [SubmissionSearchSortOptionsInput!]

    """"""
    resultType: SearchResultType = DOCUMENTS
  ): SubmissionPaginatedResult!

  """"""
  countSubmissionsPerRole(input: SubmissionCountPerRoleInput!): [SubmissionCountPerRole!]!

  """"""
  getSubmissionsByRole(pageInput: PageInput = {pageSize: 100, pageNumber: 1}, tileSchemeCodes: [String!], submissionStatusCodes: [String!]!, roleIds: [Int!]!): SubmissionPaginatedResult!

  """"""
  getSubmissionsByProjectAndProfile(pageInput: PageInput = {pageSize: 100, pageNumber: 1}, projectIds: [Int!]!, profileIds: [Int!]!): SubmissionPaginatedResult!

  """"""
  searchSubmissionsByAuditionGroupId(
    """"""
    page: PageInput!

    """Audition Group ID"""
    auditionGroupId: Int!
  ): SubmissionPaginatedResult!

  """Returns submissions data for workflow"""
  getSubmissionsDataForWorkflow(ids: [BigInt!]!): [SubmissionWorkflow!]!

  """Returns submissions data for workflow. (Short)"""
  getSubmissionsDataForWorkflowShort(ids: [BigInt!]!): [SubmissionWorkflowShort!]!

  """Returns available submission ids for request"""
  getAvailableSubmissionIdsForRequest(
    """"""
    searchInput: SubmissionSearchInput

    """DEPRECATED"""
    tileSchemeValueCode: [String!]

    """DEPRECATED"""
    roleIds: [Int!]
  ): [BigInt!]!

  """Get projects for a organization"""
  organizationProjects(
    """"""
    organizationId: Int!

    """
    Sort Order Instructions for the result. If not specified, order by name asc will be used
    """
    sortInstruction: SortConditionInput

    """"""
    page: PageInput

    """"""
    statusFilter: ProjectStatusFilterEnum

    """"""
    name: String
  ): ProjectBasePaginatedResult!

  """Get project details by id"""
  project(id: Float!): Project!

  """"""
  publicProjectName(guid: String!): String

  """Get projects by id's"""
  projects(ids: [ID!]!): [Project!]!

  """Get project(s) modification(s) by id's"""
  projectsModifications(ids: [ID!]!): [Project!]!

  """Get backlot project seach result"""
  getProjectBacklot(page: PageInput, input: ProjectBacklotSearchInput!): ProjectBacklotSearchResultPaginatedResult!

  """"""
  searchProjectsByOrg(page: PageInput = {pageSize: 100, pageNumber: 1}, partialProjectName: String = ""): ProjectPaginatedResult!

  """Get the roles by id's"""
  roles(ids: [ID!]!): [Role!]!

  """"""
  publicRoleName(guid: String!): String

  """Get the role from modification by RoleId"""
  roleModification(roleId: Float!): Role

  """Get Roles for project"""
  projectRoles(roleStatusFilter: RoleStatusFilter, roleStatusCodes: [RoleStatusCodes!], page: PageInput, id: Float!): [Role!]!

  """"""
  rolePreviousStatus(skipRoleStatuses: [String!]!, roleIds: [Float!]!): [RolePreviousStatus!]!

  """Return Organization objects from an id array"""
  organizations(ids: [ID!]!): [Organization!]!

  """"""
  organizationFeature(organizationId: Float!): [Feature!]

  """"""
  repOrganizationList(page: PageInput, input: RepOrganizationListInput!): [RepOrganizationList!]

  """"""
  organizationByAccount(accountId: Float!): [OrganizationAccount!]

  """"""
  getPublishedOrganizationIdsForProject(page: PageInput!, projectId: Float!): [Float!]!

  """"""
  featureByType(divisionOnly: Boolean, input: Float): [Feature!]!

  """"""
  organizationsByRoleSubmissionsAndName(divisionOrAgencyName: String, page: PageInput!, roleId: Int!): OrganizationsByRoleSubmissionsAndNamePaginatedResult!

  """
  Paginated query for get organizations by specified representation type and partial/full org name match
  """
  getOrganizationsByRepTypeAndName(input: OrganizationsByRepTypeAndNameInput!): OrganizationsByRepTypeAndNameResultPaginatedResult!

  """"""
  getIdByLegacyId(input: RedirectInput!): Redirect!

  """"""
  getReportById(id: ID!): ReportUnion

  """"""
  getReportCsvUrlById(id: ID!): String

  """"""
  getReportByIdPublic(publicKey: ID!, id: ID!): ReportUnion

  """"""
  searchRepresentatives(page: PageInput!, input: SearchRepresentativeInput!): RepresentativeSearchResult!

  """Returns List Details for given list ID"""
  profileListDetails(listId: Float!): ProfileList!

  """
  Returns paginated result of organization profile lists which logged in user belongs to.
  """
  getOrganizationProfileLists(order: ListSortOrderEnum = ALPHABETICAL, page: PageInput!): ProfileListPaginatedResult!

  """
  Returns paginated result of organization representative lists which logged in user belongs to.
  """
  getOrganizationRepresentativeLists(page: PageInput = {pageSize: 100, pageNumber: 1}, input: GetOrganizationRepresentativeListsInput = {sortOrder: LAST_MODIFIED}): RepresentativeListPaginatedResult!

  """Returns Representative List Details for given list ID"""
  representativeListDetails(listId: Float!): RepresentativeList!

  """"""
  getScheduleSlot(id: ID!): ScheduleSlot @deprecated(reason: "Use getScheduleSlots instead")

  """"""
  getScheduleSlots(ids: [ID!]!): [ScheduleSlot!]

  """Fetch Schedule Details by scheduleId"""
  scheduleDetails(id: ID!): ScheduleDetail!

  """Fetch Schedules Details by Ids"""
  getSchedules(ids: [Int!]!): [ScheduleDetail!]!

  """Gets talent pool for the schedule"""
  getTalentPoolForSchedule(scheduleId: Int!, roleIds: [Int!]!, pageInput: PageInput!, tileSchemaValueCodes: [String!], scheduleSelectInput: SchedulesSelectInput): [ScheduleTalentPool!]!

  """Fetch Slots with Submissions by scheduleId"""
  slotsWithSubmissionsByScheduleId(scheduleId: ID!): [Slot!]!

  """Fetch Slots summary by scheduleId"""
  getScheduleSlotsSummary(scheduleId: ID!): [ScheduleSlotSummary!]!

  """Searching Schedules"""
  searchSchedules(page: PageInput!, input: ScheduleSearchInput!): SchedulePaginatedResult

  """Fetch last calendar history change"""
  getCalendarLastHistoryChange(calendarId: ID!): ScheduleHistory

  """Fetch calendar revision by calendar id and version"""
  getCalendarRevision(version: Int!, calendarId: ID!): ScheduleDetail!

  """"""
  getScheduleTimeframe(timeframeId: Int!): ScheduleTimeframe!

  """
  Returns tuple of min/max available seconds for shifting, e.g. [-3600, 3600]
  """
  getAvailableScheduleTimeShifting(timeframeId: Int!, scheduleId: Int!): [Int!]!

  """Searching Profiles"""
  searchProfiles(input: ProfileSearchInput!, page: PageInput, sortOptions: [ProfileSearchSortOption!], resultType: SearchResultType = DOCUMENTS): ProfileSearch

  """"""
  getProfileSearchUnionFilterByRole(roleIds: [Int!]!): [ProfileUnionFilter!]!

  """Projects with Fit For You roles"""
  castingBillboardRoles(sortInput: SortConditionInput, paginationConfig: PageInput!, castingBillBoardFilters: CastingBillboardSearchInput!): RoleSearchResult

  """Search in organizations"""
  searchOrganizations(page: PageInput, input: OrganizationSearchInput): OrganizationSearchResult!

  """Get all active projects list"""
  activeProjectListWithVisibilities(page: PageInput, filters: ProjectFilterInput): ProjectVisibilityResult!

  """
  Get all active roles for a Project with optional parameter to filter roles for organization
  """
  activeProjectRoles(id: Float!): [Role!]!

  """Get all closed roles for representatives"""
  getRepsReadOnlyProjectRoles(id: Float!): [Role!]!

  """Get all roles for a Project by role Status"""
  getProjectRolesByOrg(statusFilter: [String!]!, orgId: Float!, projectId: Float!): [Role!]!

  """"""
  cdWorksheet(page: PageInput, filters: CDWorksheetFilterInput!): SubmissionPaginatedResult!

  """"""
  coats(input: FilterInput): [Coat!]!

  """"""
  shoeModifier(input: FilterInput): [ShoeModifier!]!

  """"""
  conflicts(input: FilterInput): [Conflict!]!

  """"""
  cupSizes(input: FilterInput): [CupSize!]!

  """"""
  compensation(input: FilterInput): [Compensation!]!

  """"""
  ethnicAppearances(input: FilterInput): [EthnicAppearance!]!

  """"""
  organizationStatus(input: FilterInput): [OrganizationStatus!]!

  """"""
  systemRoles(input: FilterInput): [SystemRole!]!

  """"""
  eyeColors(input: FilterInput): [EyeColor!]!

  """"""
  facialHairs(input: FilterInput): [FacialHair!]!

  """"""
  genderAppearances(input: FilterInput): [GenderAppearance!]!

  """"""
  sexualSituations(input: FilterInput): [SexualSituation!]!

  """"""
  genderIdentities(input: FilterInput): [GenderIdentity!]!

  """"""
  hairColors(input: FilterInput): [HairColor!]!

  """"""
  hairStyles(input: FilterInput): [HairStyle!]!

  """"""
  hips(ids: [ID!]): [Hip!]!

  """"""
  mediaTypes(input: FilterInput): [MediaType!]!

  """"""
  features(input: FilterInput): [Feature!]!

  """"""
  multipleBirths(input: FilterInput): [MultipleBirth!]!

  """"""
  necks(ids: [ID!]): [Neck!]!

  """"""
  petSizes(input: FilterInput): [PetSize!]!

  """"""
  profileStatuses(input: FilterInput): [ProfileStatus!]!

  """"""
  piercings(input: FilterInput): [Piercing!]!

  """"""
  pursuings(input: FilterInput): [Pursuing!]!

  """"""
  representationCategories(input: FilterInput): [RepresentationCategory!]!

  """"""
  roleTypes(input: RoleTypeFilterInput): [RoleType!]!

  """"""
  roleTargets(input: FilterInput): [RoleTarget!]!

  """"""
  seekingRepresentations(input: FilterInput): [SeekingRepresentation!]!

  """"""
  skillLevels(input: FilterInput): [SkillLevel!]!

  """"""
  sleeves(ids: [ID!]): [Sleeve!]!

  """"""
  tattoos(input: FilterInput): [Tattoo!]!

  """"""
  underBusts(ids: [ID!]): [UnderBust!]!

  """"""
  vehicleMakes(input: FilterInput): [VehicleMake!]!

  """"""
  vehicleTypeMakes: [VehicleTypeMake!]!

  """"""
  busts(ids: [ID!]): [Bust!]!

  """"""
  gloves(ids: [ID!]): [Glove!]!

  """"""
  heights(ids: [ID!]): [Height!]!

  """"""
  inseams(ids: [ID!]): [Inseam!]!

  """"""
  chestSizes(ids: [ID!]): [ChestSize!]!

  """"""
  shoeSizes(ids: [ID!]): [ShoeSize!]!

  """"""
  generalSizes(input: FilterInput): [GeneralSize!]!

  """"""
  uniqueAttributes(input: FilterInput): [UniqueAttribute!]!

  """"""
  waists(ids: [ID!]): [Waist!]!

  """"""
  weights(ids: [ID!]): [Weight!]!

  """"""
  creditTypes(input: FilterInput): [CreditType!]!

  """"""
  dresses(ids: [ID!]): [ClothesSize!]!

  """"""
  pants(ids: [ID!]): [Pants!]!

  """"""
  sizeModifiers(input: FilterInput): [SizeModifier!]!

  """"""
  accountStatuses(input: FilterInput): [AccountStatus!]!

  """"""
  auditionSources(input: FilterInput): [AuditionSource!]!

  """"""
  presentationTypes(input: FilterInput): [PresentationType!]!

  """"""
  submissionStatuses(input: FilterInput): [SubmissionStatus!]!

  """"""
  paidTypes(input: FilterInput): [PaidType!]!

  """"""
  representationTypes(input: FilterInput): [RepresentationType!]!

  """"""
  representationCategoryByType(typeId: Float!): [RepresentationCategory!]!

  """"""
  representationAgeCategory(input: FilterInput): [RepresentationAgeCategory!]!

  """"""
  projectStatus(input: FilterInput): [ProjectStatus!]!

  """"""
  tshirtSizes(ids: [ID!]): [TShirtSize!]!

  """"""
  hatSizes(ids: [ID!]): [HatSize!]!

  """"""
  tileSchemaValues(tileSchema: TileSchemaEnum, input: FilterInput): [TileSchemaValue!]!

  """"""
  roleSidesVisibilities(input: FilterInput): [RoleSidesVisibility!]!

  """"""
  timeZones(input: FilterInput): [TimeZone!]!

  """"""
  roleUnions(input: FilterInput): [RoleUnion!]!

  """"""
  contractStatuses(
    """Filter input"""
    input: FilterInput
  ): [ContractStatus!]!

  """"""
  profileTypes(
    """Filter input"""
    input: FilterInput
  ): [ProfileType!]!

  """"""
  skills(input: FilterInput): [Skill!]!

  """"""
  documentTypes(onlySelectable: Boolean, input: FilterInput): [Document!]!

  """"""
  wardrobes(input: FilterInput): [Wardrobe!]!

  """"""
  sportEquipments(input: FilterInput): [SportEquipment!]!

  """"""
  pets(input: FilterInput): [Pet!]!

  """"""
  projectTypes(onlySelectable: Boolean, input: FilterInput): [ProjectType!]!

  """"""
  props(onlySelectable: Boolean, input: FilterInput): [Prop!]!

  """"""
  talentUnions(input: FilterInput): [TalentUnion!]!

  """"""
  projectUnions(input: FilterInput): [TalentUnion!]!

  """"""
  vehicleTypes(input: FilterInput): [VehicleType!]!

  """"""
  willingnesses(input: FilterInput): [Willingness!]!

  """"""
  dmas(isLimitedOnly: Boolean, input: FilterInput): [Dma!]!

  """"""
  countries(input: FilterInput): [Country!]!

  """"""
  countryWithDma(isLimitedOnly: Boolean): [Country!]!

  """"""
  states(page: PageInput, input: StateFilterInput): [State!]!

  """"""
  getChatMessageByTopic(pageSize: Int!, topicKey: String!): GetChatMessagesByTopicModel!

  """"""
  getMessageAfterId(direction: SearchDirection!, afterMessageId: String!, pageSize: Int!, topicKey: String!): GetChatMessagesByTopicModel!

  """"""
  getDefaultSavedSearch: SavedSearch

  """"""
  getSavedSearchList(limit: Int!, keyOffset: String): SavedSearchList

  """"""
  getSavedSearchTypes: [String!]!

  """"""
  submissionTrends(input: SubmissionTrendsInput!): SubmissionTrendsResult!

  """"""
  authHealth: String!

  """List of sessions"""
  getAccountSessions(accountId: Float!): [Session!]!

  """Returns true if username and password are matched, otherwise false"""
  authenticate(email: String!, password: String!): Boolean!

  """Hash a password"""
  hashPassword(password: String!): String!

  """Compare a password with hashedPassword"""
  comparePassword(hashedPassword: String!, password: String!): Boolean!

  """"""
  searchAccounts(page: PageInput!, filters: SearchAccountsFiltersArgs): AccountItemPagedList!

  """"""
  searchNotifications(startDate: DateTime, endDate: DateTime, page: PageInput!, orderBy: NotificationOrderByInput = {timestamp: DESC}, filters: SearchNotificationFiltersArgs): NotificationPagedList!

  """"""
  searchCompanies(page: PageInput!, filters: SearchOrganizationsFiltersArgs): OrganizationItemPagedList!

  """"""
  getCompanyDictionary(page: PageInput!, filters: SearchOrganizationsFiltersArgs): OrganizationDictionaryItemPagedList!

  """"""
  searchCompanyDivisions(page: PageInput!, filters: SearchOrganizationsFiltersArgs): OrganizationItemPagedList!

  """"""
  repsWorksheet(page: PageInput!, filters: RepsWorksheetFiltersArgs, sortBy: RepWorksheetFieldOrder, sortOptions: [RepWorksheetOrderOption!]): RepsWorksheetItemPagedList!

  """"""
  repsWorksheetGroups(limit: Int!, groupType: RepsWorksheetGroupType!, groupId: ID, filters: RepsWorksheetFiltersArgs, sortOrder: SortOrder = ASC): RepsWorksheetGroups!

  """"""
  repsWorksheetFilters: RepsWorksheetFilters!

  """"""
  getBillingInfo(input: GetBillingInfoInput!): [BillingInfo!]!

  """"""
  wfApiHealth: String!

  """"""
  requests(projectId: Int!, page: PageInput!): RequestPagedList!

  """"""
  getActiveSubRequestsBySubmissionIds(submissionIds: [Int!]!, requestType: RequestType, requestStatus: [RequestStatusUnion!]): [RequestSubmission!]!

  """"""
  getSubRequestsCount(
    """"""
    id: ID!

    """Request status"""
    status: [RequestStatus!]
  ): Float!

  """"""
  mediaRequestDetails(id: ID!): MediaRequest!

  """"""
  mediaRequestResponseCount(id: ID!): [MediaResponseCounts!]!

  """"""
  mediaSubRequestDetails(id: ID!): MediaSubRequest!

  """"""
  askQuestionRequestDetails(id: ID!): AskQuestionRequest!

  """"""
  askQuestionSubRequestDetails(id: ID!): AskQuestionSubRequest!

  """Get details for talent invitation by token"""
  rosterTalentInvitationByToken(token: String!): RosterTalentInvitation!

  """"""
  rosterInvitations(page: PageInput!): RosterTalentInvitationPagedList!

  """Get roster invitation history for provided talent's name and email"""
  rosterInvitationTalentHistory(filter: RosterInvitationTalentHistoryFilterInput!): [RosterTalentInvitation!]!

  """Returns talent response by rep's request id"""
  talentResponse(id: ID!): RepWorksheetResponse

  """"""
  scheduleInviteSubRequestDetails(id: ID!): ScheduleInviteSubRequest!

  """"""
  scheduleInviteRequestNotes(scheduleId: Int!): ScheduleInviteRequestNotes!

  """"""
  scheduleInviteResponseStatusCounts(scheduleIds: [Int!]!): [ScheduleInviteResponseStatusCounts!]!

  """"""
  scheduleResponses(scheduleId: Int!): [ScheduleInviteResponse!]!

  """"""
  scheduleResponsesCanceled(scheduleId: Int!): [ScheduleInviteResponse!]!

  """"""
  previousScheduleResponses(scheduleId: Int!, submissionIds: [Int!]!): [ScheduleInvitePreviousResponse!]!

  """"""
  getActivityLogsBySubmissionId(id: Int!, page: PageInput!): ActivityLogPagedList!

  """"""
  getLastActivityLogBySubmissionIds(ids: [Int!]!): [ActivityLog!]!

  """"""
  voiceOverMediaRequests(roleId: Int!, submissionIds: [Int!]): [MediaSubRequest!]!
}

"""BAU Account Object"""
type BauAccount {
  """"""
  id: ID!

  """"""
  firstName: String

  """"""
  lastName: String

  """"""
  email: String

  """"""
  phone: String

  """"""
  countryId: Float

  """"""
  timeZoneId: Float

  """"""
  accountStatusId: ID!

  """"""
  status: String

  """"""
  vip: Boolean

  """"""
  onboardingStatus: String

  """"""
  onboardingStatusId: ID!

  """"""
  roles: [SystemRole!]

  """"""
  legacyEmail: String

  """"""
  isLegacyEmailUnique: Boolean

  """"""
  legacyClaim: Float

  """"""
  legacyAccountID: Float

  """"""
  legacyPersonID: Float

  """"""
  legacyInstance: String

  """"""
  legacyLogin: String

  """"""
  recurlyAccountCode: String

  """"""
  paypalAccountCode: String

  """"""
  hasPreMappedOrg: Boolean

  """"""
  primaryAccountId: Float
}

""""""
type SystemRole {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

""""""
input PartialBauAccountDetailsInput {
  """"""
  legacyInstance: String

  """"""
  legacyLogin: String!

  """"""
  migratedAccountID: Float
}

"""Partial BAU account details"""
type PartialBauAccountDetails {
  """"""
  partialEmail: String!

  """"""
  roles: [SystemRole!]!

  """"""
  partialPhones: [String!]!

  """"""
  projectNames: [String!]

  """"""
  stageName: String

  """"""
  accountStatusCode: String!
}

"""login with B21 or BAU credentials"""
input VerifyAccountInput {
  """B21 email or legacy username"""
  name: String!

  """B21 password or legacy password"""
  password: String!

  """legacy instance for onboarding"""
  instance: String

  """accitional account claiming for onboarding"""
  migratedAccountID: Float
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar Json

""""""
input VerifyAccountByCookieInput {
  """"""
  secureCookieToken: String!

  """legacy instance for onboarding"""
  instance: String!
}

"""BAU Profile Object"""
type BauProfile {
  """Profile ID"""
  id: Int!

  """Profile Artist ID"""
  artistId: Int

  """Legacy Profile ID"""
  legacyProfileId: String

  """Profile Stage Name"""
  stageName: String

  """Profile Division Name"""
  divisionName: String

  """Profile Division ID"""
  divisionId: Int

  """Profile Status Object"""
  status: ProfileStatus

  """Profile Primary Working Location ID"""
  primaryWorkingLocationId: Int

  """Profile Playable Max Age"""
  playableMaxAge: Int

  """Profile Playable Min Age"""
  playableMinAge: Int

  """Profile is Personal?"""
  isPersonal: Boolean

  """Profile talent union name"""
  talentUnions: [BauTalentUnion!]

  """Profile Medias"""
  medias: [BauMedia!]

  """Profile weight"""
  weight: BauWeight

  """Profile height"""
  height: BauHeight

  """Profile Primary Working Location Name"""
  primaryWorkingLocationName: String

  """Profile  date of birth"""
  dateOfBirth: DateTime
}

""""""
type ProfileStatus {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""Talent Union object"""
type BauTalentUnion {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enabled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

""""""
type BauMedia {
  """Primary ID"""
  id: ID!

  """"""
  guid: String!

  """"""
  mediaId: Int!

  """"""
  name: String

  """"""
  filename: String

  """"""
  size: Int

  """"""
  height: Int

  """"""
  width: Int

  """"""
  length: Float

  """"""
  created: DateTime

  """"""
  updated: DateTime

  """"""
  tag: String

  """"""
  mediaFileKey: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

""""""
type BauWeight {
  """Primary ID"""
  id: ID!

  """"""
  lbs: Int!

  """"""
  kg: Float!
}

""""""
type BauHeight {
  """Primary ID"""
  id: ID!

  """"""
  inch: Float!

  """"""
  cm: Int!

  """"""
  imperial: String!
}

"""BAU Artist Object"""
type BauArtist {
  """"""
  id: ID!

  """"""
  firstName: String

  """"""
  lastName: String

  """"""
  profiles: [BauProfile!]
}

"""Organization Object"""
type UserOrganization {
  """Organization ID"""
  id: Int

  """Parent Organization ID"""
  parentOrganizationId: Int

  """Company Name"""
  companyName: String

  """Contact ID"""
  contactId: Int

  """Primary Contacts Name"""
  primaryContactName: String

  """Primary Contacts Email"""
  primaryContactEmail: String

  """Primary Contacts Phone Number"""
  primaryContactPhoneNumber: String

  """Address ID"""
  addressId: Int

  """Country"""
  countryId: Int

  """Company Address Line 1"""
  companyAddressLine1: String

  """Company Address Line 2"""
  companyAddressLine2: String

  """City"""
  city: String

  """State id"""
  stateId: Int

  """Company Phone"""
  companyPhone: String

  """Zip"""
  zip: String

  """Organization Status"""
  organizationStatus: String

  """DMA id"""
  dmaId: Int

  """Primary working location"""
  primaryWorkingLocation: [Int!]

  """Publishing categories"""
  publishingCategories: [Int!]

  """Representation age categories"""
  ageCategories: [Int!]
}

"""Organization Object"""
type BauCountry {
  """Country id"""
  id: Int!

  """Country code"""
  code: String

  """Country name"""
  name: String

  """Continent id"""
  continentId: Int

  """Has dma"""
  hasDma: Boolean

  """Has states"""
  hasState: Boolean

  """Supporting country id"""
  supportingCountryId: Int
}

""""""
enum EntityTypeEnum {
  """"""
  ACCOUNT

  """"""
  ADDRESS

  """"""
  ARTIST

  """"""
  AUDITION_SESSION

  """"""
  CALENDAR

  """"""
  CALENDAR_EVENT

  """"""
  CALENDAR_SLOT

  """"""
  MEDIA

  """"""
  MEDIA_TYPE

  """"""
  NOTIFICATION_NATURE

  """"""
  ORGANIZATION

  """"""
  PAID_TYPE

  """"""
  PROFILE

  """"""
  PROJECT

  """"""
  PROJECT_TYPE

  """"""
  ROLE

  """"""
  ROLE_TARGET

  """"""
  SUBMISSION

  """"""
  TALENT_UNION
}

""""""
type Phone {
  """"""
  id: Int!

  """"""
  phoneTypeId: Int

  """"""
  name: String

  """"""
  phoneNumber: String

  """"""
  entityId: BigInt

  """"""
  entityTypeId: Int
}

"""BigInt scalar type"""
scalar BigInt

"""Subscription Plan"""
type PlanModel {
  """"""
  id: ID!

  """"""
  code: String

  """"""
  name: String

  """"""
  isBasePlan: Boolean

  """"""
  enabled: Boolean

  """"""
  billingCode: String

  """"""
  planCurrencyCode: String

  """"""
  price: Float

  """"""
  created: DateTime

  """"""
  updated: DateTime

  """"""
  sortOrder: Int

  """"""
  planStatusId: ID

  """"""
  billingProviderId: ID

  """"""
  currency: Currency

  """"""
  planTerm: PlanTermModel
}

"""Currency object"""
type Currency {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int

  """"""
  symbol: String!
}

""""""
type PlanTermModel {
  """"""
  id: ID!

  """"""
  code: String

  """"""
  name: String
}

""""""
type PlanFeatureModel {
  """"""
  itemId: ID!

  """"""
  itemCode: String!

  """"""
  planId: ID!

  """"""
  code: String!

  """"""
  name: String!

  """"""
  currency: Currency

  """"""
  price: Float

  """"""
  isPermanent: Boolean!

  """"""
  credit: Int!
}

"""Generate purchase based on items or subscription"""
input PurchaseInput {
  """Billing Token"""
  token: String

  """Billing items"""
  items: [BillingItemInput!] = []

  """Billing subscriptions"""
  subscriptions: [BillingSubscriptionInput!] = []

  """"""
  artistId: Int

  """"""
  threeDSecureActionResultTokenId: String

  """"""
  providerCouponCodes: [String!]

  """"""
  billingInfoId: String
}

"""Billing Item Input"""
input BillingItemInput {
  """Media Id"""
  mediaId: Int!
}

"""Billing Subscription Input"""
input BillingSubscriptionInput {
  """Billing Subscription code"""
  code: String!
}

""""""
type PurchaseModel {
  """"""
  items: [BillingItemModel!]!

  """"""
  subscriptions: [BillingItemModel!]!

  """"""
  total: Float!

  """"""
  currency: Currency!

  """"""
  invoiceId: String

  """"""
  email: String!

  """"""
  cardType: String

  """"""
  lastFour: String

  """"""
  creditsApplied: Float!

  """"""
  discount: Float

  """"""
  couponCodes: [String!]

  """"""
  coupons: [CouponModel!]
}

""""""
type BillingItemModel {
  """"""
  code: String!

  """"""
  name: String

  """"""
  price: Float

  """"""
  qty: Int

  """"""
  id: ID

  """"""
  priceInCents: Int

  """"""
  availableCredit: Int
}

""""""
type CouponModel {
  """"""
  code: String!

  """"""
  description: String
}

"""Subscription Input"""
input ArtistSubscriptionInput {
  """Artist id"""
  artistId: Int!
}

"""Subscription"""
type SubscriptionModel {
  """"""
  id: ID!

  """"""
  plan: PlanModel

  """"""
  nextBillingDate: DateTime

  """"""
  status: String!

  """"""
  expirationDate: DateTime

  """"""
  transaction: String

  """"""
  billingInfoId: String
}

""""""
type FreeCreditItemModel {
  """"""
  itemId: Float!

  """"""
  itemCode: BillingItemCode!

  """"""
  artistId: Float!

  """"""
  credits: Float!

  """"""
  createdBy: Float!

  """"""
  created: DateTime!

  """"""
  updated: DateTime
}

""""""
enum BillingItemCode {
  """"""
  registration

  """"""
  SYSTEM_ACCESS

  """"""
  PHOTO_UPLOAD

  """"""
  MEDIA_UPLOAD

  """"""
  AUDIO_UPLOAD

  """"""
  VIDEO_UPLOAD

  """"""
  SUBMISSION
}

"""Account info"""
type Account {
  """Primary ID"""
  id: Int!

  """"""
  firstName: String!

  """"""
  lastName: String!

  """"""
  email: String!

  """Legacy email"""
  legacyEmail: String

  """Legacy instance"""
  legacyInstance: String

  """Legacy login"""
  legacyLogin: String

  """
  Holds the value to reset the original account email till it gets verified
  """
  emailToReset: String

  """
  Holds the generated token value, till it gets expired or the email update verification done successfully.
  """
  emailResetToken: String

  """"""
  phone: String!

  """"""
  termsOfUse: Boolean!

  """"""
  lastLogin: DateTime

  """"""
  countryId: Int!

  """"""
  accountStatusId: Int!

  """"""
  linkedToAccountId: Int

  """"""
  created: DateTime!

  """Updated at Date"""
  updated: DateTime

  """"""
  systemRolesIds: [Float!]

  """"""
  ipcInfo: IPCInfo!

  """"""
  isAdmin: Boolean!

  """"""
  linkedOrganization: Float

  """"""
  former: Boolean

  """"""
  passwordHash: String

  """"""
  loginAttemptCount: Int

  """"""
  loginAttemptFailedAt: DateTime

  """"""
  organizationDivisionsCount: Float

  """
  Roster invitation token to hold the invitation token till logged in user will not create the profile using it
  """
  rosterInvitationToken: String

  """"""
  languageLocaleId: Int

  """"""
  subscription: ActiveSubscriptionModel

  """"""
  lastArtistId: Int

  """system roles"""
  systemRoles: [String!]

  """Checks if the current/switched user is PC or not"""
  isInPCContext: Boolean!

  """Checks if user is in role Casting Director"""
  isCCD: Boolean!

  """Checks if user is in role Independent Project Creator"""
  isIPC: Boolean!

  """Checks if user is in role Independent Project Creator"""
  isAccountIPC: Boolean!

  """"""
  artists: [Artist!]!

  """"""
  accountSystemRoles: [SystemRole!]!

  """"""
  accountOrganization(systemRoleCode: [String!]): [OrganizationInfo!]

  """"""
  linkedAccountOrganization: [Organization!]

  """"""
  linkedAccountDivisionCount: Float

  """"""
  accountOrganizationDivisionsAccessCount: Float

  """"""
  accountOrganizationDivisionsAccess: [Organization!]!

  """"""
  accountUrlTypes: [AccountUrlType!]

  """Organizations that user belongs to"""
  organizations(systemRoleCode: [String!]): [Organization!]

  """Divisions that user belongs to"""
  divisions: [Organization!]

  """Returns organization features"""
  features: [Feature!]

  """Account status object"""
  accountStatus: AccountStatus

  """Language Info object"""
  language: LanguageInfo

  """Time zone object"""
  timeZone: TimeZone

  """Country object"""
  country: Country

  """Account billing info"""
  billingInfo: AccountBillingInfo!

  """"""
  notificationSubscriptions: [NotificationTypeNotificationSubscription!]!

  """"""
  legacyProfileStatus: ProfileStatus

  """"""
  preferences: AccountPreferences!
}

""""""
type IPCInfo {
  """"""
  ipcProfessionalBio: String
}

"""Subscription"""
type ActiveSubscriptionModel {
  """"""
  id: ID!

  """"""
  nextBillingDate: DateTime

  """"""
  plans: [PlanModel!]
}

"""Artist info"""
type Artist {
  """Primary ID"""
  id: ID!

  """Artist Id """
  artistId: Int!

  """True if artist is minor"""
  minor: Boolean!

  """First Name"""
  firstName: String!

  """Last Name"""
  lastName: String!

  """Created Date"""
  created: DateTime!

  """"""
  profiles(oldest: Boolean): [Profile!]

  """"""
  account: Account

  """"""
  artistSubscriptions: [SubscriptionModel!]

  """"""
  notificationPhone: String

  """"""
  mediaCounts(isLocked: Boolean!): [MediaCount!]
}

"""Talent Profile - May be associated with Account"""
type Profile {
  """Primary ID"""
  id: ID!

  """Primary ID"""
  profileId: ID!

  """stores/holds the id of the person who has deactivated the profile"""
  deactivatedBy: Float

  """"""
  profileStatusId: Int

  """Created at Date"""
  created: DateTime

  """GUID"""
  guid: String

  """Manager Email"""
  managerEmail: String

  """Note"""
  note: String

  """Other experiences"""
  otherExperiences: String

  """Parent Name"""
  parent: String

  """Note about piercing"""
  piercingNote: String

  """The minimum age a talent can play"""
  playableAgeMax: Float

  """The maximum age a talent can play"""
  playableAgeMin: Float

  """The age a talent can play"""
  playableAge: Float

  """Date of pregnancy"""
  pregnancy: DateTime @deprecated(reason: "This field is deprecated and will be deleted once the compatible changes at the front end will be added everyewhere for pregnancyDue reference. Use pregnancyDue instead")

  """Date of pregnancy"""
  pregnancyDue: DateTime

  """Profession"""
  profession: String

  """Project Type"""
  projectType: String

  """Stage Name"""
  stageName: String!

  """Blurb"""
  blurb: String

  """Tattoo Note"""
  tattooNote: String

  """Updated at Date"""
  updated: DateTime

  """has Representation"""
  hasRepresentation: Boolean

  """media assets"""
  profileMedia: [ProfileMedia!]

  """Is minor"""
  minor: Boolean

  """Date of birth"""
  dateOfBirth: DateTime

  """Hide credit year"""
  hideCreditYear: Boolean!

  """Default submission note"""
  defaultSubmissionNote: String

  """If Profile is overscaled"""
  isOverscaled: Boolean!

  """Overscale Note"""
  overscaleNote: String

  """Profile Account System Role"""
  profileAccountRole: String

  """"""
  cover: Media

  """Profile Artist ID"""
  artistId: Float

  """
  Access Token of a Profile, generated by Granting Access or Creating a Profile
  """
  profileAccessToken: String

  """ProfileAccessToken created date"""
  profileAccessTokenCreated: DateTime

  """"""
  ageInYears: Boolean

  """Work permit expiration date"""
  workPermitExp: DateTime

  """Roster hidden"""
  rosterHidden: Boolean

  """Search hidden"""
  searchHidden: Boolean

  """Job Persuing Type(s)"""
  pursuing: [Pursuing!]

  """"""
  accountId: Float

  """"""
  organizations: [Organization!]

  """"""
  organization: Organization

  """"""
  profileMainOrganization: Organization

  """"""
  profileMainDivision: Organization

  """Gender Appearance(s)"""
  genderAppearances: [GenderAppearance!]

  """Ethnic Appearance(s)"""
  ethnicAppearances: [ProfileEthnicAppearance!]

  """Talent unions"""
  talentUnions: [TalentProfileUnion!]

  """Gender Identities"""
  profileGenderIdentities: [ProfileGenderIdentity!]

  """Working Locations"""
  workingLocations: [ProfileWorkingLocation!]

  """Profile shoe sizes"""
  profileShoeSizes: [ProfileShoeSize!]!

  """Profile tattoo"""
  tattoo: Tattoo

  """Profile Pants"""
  profilePants: [Pants!]!

  """Profile TshirtSize"""
  profileTshirtSizes: [TShirtSize!]!

  """Profile general size"""
  profileSizes: [ProfileSize!]!

  """Profile pets"""
  profilePets: [ProfilePet!]!

  """Profile piercings"""
  profilePiercings: [Piercing!]!

  """Profile vehicles"""
  profileVehicles: [ProfileVehicle!]!

  """Wardrobes"""
  profileWardrobes: [ProfileWardrobe!]

  """Notes for the profile"""
  notes: [Note!]!

  """Last note for the profile"""
  lastNote: Note

  """Conflicts for the profile"""
  conflicts: [ProfileConflict!]!

  """Profile Credits"""
  credits: [Credit!]!

  """Profile Credits Count"""
  creditsCount: Int!

  """Profile Status Object"""
  profileStatus: ProfileStatus

  """Bust Object"""
  bust: Bust

  """Coat Object"""
  coat: Coat

  """Cup size Object"""
  cupSize: CupSize

  """Dress size Object"""
  dressSize: ClothesSize

  """Hat size Object"""
  hatSize: HatSize

  """Hip size Object"""
  hipSize: Hip

  """Glove size Object"""
  gloveSize: Glove

  """Inseam size Object"""
  inseam: Inseam

  """Chest size Object"""
  chestSize: ChestSize

  """Neck size Object"""
  neck: Neck

  """Underbust size Object"""
  underbust: UnderBust

  """SeekingRepresentation Object"""
  seekingRepresentations: [SeekingRepresentation!]

  """profileVisibility Object"""
  profileVisiblities: [ProfileVisibility!]

  """Sleeve Object"""
  sleeve: Sleeve

  """Waist Object"""
  waist: Waist

  """Hair Color Object"""
  hairColor: HairColor

  """Hair Style Object"""
  hairStyle: HairStyle

  """Multiple Birth Object"""
  multipleBirth: MultipleBirth

  """Height Object"""
  height: Height

  """Weight Object"""
  weight: Weight

  """Willingness Objects"""
  willingness: [Willingness!]!

  """Eye Color Object"""
  eyeColor: EyeColor

  """Get the artist media profile"""
  profile: Profile!

  """Facial Hair Type(s)"""
  facialHair: [FacialHair!]

  """Get profile bookouts"""
  profileBookOuts: [ProfileBookOuts!]!

  """Checks if profile have granted access to roster"""
  accessGranted: Boolean!

  """Unique Attribute Type(s)"""
  uniqueAttributes: [UniqueAttribute!]

  """Skills and their Levels"""
  skills: [ProfileSkill!]

  """Document type(s)"""
  documentTypes: [Document!]

  """Profile photo assets"""
  photos(
    """Field is deprecated. Use cover field instead"""
    isPrimary: Boolean
  ): [ProfileMedia!]

  """Profile audio assets"""
  audios: [ProfileMedia!]

  """Profile video assets"""
  videos: [ProfileMedia!]

  """Profile document assets"""
  documents: [ProfileMedia!]

  """All profile media"""
  mediaAssets: [ProfileMedia!]

  """Profile's primary photo"""
  mediaSummary: [MediaCount!]!

  """Sport equipments"""
  sportEquipments: [ProfileSportEquipment!]

  """Prop Type(s)"""
  props: [ProfileProp!]

  """The Profile List ids where current profile participated"""
  profileLists: [Int!]!

  """Submission request's media assets"""
  submissionRequestMedia(roleId: Float!): [SubmissionMedia!]!

  """Returns submission"""
  submission(roleId: Float!): Submission

  """Profile has resume"""
  hasResume: Boolean

  """Profile has video reel"""
  hasVideoReel: Boolean

  """Profile has audio reel"""
  hasAudioReel: Boolean

  """User's resume document"""
  resume: ProfileMedia

  """"""
  isActive: Boolean!

  """
  Returns true if profile was deactivated by a Rep user, returns false if
  profile was deactivated by a Talent, returns null when there is no information
  about the deactivating account
  """
  isDeactivatedByReps: Boolean

  """"""
  isDropped: Boolean!

  """"""
  isInactive: Boolean!

  """Identify the personal or represented profile."""
  isPersonal: Boolean!

  """Identify represented profile"""
  isRepresented: Boolean!

  """Profile Type"""
  profileType: ProfileType

  """"""
  billingItems: [BillingItemModel!]

  """"""
  selectionType(roleId: Float!): ProfileSelectionType!

  """"""
  hasAuditionHistory(organizationId: Float): Boolean!

  """Profile email"""
  talentEmail: String

  """Profile phone"""
  phone: String

  """Dynamic field. Based on profile status and representative type"""
  contactInfo: ProfileContactInfo

  """talent's contacts regardless representative status"""
  talentContactInfo: ProfileContactInfo

  """"""
  isPlayableAgeLockedToTalent: Boolean!

  """"""
  talentFolders(folderId: Int!): [PresentationFolderTalentPresence!]
}

"""Profile Media"""
type ProfileMedia {
  """"""
  id: ID!

  """"""
  media: Media!

  """"""
  profileMediaId: Float!

  """"""
  order: Float!

  """"""
  isPrimary: Boolean!

  """Deprecated"""
  hidden: Boolean! @deprecated(reason: "This field is redundant as profile media visibility depends only on existence in profile_media table.")

  """"""
  created: DateTime!

  """"""
  photosCount: Int @deprecated(reason: "See the B21-2790: As for the photosCount field, it shouldn't be there at all. Profile photos count should be returned in a different place.")
}

""""""
type Media {
  """Primary ID"""
  id: ID!

  """"""
  guid: String!

  """"""
  mediaId: Int!

  """"""
  accountId: Float!

  """"""
  name: String

  """"""
  filename: String

  """"""
  size: Int

  """"""
  height: Int

  """"""
  width: Int

  """"""
  transformation: MediaTransformation

  """"""
  length: Float

  """"""
  created: DateTime

  """"""
  updated: DateTime

  """"""
  tag: String

  """"""
  url: String

  """"""
  mediaParentId: Float

  """"""
  thumbnail: Media

  """"""
  purpose: MediaPurpose!

  """"""
  isLocked: Boolean

  """"""
  fileType: MediaFileType!

  """"""
  mediaType: MediaType

  """"""
  mediaStatus: MediaStatus!

  """"""
  mediaStorageStatus: MediaStorageStatus!

  """"""
  moderationStatus: MediaModerationStatus!

  """"""
  transformations: [Media!]!

  """"""
  thumbnailUrl: String

  """"""
  fileKey: String

  """"""
  uploadPath: String @deprecated(reason: "use url field instead")

  """"""
  resizedPaths: [String!]! @deprecated(reason: "use url field instead")
}

""""""
type MediaTransformation {
  """"""
  xAxis: Float

  """"""
  yAxis: Float

  """"""
  width: Float

  """"""
  height: Float

  """"""
  rotate: Float

  """"""
  startOffset: String
}

"""MediaPurpose object"""
type MediaPurpose {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""Media File Types"""
type MediaFileType {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int

  """MediaType"""
  mediaType: MediaType!
}

"""MediaType  object"""
type MediaType {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int

  """"""
  mediaVersionTypes: [MediaVersionType!]!

  """"""
  isRequestable: Boolean!
}

"""Media Version Types"""
type MediaVersionType {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int

  """"""
  portraitHeight: Float!

  """"""
  portraitWidth: Float!

  """"""
  landscapeHeight: Float!

  """"""
  landscapeWidth: Float!
}

"""MediaStatus object"""
type MediaStatus {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""Media Storage Status object"""
type MediaStorageStatus {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""MediaModerationStatus object"""
type MediaModerationStatus {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""Pursuing object"""
type Pursuing {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""Organization object"""
type Organization {
  """Primary ID"""
  id: Int!

  """Parent organization ID"""
  organizationParentId: Int

  """Organization name"""
  name: String

  """Parent Organization name"""
  parentName: String

  """Abbreviation"""
  abbreviation: String

  """System role ID"""
  sytemRoleId: Int

  """Logo media ID"""
  logoMediaId: Int

  """Tile scheme ID"""
  tileSchemeId: Int

  """"""
  representationCategoryList: [Int!]

  """Representation type ID"""
  representationTypeId: Int

  """Note"""
  note: String

  """Project casting director"""
  projectCastingDirector: String

  """Project casting associate"""
  projectCastingAssociate: String

  """Project casting assistant"""
  projectCastingAssistant: String

  """Schedule address note"""
  scheduleAddressNote: String

  """Website url"""
  websiteUrl: String

  """Diversity disclaimer"""
  diversityDisclaimer: String

  """Profile list ID"""
  profileListId: Int

  """Creator ID"""
  creatorId: Int

  """Tells whether it is organization or division"""
  isOrganization: Boolean

  """Last updated/modified datetime"""
  lastUpdated: DateTime

  """Organization status"""
  status: Float

  """"""
  linkedAccount: Float!

  """"""
  created: DateTime

  """"""
  linkedDivisionId: Float

  """"""
  profileCount: Float

  """"""
  accountCount: Float

  """Organization phone list"""
  phone: [String!]!

  """"""
  organizationStatus: [OrganizationStatus!]!

  """Organization profiles"""
  profiles: [Profile!]!

  """"""
  representationProfile: [Profile!]!

  """"""
  tags: [Tag!]!

  """Organization accounts"""
  accounts(statusIds: [Int!]): [Account!]!

  """"""
  representationCategory: [RepresentationCategory!]

  """"""
  representationType: [RepresentationType!]!

  """Linked organizations"""
  linkedOrganizations: [Organization!]!

  """Linked organizations"""
  addresses: [Address!]

  """"""
  contacts: [Contact!]

  """"""
  dmas: [Dma!]

  """"""
  country: [Country!]!

  """"""
  features: [Feature!]

  """"""
  representationAgeCategory: [RepresentationAgeCategory!]

  """"""
  organizationPhone: [Phone!]

  """"""
  divisions: [Organization!]!

  """"""
  linkedDivisions: [Organization!]!

  """"""
  linkedAccountDivision: [Organization!]!

  """"""
  logo: Media

  """"""
  parentOrganization: Organization

  """"""
  representationTypes: [RepresentationType!]!

  """"""
  searchDivisions: [Organization!]!
}

"""Organization Status"""
type OrganizationStatus {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""Tag object"""
type Tag {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int

  """Selectable Flag"""
  selectable: Boolean!

  """parent object"""
  parentObject: Tag

  """child objects"""
  childObjects: [Tag!]!
}

""""""
type RepresentationCategory {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

""""""
type RepresentationType {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""Address object type"""
type Address {
  """Address Id"""
  id: Int!

  """Line #1 of address"""
  line1: String!

  """Line #2 of address"""
  line2: String!

  """Line #3 of address"""
  line3: String!

  """Postal code"""
  postalCode: String!

  """City"""
  city: String!

  """Note"""
  note: String!

  """Other detail"""
  otherDetail: String!

  """Division state ID"""
  stateId: Int!

  """"""
  state: State

  """"""
  country: Country
}

"""State"""
type State {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int

  """Country Id"""
  country: Country!
}

"""Project Union"""
type Country {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int

  """Continent"""
  continent: Continent!

  """Currency"""
  currency: Currency

  """Unit System"""
  unitSystem: UnitSystem!

  """"""
  regions: [Region!]

  """Supporting country id"""
  supportingCountry: Country
}

"""Continent object"""
type Continent {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""Unit System object"""
type UnitSystem {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""Region"""
type Region {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int

  """country"""
  country: Country

  """dma objects"""
  dmas: [Dma!]!
}

"""DMA for Profile"""
type Dma {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int

  """child objects"""
  region: Region
}

"""Contact information"""
type Contact {
  """Contact ID"""
  id: ID!

  """"""
  contactId: Float!

  """Defines organization main contact"""
  mainContact: Boolean!

  """Name"""
  name: String

  """Email"""
  email: String

  """Phone"""
  phone: String!

  """"""
  enabled: Boolean!
}

""""""
type Feature {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""RepresentationAgeCategory object"""
type RepresentationAgeCategory {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""Gender Appearance object"""
type GenderAppearance {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""Profile Gender Identity"""
type ProfileEthnicAppearance {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int

  """Order of appearance"""
  order: Float
}

"""Talent Profile Union"""
type TalentProfileUnion {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int

  """Selectable Flag"""
  selectable: Boolean!

  """Represents talent union for all true values"""
  talentEnabled: Boolean!

  """Represents project union for all true values"""
  projectEnabled: Boolean!

  """parent object"""
  parentObject: TalentUnion

  """child objects"""
  childObjects: [TalentUnion!]!

  """country"""
  country: Country

  """Talent Union membership Id (usually number)"""
  talentMembershipId: String
}

"""Talent Union"""
type TalentUnion {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int

  """Selectable Flag"""
  selectable: Boolean!

  """Represents talent union for all true values"""
  talentEnabled: Boolean!

  """Represents project union for all true values"""
  projectEnabled: Boolean!

  """parent object"""
  parentObject: TalentUnion

  """child objects"""
  childObjects: [TalentUnion!]!

  """country"""
  country: Country
}

"""Profile Gender Identity"""
type ProfileGenderIdentity {
  """Profile Gender Identity"""
  genderIdentity: GenderIdentity!

  """Profile Gender Other Identity Note """
  genderOtherIdentityNote: String
}

"""Gender Identitie object"""
type GenderIdentity {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""Profile working location"""
type ProfileWorkingLocation {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int

  """child objects"""
  region: Region

  """Profile working location id"""
  profileWorkingLocationId: Float!
}

"""Profile Shoe Size"""
type ProfileShoeSize {
  """Primary ID"""
  id: ID!

  """ShoeSize for US"""
  shoeSizeUS: String!

  """ShoeSize for EU"""
  shoeSizeEU: String!

  """ShoeSize for UK"""
  shoeSizeUK: String!

  """ShoeSize for AU"""
  shoeSizeAU: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Gender"""
  category: BasicSetting!

  """short order"""
  sortOrder: Float!

  """Shoe Modifier"""
  shoeModifier: ShoeModifier
}

"""Base object"""
type BasicSetting {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""Shoe modifier object"""
type ShoeModifier {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""Tattoo object"""
type Tattoo {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""Measurement object"""
type Pants {
  """Primary ID"""
  id: Int!

  """Size for US"""
  sizeUS: String!

  """Size for EU"""
  sizeEU: String!

  """Size for UK"""
  sizeUK: String!

  """Size for AU"""
  sizeAU: String!

  """Numeric size"""
  sizeNumeric: Int!

  """Is this enbaled?"""
  enabled: Boolean!

  """Gender"""
  gender: BasicSetting!
}

"""Tshirt Measurement object"""
type TShirtSize {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int

  """Gender"""
  category: BasicSetting!
}

"""Profile Size"""
type ProfileSize {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int

  """Size gender ID"""
  sizeGenderId: ID!

  """"""
  category: BasicSetting!

  """Size Modifier"""
  sizeModifier: SizeModifier
}

"""Size Modifier object"""
type SizeModifier {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""Profile pet"""
type ProfilePet {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int

  """Selectable Flag"""
  selectable: Boolean!

  """parent object"""
  parentObject: Pet

  """child objects"""
  childObjects: [Pet!]!

  """Profile pet relation id"""
  profilePetId: Float

  """Pet Size"""
  petSize: PetSize

  """Count"""
  count: Float
}

"""Pet object"""
type Pet {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int

  """Selectable Flag"""
  selectable: Boolean!

  """parent object"""
  parentObject: Pet

  """child objects"""
  childObjects: [Pet!]!
}

"""PetSize object"""
type PetSize {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""Piercing object"""
type Piercing {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""Profile vehicle"""
type ProfileVehicle {
  """Profile vehicle relation id"""
  profileVehicleId: Float

  """Vehicle Name"""
  vehicleName: String

  """Vehicle Year"""
  vehicleYear: Float

  """Vehicle type make"""
  vehicleTypeMake: VehicleTypeMake
}

"""Vehicle Type Make"""
type VehicleTypeMake {
  """Vehicle type make id"""
  id: Float!

  """Vehicle type"""
  type: VehicleType!

  """Vehicle make"""
  make: VehicleMake!
}

"""Vehicle Type object"""
type VehicleType {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int

  """Selectable Flag"""
  selectable: Boolean!

  """parent object"""
  parentObject: VehicleType

  """child objects"""
  childObjects: [VehicleType!]!
}

"""VehicleMake object"""
type VehicleMake {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""Profile wardrobe"""
type ProfileWardrobe {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int

  """Selectable Flag"""
  selectable: Boolean!

  """parent object"""
  parentObject: Wardrobe

  """child objects"""
  childObjects: [Wardrobe!]!

  """Profile wardrobe relation id"""
  profileWardrobeId: Float
}

"""Wardrobe object"""
type Wardrobe {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int

  """Selectable Flag"""
  selectable: Boolean!

  """parent object"""
  parentObject: Wardrobe

  """child objects"""
  childObjects: [Wardrobe!]!
}

"""Note object type"""
type Note {
  """Note Id"""
  id: Int!

  """Account id who created the note"""
  accountId: Int!

  """"""
  entityId: BigInt!

  """Comment"""
  comment: String!

  """Created Date"""
  created: DateTime!

  """"""
  entityType: EntityType!

  """"""
  noteType: NoteType

  """"""
  noteModifier: NoteModifier

  """Get Account object for the Note"""
  account: Account!

  """Project status at the moment when note was added"""
  projectStatus: ProjectStatus
}

"""Entity Type object"""
type EntityType {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""Note Type object"""
type NoteType {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""Note Modifier object"""
type NoteModifier {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int

  """"""
  entityType: EntityType!
}

"""Project Status Object"""
type ProjectStatus {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

""""""
type ProfileConflict {
  """"""
  id: ID

  """"""
  profileConflictId: Float

  """"""
  profileId: Float

  """"""
  conflictId: Float

  """"""
  expiration: DateTime

  """"""
  note: String

  """"""
  code: String
}

"""Credit Attribute"""
type Credit {
  """Primary ID"""
  id: ID!

  """Year"""
  year: Int

  """Profile ID"""
  profileId: Int!

  """Highlighted"""
  highlighted: Boolean!

  """Credit Type Sort ordering"""
  sortOrder: Int!

  """Credit Sort ordering"""
  creditOrder: Int!

  """Created at Date"""
  created: DateTime!

  """Updated at Date"""
  updated: DateTime!

  """"""
  guid: String!

  """Profile Credit Type Id"""
  profileCreditTypeId: Float!

  """Title"""
  title: String

  """Role title"""
  role: String

  """The director of the Project"""
  director: String

  """"""
  creditMedia: [Media!]!

  """Credit Type"""
  creditType: CreditType
}

"""CreditType object"""
type CreditType {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

""""""
type Bust {
  """Primary ID"""
  id: ID!

  """Is this enbaled?"""
  enabled: Boolean!

  """Centimeters"""
  cm: Int!

  """Metric Centimeters"""
  METRIC_CENTIMETERS: Int!

  """Inches"""
  inch: Float!

  """Imperial Inches"""
  IMPERIAL_INCHES: Float!

  """Imperial Feet Inches"""
  IMPERIAL_FEET_INCHES: String

  """Inches rounded"""
  inchRounded: String!

  """Show in imperial UI"""
  showInImperialUI: Boolean!
}

"""Coat object"""
type Coat {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""Cup sizes object"""
type CupSize {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""Dress size object"""
type ClothesSize {
  """Primary ID"""
  id: Int!

  """Size for US"""
  sizeUS: String!

  """Size for EU"""
  sizeEU: String!

  """Size for UK"""
  sizeUK: String!

  """Size for AU"""
  sizeAU: String!

  """Numeric size"""
  sizeNumeric: Int!

  """Is this enbaled?"""
  enabled: Boolean!
}

"""General hat size object"""
type HatSize {
  """Primary ID"""
  id: ID!

  """size"""
  size: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """inch"""
  inch: String!

  """cm"""
  cm: Float!
}

""""""
type Hip {
  """Primary ID"""
  id: ID!

  """Is this enbaled?"""
  enabled: Boolean!

  """Centimeters"""
  cm: Int!

  """Metric Centimeters"""
  METRIC_CENTIMETERS: Int!

  """Inches"""
  inch: Float!

  """Imperial Inches"""
  IMPERIAL_INCHES: Float!

  """Imperial Feet Inches"""
  IMPERIAL_FEET_INCHES: String

  """Inches rounded"""
  inchRounded: String!

  """Show in imperial UI"""
  showInImperialUI: Boolean!
}

""""""
type Glove {
  """Primary ID"""
  id: ID!

  """Is this enbaled?"""
  enabled: Boolean!

  """Centimeters"""
  cm: Int!

  """Metric Centimeters"""
  METRIC_CENTIMETERS: Int!

  """Inches"""
  inch: Float!

  """Imperial Inches"""
  IMPERIAL_INCHES: Float!

  """Imperial Feet Inches"""
  IMPERIAL_FEET_INCHES: String

  """Inches rounded"""
  inchRounded: String!

  """Show in imperial UI"""
  showInImperialUI: Boolean!
}

""""""
type Inseam {
  """Primary ID"""
  id: ID!

  """Is this enbaled?"""
  enabled: Boolean!

  """Centimeters"""
  cm: Int!

  """Metric Centimeters"""
  METRIC_CENTIMETERS: Int!

  """Inches"""
  inch: Float!

  """Imperial Inches"""
  IMPERIAL_INCHES: Float!

  """Imperial Feet Inches"""
  IMPERIAL_FEET_INCHES: String

  """Inches rounded"""
  inchRounded: String!

  """Show in imperial UI"""
  showInImperialUI: Boolean!
}

""""""
type ChestSize {
  """Primary ID"""
  id: ID!

  """Is this enbaled?"""
  enabled: Boolean!

  """Centimeters"""
  cm: Int!

  """Metric Centimeters"""
  METRIC_CENTIMETERS: Int!

  """Inches"""
  inch: Float!

  """Imperial Inches"""
  IMPERIAL_INCHES: Float!

  """Imperial Feet Inches"""
  IMPERIAL_FEET_INCHES: String

  """Inches rounded"""
  inchRounded: String!

  """Show in imperial UI"""
  showInImperialUI: Boolean!
}

""""""
type Neck {
  """Primary ID"""
  id: ID!

  """Is this enbaled?"""
  enabled: Boolean!

  """Centimeters"""
  cm: Int!

  """Metric Centimeters"""
  METRIC_CENTIMETERS: Int!

  """Inches"""
  inch: Float!

  """Imperial Inches"""
  IMPERIAL_INCHES: Float!

  """Imperial Feet Inches"""
  IMPERIAL_FEET_INCHES: String

  """Inches rounded"""
  inchRounded: String!

  """Show in imperial UI"""
  showInImperialUI: Boolean!
}

""""""
type UnderBust {
  """Primary ID"""
  id: ID!

  """Is this enbaled?"""
  enabled: Boolean!

  """Centimeters"""
  cm: Int!

  """Metric Centimeters"""
  METRIC_CENTIMETERS: Int!

  """Inches"""
  inch: Float!

  """Imperial Inches"""
  IMPERIAL_INCHES: Float!

  """Imperial Feet Inches"""
  IMPERIAL_FEET_INCHES: String

  """Inches rounded"""
  inchRounded: String!

  """Show in imperial UI"""
  showInImperialUI: Boolean!
}

"""SeekingRepresentation object"""
type SeekingRepresentation {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""Profile Visibility object"""
type ProfileVisibility {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

""""""
type Sleeve {
  """Primary ID"""
  id: ID!

  """Is this enbaled?"""
  enabled: Boolean!

  """Centimeters"""
  cm: Int!

  """Metric Centimeters"""
  METRIC_CENTIMETERS: Int!

  """Inches"""
  inch: Float!

  """Imperial Inches"""
  IMPERIAL_INCHES: Float!

  """Imperial Feet Inches"""
  IMPERIAL_FEET_INCHES: String

  """Inches rounded"""
  inchRounded: String!

  """Show in imperial UI"""
  showInImperialUI: Boolean!
}

""""""
type Waist {
  """Primary ID"""
  id: ID!

  """Is this enbaled?"""
  enabled: Boolean!

  """Centimeters"""
  cm: Int!

  """Metric Centimeters"""
  METRIC_CENTIMETERS: Int!

  """Inches"""
  inch: Float!

  """Imperial Inches"""
  IMPERIAL_INCHES: Float!

  """Imperial Feet Inches"""
  IMPERIAL_FEET_INCHES: String

  """Inches rounded"""
  inchRounded: String!

  """Show in imperial UI"""
  showInImperialUI: Boolean!
}

"""HairColor object"""
type HairColor {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""HairStyle object"""
type HairStyle {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""MultipleBirth object"""
type MultipleBirth {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

""""""
type Height {
  """Primary ID"""
  id: ID!

  """Is this enbaled?"""
  enabled: Boolean!

  """Centimeters"""
  cm: Int!

  """Metric Centimeters"""
  METRIC_CENTIMETERS: Int!

  """Inches"""
  inch: Float!

  """Imperial Inches"""
  IMPERIAL_INCHES: Float!

  """Imperial Feet Inches"""
  IMPERIAL_FEET_INCHES: String

  """Inches rounded"""
  inchRounded: String!

  """Show in imperial UI"""
  showInImperialUI: Boolean!
}

"""General weight object"""
type Weight {
  """Primary ID"""
  id: ID!

  """Is this enabled?"""
  enabled: Boolean!

  """pounds"""
  lbs: Int!

  """Imperial pounds"""
  IMPERIAL_LBS: Int!

  """Metric kg"""
  METRIC_KG: Float!

  """"""
  kg: Float!

  """"""
  kgRounded: Float!

  """Show in imperial UI"""
  showInMetricUI: Boolean!
}

"""Willingness object"""
type Willingness {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int

  """Selectable Flag"""
  selectable: Boolean!

  """parent object"""
  parentObject: Willingness

  """child objects"""
  childObjects: [Willingness!]!
}

"""Eye color object"""
type EyeColor {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""Facial Hair object"""
type FacialHair {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

""""""
type ProfileBookOuts {
  """Profile Id"""
  id: ID

  """Profile Id"""
  profileId: Int

  """Start Date"""
  startDate: DateTime

  """End Date"""
  endDate: DateTime

  """Profile Book Out Id"""
  profileBookoutId: Int
}

"""Unique Attributes"""
type UniqueAttribute {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""Skill and it`s level"""
type ProfileSkill {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int

  """Selectable Flag"""
  selectable: Boolean!

  """parent object"""
  parentObject: Skill

  """child objects"""
  childObjects: [Skill!]!

  """Profile skill id"""
  profileSkillId: Float

  """Profile media id"""
  profileMediaId: Float

  """Skill level"""
  level: SkillLevel
}

"""Skill object"""
type Skill {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int

  """Selectable Flag"""
  selectable: Boolean!

  """parent object"""
  parentObject: Skill

  """child objects"""
  childObjects: [Skill!]!
}

"""SkillLevel object"""
type SkillLevel {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""General size object"""
type Document {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int

  """Selectable Flag"""
  selectable: Boolean!

  """parent object"""
  parentObject: Document

  """child objects"""
  childObjects: [Document!]!

  """country"""
  country: Country
}

"""Media Count"""
type MediaCount {
  """Media Type"""
  type: MediaType!

  """Count of the media"""
  count: Int!
}

"""Profile sport equipment"""
type ProfileSportEquipment {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int

  """Selectable Flag"""
  selectable: Boolean!

  """parent object"""
  parentObject: SportEquipment

  """child objects"""
  childObjects: [SportEquipment!]!

  """Profile sport equipment relation id"""
  profileSportEquipmentId: Float
}

"""Sport Equipment object"""
type SportEquipment {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int

  """Selectable Flag"""
  selectable: Boolean!

  """parent object"""
  parentObject: SportEquipment

  """child objects"""
  childObjects: [SportEquipment!]!
}

"""Profile prop"""
type ProfileProp {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int

  """Selectable Flag"""
  selectable: Boolean!

  """parent object"""
  parentObject: Prop

  """child objects"""
  childObjects: [Prop!]!

  """Profile prop relation id"""
  profilePropId: Float
}

"""Prop object"""
type Prop {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int

  """Selectable Flag"""
  selectable: Boolean!

  """parent object"""
  parentObject: Prop

  """child objects"""
  childObjects: [Prop!]!
}

"""Submission Media object"""
type SubmissionMedia {
  """Media ID"""
  id: ID!

  """"""
  guid: String!

  """Media ID"""
  mediaId: Int!

  """"""
  accountId: Float!

  """Customized media name"""
  name: String

  """"""
  filename: String

  """"""
  size: Int

  """"""
  height: Int

  """"""
  width: Int

  """"""
  transformation: MediaTransformation

  """"""
  length: Float

  """"""
  created: DateTime

  """"""
  updated: DateTime

  """"""
  tag: String

  """"""
  url: String

  """"""
  mediaParentId: Float

  """"""
  thumbnail: Media

  """"""
  purpose: MediaPurpose!

  """"""
  isLocked: Boolean

  """"""
  fileType: MediaFileType!

  """"""
  mediaType: MediaType

  """"""
  mediaStatus: MediaStatus!

  """"""
  mediaStorageStatus: MediaStorageStatus!

  """"""
  moderationStatus: MediaModerationStatus!

  """"""
  transformations: [Media!]!

  """"""
  thumbnailUrl: String

  """"""
  fileKey: String

  """"""
  uploadPath: String @deprecated(reason: "use url field instead")

  """"""
  resizedPaths: [String!]! @deprecated(reason: "use url field instead")

  """Order"""
  orderOfAppearance: Int!

  """Is Primary"""
  isPrimary: Boolean!

  """Enabled"""
  enabled: Boolean!
}

"""Submission object"""
type Submission {
  """Primary ID"""
  id: BigInt!

  """Tile Scheme Value ID"""
  tileSchemeValueId: Int

  """Profile Working Location ID"""
  profileWorkingLocationId: Int

  """Created Date"""
  created: DateTime!

  """Note"""
  note: String!

  """Over scale note"""
  overscaleNote: String

  """Represents that profile is overscale or not"""
  isOverscale: Boolean

  """Submission Role Id"""
  roleId: Int!

  """Submission Role Name"""
  roleName: String

  """Submission Profile Id"""
  profileId: Int!

  """Is Scheduled"""
  scheduled: Boolean

  """Role associated with the submission"""
  role: Role!

  """Submission creator account"""
  creatorAccount: Account!

  """Submission creator company name"""
  companyName: String!

  """Profile associated with the subscription"""
  profile(returnDeleted: Boolean): Profile

  """Identify the submission is cutomized or not."""
  isCustomized: Boolean!

  """Schedule slot detail associated with submission"""
  scheduleSlotDetail: SubmissionScheduleSlot

  """Snapshot media assets"""
  snapshotMedia: Media

  """Customized Profile Working Location"""
  workingLocation: ProfileWorkingLocation

  """Submission's media assets"""
  media: [SubmissionMedia!]!

  """Submission's cover"""
  cover: Media

  """Submission request's media assets"""
  requestMedia: [SubmissionMedia!]!

  """Determines has submission video reel or not"""
  hasVideoReel: Boolean!

  """Determines has submission audio reel or not"""
  hasAudioReel: Boolean!

  """"""
  mediaCount(isPrimary: Boolean, requested: Boolean): [MediaCount!]!

  """Notes for the Submission object"""
  notes: [Note!]!

  """Notes for the Submission object"""
  fastcastNotes: [Note!]!

  """Last note for the submission"""
  lastNote: Note

  """Submission Status"""
  submissionStatus: SubmissionStatus

  """Submission Previous Status"""
  submissionPreviousStatus: SubmissionStatus

  """Tile schema value object"""
  tileSchemaValue: TileSchemaValue

  """Picks count left in presentations"""
  picksCount: Int

  """Comments count left in presentations"""
  commentsCount: Int

  """Schedule Info"""
  scheduleInfo: ScheduleInfo

  """"""
  pickedBy(clientNames: [String!]): [SubmissionPick!]!

  """"""
  contactInfo: ProfileContactInfo

  """"""
  isCreatedByCD: Boolean

  """SSubmissions with responses details"""
  submissionResponses: SubmissionResponses
}

"""Role object"""
type Role {
  """Role Primary ID"""
  id: ID!

  """Created Time"""
  created: DateTime

  """Role Parent ID"""
  roleParentId: ID

  """Role project ID"""
  projectId: ID!

  """Role name"""
  name: String!

  """Project name"""
  projectName: String

  """Role internal name"""
  internalName: String

  """Is rush call"""
  rushCall: Boolean!

  """Is scale"""
  scale: Boolean!

  """Scale modifier ID"""
  scaleModifierId: ID

  """Is rate type"""
  rateType: Boolean!

  """Role rate"""
  rate: Float

  """Role max rate"""
  rateMax: Float

  """Spot"""
  spot: String

  """Role age min month"""
  ageMinMonth: Float

  """Role age max month"""
  ageMaxMonth: Float

  """Role description"""
  description: String!

  """Sexy description"""
  sexualSituationDescription: String!

  """Wardrobe"""
  wardrobe: String

  """Location ID"""
  locationId: ID

  """Work requirement"""
  workRequirement: String!

  """The submission due date"""
  submissionDueDate: DateTime

  """Is close submissions"""
  closeSubmissions: Boolean

  """The submission instruction"""
  submissionInstruction: String!

  """The media request instruction"""
  requestMediaInstruction: String!

  """Rate note"""
  rateNote: String

  """Rate summary"""
  rateSummary: String

  """Ages of roles showing in years"""
  ageInYears: Boolean!

  """Ethnicity / nationality description"""
  roleEthnicityNationality: String!

  """
  Stores information about the date when the Project Creator user last saw submissions
  """
  lastViewedSubmissionPage: DateTime

  """Number of intended talents"""
  backgroundTalentIntended: Int

  """Is role published after others"""
  isNew: Boolean

  """Project system role id"""
  systemRoleId: ID

  """
  Role published date when role become ACTIVE Or REQUEST_ADDITIONAL_SUBMISSIONS
  """
  rolePublishedAt: DateTime

  """Order of appearance on which sequence role will be displayed"""
  orderOfAppearance: Int

  """Role public GUID"""
  guid: String

  """Gender """
  genderAppearance: [GenderAppearance!]

  """Project"""
  project: Project!

  """Returns list of role date with location"""
  locationDates: [RoleDateWithLocation!]

  """Sexual situations"""
  sexualSituations: [SexualSituation!]

  """Role Ethnic Appearance"""
  ethnicAppearance: [EthnicAppearance!]!

  """Role skills"""
  skills: [Skill!]!

  """Role Photos"""
  photos: [RoleMedia!]

  """Role Sides"""
  sides(checkSidesVisibility: Boolean): [RoleMedia!]

  """Role compensations"""
  compensations: [RoleCompensation!]

  """Displayed Role Union"""
  displayedRoleUnion: String!

  """Displayed Role Ethnic Appearance"""
  displayedRoleEthnicAppearance: String!

  """Displayed Role Ethnic Appearance"""
  displayedRoleGenderAppearance: String!

  """Currency Object"""
  currency: Currency

  """DMA"""
  location: Dma

  """Paid Type"""
  paidType: PaidType

  """Role Sides Visibility"""
  sidesVisibility: RoleSidesVisibility

  """Role Status"""
  roleStatus: RoleStatus

  """Role Previous Status"""
  rolePreviousStatus: RoleStatus

  """Rate Per Object"""
  ratePer: RatePerType

  """Role Type"""
  roleType: RoleType

  """Role Union"""
  roleUnion: RoleUnion

  """TimeZone"""
  timeZone: TimeZone

  """Age range"""
  ageRange: String

  """
  Submissions for the role. Fetches all the submissions for a role filtered by
  the scheduled criteria for all users which system role are not equal to
  Agent(reps), otherwise submissions will be filtered by profile organization
  participation id.
  """
  submissions(
    """Is scheduled?"""
    scheduled: Boolean

    """Is audition scheduled?"""
    auditionScheduled: Boolean

    """Is callback scheduled?"""
    callbackScheduled: Boolean

    """Submision Status CODE by which submissions have to be filtered"""
    statusCode: [String!]

    """Profile Type CODE by which submissions have to be filtered"""
    profileTypeCode: String
  ): [Submission!]!

  """"""
  repSelectedSubmissionsCount: Int!

  """"""
  repSubmittedSubmissionsCount: Int!

  """Info about paired reps orgs"""
  rolePairedOrganizations(pageInput: PageInput = {pageSize: 100, pageNumber: 1}): RoleOrganizationPairPaginatedResult!

  """Organizationwise submissions for the role"""
  organizationSubmissions(organizationId: Float): [Submission!]!

  """Publication settings for the role"""
  publicationSettings: [RolePublicationSetting!]!

  """"""
  requestMediaTypes: [String!]!

  """"""
  projectReleaseLocations: [Dma!]!

  """"""
  countOfPairedRepsAndCB: RoleCountOfPairedRepsAndCB!

  """"""
  submissionCount: [RoleSubmissionCount!]!

  """"""
  isReadOnlyAccess: Boolean!

  """"""
  fieldRestrictions: [RoleFieldRestriction!]

  """"""
  repStatus: RepRoleStatusEnum!

  """Project Unions"""
  projectUnion: [ProjectUnionDetails!]

  """"""
  projectType: ProjectType
}

"""Project object"""
type Project {
  """Primary ID"""
  id: ID!

  """Project name"""
  name: String

  """Project internal name"""
  internalName: String

  """Project type"""
  projectType: ProjectType

  """Project type"""
  projectStatus: ProjectStatus

  """"""
  lastModifiedAt: DateTime!

  """Parent ID"""
  projectParentId: ID

  """Is hidden"""
  hidden: Boolean

  """Tile scheme ID"""
  tileSchemeId: ID

  """Submissions due"""
  submissionsDueBy: DateTime

  """Request brief"""
  requestBrief: Boolean

  """Request brief instruction"""
  requestBriefInstruction: String

  """Casting director"""
  castingDirector: String

  """Casting associate"""
  castingAssociate: String

  """Casting assistant"""
  castingAssistant: String

  """Contact phone"""
  contactPhone: String

  """Contact email"""
  contactEmail: String

  """Contact info permissions"""
  contactInfoPermissions: Boolean

  """Usage"""
  usage: String

  """Additional provisions"""
  additionalProvisions: String

  """Synopsis"""
  synopsis: String

  """Project Notes"""
  notes: String

  """Network"""
  network: String

  """Studio"""
  studio: String

  """Executive producer"""
  executiveProducer: String

  """Producer"""
  producer: String

  """Writer"""
  writer: String

  """Director"""
  director: String

  """Production company"""
  productionCompany: String

  """AD agency"""
  adAgency: String

  """Photographer"""
  photographer: String

  """Conflict note"""
  conflictNote: String

  """Project rate"""
  rate: String

  """Legacy project ID"""
  legacyProjectId: ID

  """Legacy instance ID"""
  legacyInstance: String

  """Legacy instance URL"""
  legacyInstanceUrl: String

  """Do not use this field"""
  creationDate: DateTime @deprecated(reason: "Use 'created' field instead")

  """Updated date"""
  updated: DateTime

  """
  Project Attachment Security Id - show attachments to reps only - otherwise it will be also viewable on casting billboard
  """
  attachmentDisplayTypeId: ID

  """"""
  canTalentSubmitSelfTape: Boolean

  """"""
  isAuditionInPerson: Boolean

  """"""
  isSpecificLocation: Boolean

  """Total records count"""
  totalCount: Float

  """Project Id"""
  projectId: Float

  """Project name"""
  projectName: String

  """Project internal name"""
  projectInternalName: String

  """Account name"""
  accountName: String

  """Casting company name"""
  castingCompany: String

  """Created date"""
  created: DateTime

  """Last Role Published Date"""
  lastRolePublishedDate: DateTime

  """Release Locations DMA"""
  releaseLocations: [Dma!]

  """Project public GUID"""
  guid: String

  """Created By Account Id"""
  createdBy: Float

  """"""
  roleDefaults: RoleDefaults

  """Project audition address"""
  auditionAddress: AuditionAddress

  """Project organizations"""
  organizations: [Organization!]

  """Project accounts"""
  accounts: [Account!]

  """Parent Project- eg series """
  parent: Project

  """Project asset"""
  media: [Media!]

  """Project side visibility"""
  sideVisibility: ProjectSidesVisibility

  """Project Conflicts"""
  projectConflicts: [Conflict!]

  """Project Unions"""
  projectUnion: [ProjectUnionDetails!]

  """Displayed Project Union"""
  displayedProjectUnion: String!

  """Project roles"""
  roles(roleStatusFilter: RoleStatusFilter, roleIds: [Int!]): [Role!]

  """Is project created by a PC user"""
  createdByPC: Boolean!

  """"""
  fieldRestrictions: [ProjectFieldRestriction!]

  """"""
  pendingRequestCount: Int
}

"""Available project types"""
type ProjectType {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int

  """Selectable Flag"""
  selectable: Boolean!

  """parent object"""
  parentObject: ProjectType

  """child objects"""
  childObjects: [ProjectType!]!
}

"""Role Default Options"""
type RoleDefaults {
  """"""
  locationDates: [RoleDefaultDateWithLocation!]

  """"""
  publicationSettings: [RoleDefaultPublicationSetting!]

  """"""
  wardrobe: String

  """"""
  workRequirements: String

  """"""
  fieldRestrictions: [RoleFieldRestriction!]
}

""""""
type RoleDefaultDateWithLocation {
  """Name of City"""
  locationName: String

  """CODE of DateType enum"""
  dateTypeCode: String!

  """Start date"""
  startDate: DateTime

  """End date"""
  endDate: DateTime
}

""""""
type RoleDefaultPublicationSetting {
  """Publication Setting CODE"""
  publicationSetting: String!

  """List of DMAs CODEs for talents"""
  dmas: [String!]

  """List of Representation Age Categories CODEs"""
  repAgeCategories: [String!]

  """List of Representation Categories CODEs"""
  repCategories: [String!]

  """List of Representation Type CODEs"""
  repTypes: [String!]

  """Representative List ID Selected"""
  representativeListId: Int

  """Representative IDs"""
  representativeIds: [Int!]
}

""""""
type RoleFieldRestriction {
  """"""
  fields: [RoleFieldsRestrictionsFieldOption!]!

  """"""
  restrictedFor: ProjectFieldRestrictionOption!
}

""""""
enum RoleFieldsRestrictionsFieldOption {
  """"""
  auditionCity

  """"""
  callbackCity

  """"""
  fittingCity

  """"""
  workingCity
}

""""""
enum ProjectFieldRestrictionOption {
  """"""
  AGENT

  """"""
  CastingBillboard
}

"""Audition address"""
type AuditionAddress {
  """Address ID"""
  id: ID!

  """Country"""
  country: [Country!]

  """Address Line 1"""
  addressLine1: String

  """Address Line 2"""
  addressLine2: String

  """City"""
  city: String

  """ZIP/Postal Code"""
  postalCode: String

  """Location notes"""
  locationNotes: String

  """State / Province"""
  state: [State!]
}

"""Project Sides Visibility object"""
type ProjectSidesVisibility {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""Conflict object"""
type Conflict {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int

  """array of parent objects"""
  parentObject: [Conflict!]!

  """child objects"""
  childObjects: [Conflict!]!

  """Selectable Flag"""
  selectable: Boolean!
}

"""Project Union Details"""
type ProjectUnionDetails {
  """Union details"""
  union: TalentUnion!

  """Union contract id"""
  contractId: String

  """Union contract status id"""
  contractStatusId: Int

  """Contract Status"""
  contractStatus: ContractStatus
}

"""Contract Status Object"""
type ContractStatus {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""Role status filter options"""
enum RoleStatusFilter {
  """"""
  Active

  """"""
  Archived

  """"""
  Published

  """"""
  UnderReview

  """"""
  All
}

""""""
type ProjectFieldRestriction {
  """"""
  fields: [ProjectFieldRestrictionFieldOption!]!

  """"""
  restrictedFor: ProjectFieldRestrictionOption!
}

""""""
enum ProjectFieldRestrictionFieldOption {
  """"""
  producer

  """"""
  productionCompany

  """"""
  director

  """"""
  adAgency

  """"""
  network

  """"""
  studio

  """"""
  writer

  """"""
  executiveProducer

  """"""
  photographer
}

"""Role Date with Location object"""
type RoleDateWithLocation {
  """RoleDateLocation Primary ID"""
  id: ID!

  """"""
  startDate: DateTime

  """"""
  endDate: DateTime

  """"""
  cityName: String

  """Role Date Type"""
  roleDateType: RoleDateType
}

"""Role Date type object"""
type RoleDateType {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""SexualSituation object"""
type SexualSituation {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""EthnicAppearance object"""
type EthnicAppearance {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""Role media object"""
type RoleMedia {
  """ID of role and media objects relation"""
  id: ID!

  """ID of role and media objects relation"""
  roleMediaId: Int!

  """Media object"""
  mediaObject: Media!

  """Is this sides media"""
  isSides: Boolean!

  """Name"""
  name: String

  """Role Side Url"""
  url: String
}

"""Role compensation object"""
type RoleCompensation {
  """"""
  roleCompensationId: Float!

  """"""
  compensation: Compensation!

  """"""
  otherCompensation: String
}

"""Compensation object"""
type Compensation {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""PaidType object"""
type PaidType {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""Role Sides Visibility object"""
type RoleSidesVisibility {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""Role Status object"""
type RoleStatus {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""RatePerType object"""
type RatePerType {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""RoleType  object"""
type RoleType {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int

  """"""
  projectType: ProjectType!

  """"""
  roleTarget: RoleTarget!
}

"""Role Target object"""
type RoleTarget {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""RoleUnion object"""
type RoleUnion {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""Time Zone object"""
type TimeZone {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int

  """"""
  gmtOffset: Float!

  """"""
  dstOffset: Float!

  """"""
  rawOffset: Float!

  """"""
  standardName: String!

  """"""
  abbreviation: String

  """"""
  daylightSavingsCode: String

  """"""
  codeBrowser: String!
}

"""Page Input object"""
input PageInput {
  """Page size"""
  pageSize: Int!

  """Page number"""
  pageNumber: Int!
}

"""Paginated result with [RoleOrganizationPair] objects"""
type RoleOrganizationPairPaginatedResult {
  """Total count of rows"""
  totalCount: Int!

  """List of RoleOrganizationPair objects"""
  objects: [RoleOrganizationPair!]!

  """Current page"""
  page: Int!

  """Total pages"""
  totalPages: Int!

  """Last key """
  lastKey: String
}

"""Info about paired (with role) reps org"""
type RoleOrganizationPair {
  """Reps Organization"""
  organization: Organization!

  """"""
  organizationHasSubmissionsToRole: Boolean!
}

"""Role Publication setting"""
type RolePublicationSetting {
  """Publication Setting object"""
  publicationSetting: PublicationSetting!

  """List of Dma objects"""
  dmas: [Dma!]

  """List of Representation Age Categories objects"""
  repAgeCategories: [RepresentationAgeCategory!]

  """List of Representation Categories objects"""
  repCategories: [RepresentationCategory!]

  """List of Representation Type objects"""
  repTypes: [RepresentationType!]

  """Representative List ID"""
  representativeListIds: [ID!]!
}

"""Publication Setting object"""
type PublicationSetting {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""Role Paired orgs info"""
type RoleCountOfPairedRepsAndCB {
  """
  Represents the Count of paired reps organizations for current published role,
  or count of potentially paired reps organizations for not published role 
  """
  repsOrgs: Int!

  """Is current role shared with Casting Billboard users(talents)"""
  isSharedWithCB: Boolean!
}

""""""
type RoleSubmissionCount {
  """"""
  roleId: Int!

  """"""
  submissionStatus: SubmissionStatus!

  """"""
  count: Int!
}

"""SubmissionStatus object"""
type SubmissionStatus {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

""""""
enum RepRoleStatusEnum {
  """"""
  IN_REVIEW

  """"""
  REVIEWED
}

"""Submission Schedule Slot Details"""
type SubmissionScheduleSlot {
  """Submission Id"""
  submissionId: ID!

  """Schedule Id"""
  scheduleId: ID!

  """Schedule Date"""
  scheduleDate: DateTime

  """Schedule StartTime"""
  startTime: DateTime

  """Schedule EndTime"""
  endTime: DateTime

  """Calendar Slot StartTime """
  slotStartTime: DateTime

  """Calendar Slot EndTime"""
  slotEndTime: DateTime

  """Timezone Id"""
  timeZoneId: ID!

  """Time Zone"""
  timeZone: TimeZone
}

"""Publication Setting object"""
type TileSchemaValue {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""Schedule Information"""
type ScheduleInfo {
  """Submission Id"""
  submissionId: BigInt

  """Audition Scheduled"""
  auditionScheduled: Boolean

  """Callback Scheduled"""
  callbackScheduled: Boolean
}

""""""
type SubmissionPick {
  """ID of Presentation Group Talent Pick"""
  id: Int!

  """"""
  userName: String!
}

""""""
type ProfileContactInfo {
  """"""
  email: String

  """"""
  phone: String
}

"""Submissions Responses"""
type SubmissionResponses {
  """Submission Id"""
  submissionId: Int!

  """Submission Responses"""
  responses: [SubmissionResponse!]
}

"""Submission Response"""
type SubmissionResponse {
  """Submission Id"""
  submissionId: Int

  """Schedule Id"""
  scheduleId: Int

  """Response Id"""
  responseId: String!

  """"""
  masterId: String!

  """Request Name"""
  name: String

  """Status"""
  status: String!

  """Request Type"""
  requestType: String!

  """Chat Topic Key"""
  chatTopicKey: String!

  """"""
  chatTopic: ChatTopic
}

""""""
type ChatTopic {
  """"""
  unreadMessageCount: Int

  """"""
  lastUserMessage: ChatMessageModel

  """"""
  topicKey: String!
}

"""Chat Message"""
type ChatMessageModel {
  """"""
  id: ID!

  """"""
  createdAt: DateTime!

  """"""
  messageBody: String!

  """"""
  senderOrgId: Int

  """"""
  senderAccountId: Int

  """"""
  messageType: ChatMessageType!

  """"""
  topicKey: String!

  """"""
  ownMessage: Boolean!

  """"""
  senderAccount: Account

  """"""
  senderOrganization: Organization
}

""""""
enum ChatMessageType {
  """"""
  User

  """"""
  System
}

"""ProfileType object"""
type ProfileType {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

""""""
enum ProfileSelectionType {
  """"""
  NONE

  """"""
  SELECTED

  """"""
  SUBMITTED

  """"""
  SELECTED_FOR_OTHER_ROLES

  """"""
  SUBMITTED_FOR_OTHER_ROLES
}

"""Presentation Folder Talent Presence"""
type PresentationFolderTalentPresence {
  """Presentation Folder Id"""
  folderId: Float!

  """Presentation Folder Name"""
  folderName: String!
}

""""""
type OrganizationInfo {
  """Primary ID"""
  id: Int!

  """"""
  name: String!

  """"""
  category: [RepresentationCategory!]!

  """"""
  categoryName: [String!]!
}

""""""
type AccountUrlType {
  """Primary ID"""
  id: ID!

  """"""
  accountId: Float!

  """"""
  urlTypeId: Float!

  """"""
  url: String!

  """"""
  urlType: UrlType!
}

"""Url Type object"""
type UrlType {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

""""""
type AccountStatus {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

""""""
type LanguageInfo {
  """Primary ID"""
  id: Int!

  """"""
  name: String!

  """"""
  locale: String!

  """"""
  baseLocale: String!

  """"""
  code: String!

  """"""
  enabled: Boolean!
}

"""Account billing info"""
type AccountBillingInfo {
  """"""
  firstName: String

  """"""
  lastName: String

  """"""
  email: String

  """"""
  code: String

  """"""
  cardType: String

  """"""
  lastFour: String

  """"""
  cardExpirationYear: Int

  """"""
  cardExpirationMonth: Int
}

"""Notification Notitifcation Type Subscription object type"""
type NotificationTypeNotificationSubscription {
  """Subscription Creator Id"""
  accountId: Int!

  """Artist Id"""
  artistId: Int!

  """Organization Id"""
  organizationId: Int

  """Created Date"""
  created: DateTime!

  """"""
  entityType: EntityType

  """"""
  roleTarget: RoleTarget @deprecated(reason: "Use \"entity\" field instead")

  """"""
  rolePaidType: PaidType @deprecated(reason: "Use \"entity\" field instead")

  """"""
  projectType: ProjectType @deprecated(reason: "Use \"entity\" field instead")

  """"""
  entity: NotificationEntityDetails

  """"""
  notificationType: NotificationType

  """"""
  notificationNature: NotificationNature

  """Notification Type Id"""
  notificationTypeId: Int

  """Notification Nature Id"""
  notificationNatureId: Int

  """Notification Id"""
  notificationId: Int
}

""""""
union NotificationEntityDetails = TalentUnion | ProjectType | RoleTarget | PaidType

"""Notification Type object"""
type NotificationType {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""Notification Nature object"""
type NotificationNature {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

""""""
type AccountPreferences {
  """"""
  schedule: AccountSchedulePreferences

  """"""
  projectListFilters: AccountProjectFiltersPreferences
}

""""""
type AccountSchedulePreferences {
  """"""
  thumbnailType: ThumbnailType!

  """"""
  showUnionStatus: Boolean!
}

""""""
enum ThumbnailType {
  """"""
  headshot

  """"""
  snapshot
}

""""""
type AccountProjectFiltersPreferences {
  """"""
  isKidsRolesOnly: Boolean

  """"""
  hasRequests: Boolean

  """"""
  hasSelects: Boolean

  """"""
  hasSubmissions: Boolean

  """"""
  projectViewStatus: ProjectViewFilterType

  """"""
  projectName: String

  """"""
  submissionDueDate: String

  """"""
  roleName: String

  """Role Types Search Settings"""
  roleTypes: [RoleType!]

  """Project Types Search Settings"""
  projectTypes: [ProjectType!]

  """Project Union Search Settings"""
  projectUnion: [TalentUnion!]

  """Region Search Settings"""
  projectRegion: [Dma!]

  """Casting Organisation Search Settings"""
  castingOrganizations: [Organization!]
}

"""Project Viewed Filter"""
enum ProjectViewFilterType {
  """"""
  Viewed

  """"""
  Unviewed

  """"""
  All
}

""""""
type RepresentationSystemRole {
  """Primary ID"""
  id: ID!

  """"""
  systemRoleId: Float

  """"""
  code: String

  """"""
  name: String

  """"""
  internal: Boolean

  """"""
  sortOrder: Float

  """"""
  enabled: Boolean
}

""""""
type AccountsSystemRoleCodes {
  """Primary ID"""
  id: ID!

  """"""
  accountId: Float!

  """"""
  systemRoleCodes: [String!]!
}

"""Account info"""
type UnclaimedAccount {
  """Primary ID"""
  id: Int!

  """"""
  firstName: String!

  """"""
  lastName: String!

  """"""
  email: String!

  """Legacy email"""
  legacyEmail: String

  """Legacy instance"""
  legacyInstance: String

  """Legacy login"""
  legacyLogin: String

  """
  Holds the value to reset the original account email till it gets verified
  """
  emailToReset: String

  """
  Holds the generated token value, till it gets expired or the email update verification done successfully.
  """
  emailResetToken: String

  """"""
  phone: String!

  """"""
  termsOfUse: Boolean!

  """"""
  lastLogin: DateTime

  """"""
  countryId: Int!

  """"""
  accountStatusId: Int!

  """"""
  linkedToAccountId: Int

  """"""
  created: DateTime!

  """Updated at Date"""
  updated: DateTime

  """"""
  systemRolesIds: [Float!]

  """"""
  ipcInfo: IPCInfo!

  """"""
  isAdmin: Boolean!

  """"""
  linkedOrganization: Float

  """"""
  former: Boolean

  """"""
  passwordHash: String

  """"""
  loginAttemptCount: Int

  """"""
  loginAttemptFailedAt: DateTime

  """"""
  organizationDivisionsCount: Float

  """
  Roster invitation token to hold the invitation token till logged in user will not create the profile using it
  """
  rosterInvitationToken: String

  """"""
  languageLocaleId: Int

  """"""
  subscription: ActiveSubscriptionModel

  """"""
  lastArtistId: Int

  """system roles"""
  systemRoles: [String!]

  """Checks if the current/switched user is PC or not"""
  isInPCContext: Boolean!

  """Checks if user is in role Casting Director"""
  isCCD: Boolean!

  """Checks if user is in role Independent Project Creator"""
  isIPC: Boolean!

  """Checks if user is in role Independent Project Creator"""
  isAccountIPC: Boolean!

  """"""
  artists: [Artist!]!

  """"""
  accountSystemRoles: [SystemRole!]!

  """"""
  accountOrganization(systemRoleCode: [String!]): [OrganizationInfo!]

  """"""
  linkedAccountOrganization: [Organization!]

  """"""
  linkedAccountDivisionCount: Float

  """"""
  accountOrganizationDivisionsAccessCount: Float

  """"""
  accountOrganizationDivisionsAccess: [Organization!]!

  """"""
  accountUrlTypes: [AccountUrlType!]

  """Organizations that user belongs to"""
  organizations(systemRoleCode: [String!]): [Organization!]

  """Divisions that user belongs to"""
  divisions: [Organization!]

  """Returns organization features"""
  features: [Feature!]

  """Account status object"""
  accountStatus: AccountStatus

  """Language Info object"""
  language: LanguageInfo

  """Time zone object"""
  timeZone: TimeZone

  """Country object"""
  country: Country

  """Account billing info"""
  billingInfo: AccountBillingInfo!

  """"""
  notificationSubscriptions: [NotificationTypeNotificationSubscription!]!

  """"""
  legacyProfileStatus: ProfileStatus

  """"""
  preferences: AccountPreferences!

  """"""
  profileId: Float
}

"""Get Onboarded Active Paypal Accounts Input"""
input AccountPaypalLocationInput {
  """Paypal locations"""
  locations: [PaypalLocation!]!
}

""""""
enum PaypalLocation {
  """"""
  AU

  """"""
  EU
}

""""""
type AccountActiveOnboardedPaypal {
  """"""
  accountId: Float!

  """"""
  artistId: Float!

  """"""
  legacyInstance: String!

  """"""
  paypalCode: String!
}

"""Artist Media"""
type ArtistMedia {
  """Primary ID"""
  id: ID!

  """The media object"""
  media: Media!

  """Media Id"""
  mediaId: ID!

  """Profile media details - is primary, order"""
  artistMediaProfile: [ArtistMediaProfile!]
}

"""Basic profile media"""
type ArtistMediaProfile {
  """Primary ID"""
  id: ID!

  """Primary ID"""
  profileId: ID!

  """stores/holds the id of the person who has deactivated the profile"""
  deactivatedBy: Float

  """"""
  profileStatusId: Int

  """Created at Date"""
  created: DateTime

  """GUID"""
  guid: String

  """Manager Email"""
  managerEmail: String

  """Note"""
  note: String

  """Other experiences"""
  otherExperiences: String

  """Parent Name"""
  parent: String

  """Note about piercing"""
  piercingNote: String

  """The minimum age a talent can play"""
  playableAgeMax: Float

  """The maximum age a talent can play"""
  playableAgeMin: Float

  """The age a talent can play"""
  playableAge: Float

  """Date of pregnancy"""
  pregnancy: DateTime @deprecated(reason: "This field is deprecated and will be deleted once the compatible changes at the front end will be added everyewhere for pregnancyDue reference. Use pregnancyDue instead")

  """Date of pregnancy"""
  pregnancyDue: DateTime

  """Profession"""
  profession: String

  """Project Type"""
  projectType: String

  """Stage Name"""
  stageName: String!

  """Blurb"""
  blurb: String

  """Tattoo Note"""
  tattooNote: String

  """Updated at Date"""
  updated: DateTime

  """has Representation"""
  hasRepresentation: Boolean

  """media assets"""
  profileMedia: [ProfileMedia!]

  """Is minor"""
  minor: Boolean

  """Date of birth"""
  dateOfBirth: DateTime

  """Hide credit year"""
  hideCreditYear: Boolean!

  """Default submission note"""
  defaultSubmissionNote: String

  """If Profile is overscaled"""
  isOverscaled: Boolean!

  """Overscale Note"""
  overscaleNote: String

  """Profile Account System Role"""
  profileAccountRole: String

  """"""
  cover: Media

  """Profile Artist ID"""
  artistId: Float

  """
  Access Token of a Profile, generated by Granting Access or Creating a Profile
  """
  profileAccessToken: String

  """ProfileAccessToken created date"""
  profileAccessTokenCreated: DateTime

  """"""
  ageInYears: Boolean

  """Work permit expiration date"""
  workPermitExp: DateTime

  """Roster hidden"""
  rosterHidden: Boolean

  """Search hidden"""
  searchHidden: Boolean

  """Job Persuing Type(s)"""
  pursuing: [Pursuing!]

  """"""
  accountId: Float

  """"""
  organizations: [Organization!]

  """"""
  organization: Organization

  """"""
  profileMainOrganization: Organization

  """"""
  profileMainDivision: Organization

  """Gender Appearance(s)"""
  genderAppearances: [GenderAppearance!]

  """Ethnic Appearance(s)"""
  ethnicAppearances: [ProfileEthnicAppearance!]

  """Talent unions"""
  talentUnions: [TalentProfileUnion!]

  """Gender Identities"""
  profileGenderIdentities: [ProfileGenderIdentity!]

  """Working Locations"""
  workingLocations: [ProfileWorkingLocation!]

  """Profile shoe sizes"""
  profileShoeSizes: [ProfileShoeSize!]!

  """Profile tattoo"""
  tattoo: Tattoo

  """Profile Pants"""
  profilePants: [Pants!]!

  """Profile TshirtSize"""
  profileTshirtSizes: [TShirtSize!]!

  """Profile general size"""
  profileSizes: [ProfileSize!]!

  """Profile pets"""
  profilePets: [ProfilePet!]!

  """Profile piercings"""
  profilePiercings: [Piercing!]!

  """Profile vehicles"""
  profileVehicles: [ProfileVehicle!]!

  """Wardrobes"""
  profileWardrobes: [ProfileWardrobe!]

  """Notes for the profile"""
  notes: [Note!]!

  """Last note for the profile"""
  lastNote: Note

  """Conflicts for the profile"""
  conflicts: [ProfileConflict!]!

  """Profile Credits"""
  credits: [Credit!]!

  """Profile Credits Count"""
  creditsCount: Int!

  """Profile Status Object"""
  profileStatus: ProfileStatus

  """Bust Object"""
  bust: Bust

  """Coat Object"""
  coat: Coat

  """Cup size Object"""
  cupSize: CupSize

  """Dress size Object"""
  dressSize: ClothesSize

  """Hat size Object"""
  hatSize: HatSize

  """Hip size Object"""
  hipSize: Hip

  """Glove size Object"""
  gloveSize: Glove

  """Inseam size Object"""
  inseam: Inseam

  """Chest size Object"""
  chestSize: ChestSize

  """Neck size Object"""
  neck: Neck

  """Underbust size Object"""
  underbust: UnderBust

  """SeekingRepresentation Object"""
  seekingRepresentations: [SeekingRepresentation!]

  """profileVisibility Object"""
  profileVisiblities: [ProfileVisibility!]

  """Sleeve Object"""
  sleeve: Sleeve

  """Waist Object"""
  waist: Waist

  """Hair Color Object"""
  hairColor: HairColor

  """Hair Style Object"""
  hairStyle: HairStyle

  """Multiple Birth Object"""
  multipleBirth: MultipleBirth

  """Height Object"""
  height: Height

  """Weight Object"""
  weight: Weight

  """Willingness Objects"""
  willingness: [Willingness!]!

  """Eye Color Object"""
  eyeColor: EyeColor

  """Get the artist media profile"""
  profile: Profile!

  """Facial Hair Type(s)"""
  facialHair: [FacialHair!]

  """Get profile bookouts"""
  profileBookOuts: [ProfileBookOuts!]!

  """Checks if profile have granted access to roster"""
  accessGranted: Boolean!

  """Unique Attribute Type(s)"""
  uniqueAttributes: [UniqueAttribute!]

  """Skills and their Levels"""
  skills: [ProfileSkill!]

  """Document type(s)"""
  documentTypes: [Document!]

  """Profile photo assets"""
  photos(
    """Field is deprecated. Use cover field instead"""
    isPrimary: Boolean
  ): [ProfileMedia!]

  """Profile audio assets"""
  audios: [ProfileMedia!]

  """Profile video assets"""
  videos: [ProfileMedia!]

  """Profile document assets"""
  documents: [ProfileMedia!]

  """All profile media"""
  mediaAssets: [ProfileMedia!]

  """Profile's primary photo"""
  mediaSummary: [MediaCount!]!

  """Sport equipments"""
  sportEquipments: [ProfileSportEquipment!]

  """Prop Type(s)"""
  props: [ProfileProp!]

  """The Profile List ids where current profile participated"""
  profileLists: [Int!]!

  """Submission request's media assets"""
  submissionRequestMedia(roleId: Float!): [SubmissionMedia!]!

  """Returns submission"""
  submission(roleId: Float!): Submission

  """Profile has resume"""
  hasResume: Boolean

  """Profile has video reel"""
  hasVideoReel: Boolean

  """Profile has audio reel"""
  hasAudioReel: Boolean

  """User's resume document"""
  resume: ProfileMedia

  """"""
  isActive: Boolean!

  """
  Returns true if profile was deactivated by a Rep user, returns false if
  profile was deactivated by a Talent, returns null when there is no information
  about the deactivating account
  """
  isDeactivatedByReps: Boolean

  """"""
  isDropped: Boolean!

  """"""
  isInactive: Boolean!

  """Identify the personal or represented profile."""
  isPersonal: Boolean!

  """Identify represented profile"""
  isRepresented: Boolean!

  """Profile Type"""
  profileType: ProfileType

  """"""
  billingItems: [BillingItemModel!]

  """"""
  selectionType(roleId: Float!): ProfileSelectionType!

  """"""
  hasAuditionHistory(organizationId: Float): Boolean!

  """Profile email"""
  talentEmail: String

  """Profile phone"""
  phone: String

  """Dynamic field. Based on profile status and representative type"""
  contactInfo: ProfileContactInfo

  """talent's contacts regardless representative status"""
  talentContactInfo: ProfileContactInfo

  """"""
  isPlayableAgeLockedToTalent: Boolean!

  """"""
  talentFolders(folderId: Int!): [PresentationFolderTalentPresence!]

  """Order of display for the media"""
  order: Int

  """Is media primary (primary photo, video reel or audio reel)"""
  isPrimary: Boolean!

  """Deprecated"""
  hidden: Boolean! @deprecated(reason: "This field is redundant as profile media visibility depends only on existence in profile_media table.")
}

""""""
input FilterInput {
  """"""
  keys: [ID!]!

  """"""
  keyType: KeyType!
}

"""Type of the identifier to use for dictionary lookup."""
enum KeyType {
  """"""
  id

  """"""
  code
}

"""MediaMediaType"""
type MediaMediaType {
  """"""
  mediaId: Int!

  """"""
  mediaTypeId: Int!

  """"""
  mediaType: MediaType
}

"""Paginated result with [AuditionSession] objects"""
type AuditionSessionPaginatedResult {
  """Total count of rows"""
  totalCount: Int!

  """List of AuditionSession objects"""
  objects: [AuditionSession!]!

  """Current page"""
  page: Int!

  """Total pages"""
  totalPages: Int!

  """Last key """
  lastKey: String
}

"""Audition session"""
type AuditionSession {
  """ID of audition session"""
  id: Int!

  """Name of audition session"""
  name: String

  """Note of audition session"""
  note: String

  """Project id"""
  projectId: Int

  """Order of appearence of audition session"""
  order: Int!

  """Created date of audition session"""
  created: DateTime!

  """Submissions Count"""
  submissionCount: BigInt

  """Returns Account object who`s created the audition session"""
  createdBy: Account

  """Gets AuditionSource object"""
  source: AuditionSource
}

"""AuditionSource object"""
type AuditionSource {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""Audition Talent Pool"""
type AuditionTalentPool {
  """ID of audition session"""
  id: ID

  """ID of audition session"""
  auditionSessionId: Int

  """List of Submissions"""
  submissions: [Submission!]

  """Slot Start Time"""
  startTime: DateTime

  """Slot End Time"""
  endTime: DateTime

  """Schedule Date"""
  scheduleDate: DateTime
}

"""Paginated result with [AuditionHistory] objects"""
type AuditionHistoryPaginatedResult {
  """Total count of rows"""
  totalCount: Int!

  """List of AuditionHistory objects"""
  objects: [AuditionHistory!]!

  """Current page"""
  page: Int!

  """Total pages"""
  totalPages: Int!

  """Last key """
  lastKey: String
}

""""""
type AuditionHistory {
  """"""
  projectName: String!

  """"""
  roleName: String!

  """"""
  date: DateTime!

  """"""
  submissionStatus: SubmissionStatus!

  """"""
  auditionGroups: [AuditionHistorySessionGroupItem!]

  """"""
  snapshotMedia: Media
}

""""""
type AuditionHistorySessionGroupItem {
  """"""
  id: Int!

  """"""
  name: String!

  """"""
  auditionSession: AuditionHistorySessionItem!
}

""""""
type AuditionHistorySessionItem {
  """"""
  id: Int!

  """"""
  name: String!
}

"""Paginated result with [AuditionGroup] objects"""
type AuditionGroupPaginatedResult {
  """Total count of rows"""
  totalCount: Int!

  """List of AuditionGroup objects"""
  objects: [AuditionGroup!]!

  """Current page"""
  page: Int!

  """Total pages"""
  totalPages: Int!

  """Last key """
  lastKey: String
}

""""""
type AuditionGroup {
  """Id of audition session group"""
  id: Int!

  """Name of audition session group"""
  name: String

  """Id of audition session to which the audition session group is assigned"""
  auditionSessionId: Int!

  """Created date of audition group"""
  created: DateTime!

  """Updated date of audition group"""
  updated: DateTime

  """Submissions Count"""
  submissionCount: BigInt

  """Media Count"""
  mediaCount: [MediaCount!]

  """Group order"""
  order: Int

  """"""
  archived: Boolean

  """Gets Account object whos created the audition group"""
  createdBy: Account

  """Gets related to group submissions"""
  submissions(
    """Limit to get submissions list in Audition group summary"""
    pageSize: Float
  ): [Submission!]

  """Gets related to group media"""
  medias: [AuditionGroupMedia!]

  """Gets audition session"""
  auditionSession: AuditionSession

  """"""
  cover: Media
}

"""Represent relation between Audition Group and Media"""
type AuditionGroupMedia {
  """"""
  id: Int!

  """Id of media"""
  mediaId: Int!

  """Name of relation"""
  name: String!

  """Order of appearance"""
  order: Int!

  """Related media object"""
  media: Media!
}

"""Audition Group Talent"""
type AuditionGroupTalent {
  """Talent profile Id"""
  profileId: Int

  """Audition Group ids"""
  auditionGroupIds: [Int!]
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

""""""
enum NoteTypeEnum {
  """"""
  ADD_IN

  """"""
  ADMIN_NOTE

  """"""
  AGENT_NOTE

  """"""
  CD_TALENT_NOTE

  """"""
  FASTCAPTURE_NOTE

  """"""
  PERMANENT_NOTE

  """"""
  PERMANENT_SUBMISSION_NOTE

  """"""
  SUBMISSION_NOTE
}

"""Paginated result with [Note] objects"""
type NotePaginatedResult {
  """Total count of rows"""
  totalCount: Int!

  """List of Note objects"""
  objects: [Note!]!

  """Current page"""
  page: Int!

  """Total pages"""
  totalPages: Int!

  """Last key """
  lastKey: String
}

"""Notification Entity Subscription object type"""
type NotificationEntitySubscription {
  """Subscription Creator Id"""
  accountId: Int!

  """Artist Id"""
  artistId: Int!

  """Organization Id"""
  organizationId: Int

  """Created Date"""
  created: DateTime!

  """"""
  entityType: EntityType

  """"""
  roleTarget: RoleTarget @deprecated(reason: "Use \"entity\" field instead")

  """"""
  rolePaidType: PaidType @deprecated(reason: "Use \"entity\" field instead")

  """"""
  projectType: ProjectType @deprecated(reason: "Use \"entity\" field instead")

  """"""
  entity: NotificationEntityDetails

  """"""
  notificationType: NotificationType

  """"""
  notificationNature: NotificationNature

  """Notification Id"""
  id: ID

  """Notification Id"""
  notificationId: Int

  """Entity Id"""
  entityId: BigInt

  """Entity Type Id"""
  entityTypeId: Int
}

"""FFY Context input"""
input FFYContextInput {
  """"""
  artistIds: [Int!]!

  """"""
  roleIds: [Int!]!
}

"""Context object for roles fits for artist"""
type RolesFitForYouContext {
  """"""
  artists: [RolesFitForYouArtistContext!]!

  """"""
  project: RolesFitForYouProjectContext!

  """"""
  roles: [RolesFitForYouRoleContext!]!
}

"""Context object for FFY artist object"""
type RolesFitForYouArtistContext {
  """"""
  id: Float!

  """"""
  name: String!

  """"""
  subjectRolePart: String!

  """"""
  notificationSettingsURL: String!

  """"""
  manageEmailSettingsUrl: String!

  """"""
  toProfileId: Int
}

"""Context object for FFY project object"""
type RolesFitForYouProjectContext {
  """"""
  id: Float!

  """"""
  name: String!

  """"""
  type: String!

  """"""
  union: String!

  """"""
  castingCompany: RolesFitForYouCastingCompanyContext!

  """"""
  shootDate: String!

  """"""
  url: String!
}

"""Casting Company"""
type RolesFitForYouCastingCompanyContext {
  """"""
  name: String

  """"""
  message: String

  """"""
  logo: String
}

"""Context object for FFY role object"""
type RolesFitForYouRoleContext {
  """"""
  id: Float!

  """"""
  name: String!

  """"""
  type: String!

  """"""
  ageRange: String!

  """"""
  genderAppearance: String!

  """"""
  ethnicAppearance: String!

  """"""
  sexualSituations: String!

  """"""
  union: String

  """"""
  rateSummary: String!

  """"""
  description: String!

  """"""
  buttonText: String!

  """"""
  buttonURL: String!
}

""""""
type RolesPublishedContextNotificationContextAndRecipient {
  """"""
  to: String

  """"""
  toOrgId: Int

  """"""
  toAccountId: Int

  """"""
  toProfileId: Int

  """"""
  context: RolesPublishedContext!
}

"""Contex object for roles published notification"""
type RolesPublishedContext {
  """"""
  buttonURL: String!

  """"""
  manageEmailSettingsUrl: String!

  """"""
  messageForReps: String!

  """"""
  project: RolesPublishedProjectContext!

  """Published roles(currently or previously) which match divisions"""
  roles: [RolesPublishedRoleContext!]!

  """New published roles within the project"""
  newRoles: [RolesPublishedRoleContext!]

  """Count of additional roles not in newRoles or roles fields"""
  additionalRolesCount: Float
}

""""""
type RolesPublishedProjectContext {
  """"""
  name: String!

  """"""
  type: String!

  """"""
  unions: String!

  """"""
  castingCompany: RolesPublishedCastingCompanyContext!

  """"""
  creativeTeam: RolesPublishedCreativeTeamContext!

  """"""
  conflicts: String!

  """"""
  usageMessage: String!

  """"""
  additionalProvisionsMessage: String!

  """"""
  attachments: [String!]!

  """"""
  projectSynopsisMessage: String!

  """"""
  projectNotesMessage: String!

  """"""
  projectTypeId: Int!

  """"""
  projectUnionIds: [Int!]!
}

""""""
type RolesPublishedCastingCompanyContext {
  """"""
  name: String!

  """"""
  castingAssociate: String!

  """"""
  castingDirector: String!

  """"""
  castingAssistant: String!

  """"""
  logo: String!
}

""""""
type RolesPublishedCreativeTeamContext {
  """"""
  studio: String!

  """"""
  director: String!

  """"""
  executiveProducer: String!

  """"""
  adAgency: String!

  """"""
  writer: String!

  """"""
  photographer: String!
}

""""""
type RolesPublishedRoleContext {
  """"""
  roleName: String!

  """"""
  roleDetails: RolesPublishedRoleDetailsContext!
}

""""""
type RolesPublishedRoleDetailsContext {
  """"""
  id: Int!

  """"""
  roleTargetId: Int!

  """"""
  type: String!

  """"""
  genderAppearance: String!

  """"""
  ageRange: String!

  """"""
  ethnicAppearance: String!
}

"""Talent Access Profile Context input"""
input TalentAccessProfileContextInput {
  """"""
  email: String!

  """"""
  stageName: String!

  """"""
  organizationId: Int!

  """"""
  accessToken: String!

  """"""
  note: String
}

""""""
type TalentAccessProfileContextNotificationContextAndRecipient {
  """"""
  to: String

  """"""
  toOrgId: Int

  """"""
  toAccountId: Int

  """"""
  toProfileId: Int

  """"""
  context: TalentAccessProfileContext!
}

"""Contex object for talent access profile"""
type TalentAccessProfileContext {
  """"""
  messageFromRepresentative: String!

  """"""
  buttonURL: String!

  """"""
  manageEmailSettingsUrl: String!

  """"""
  organizationDivision: String!

  """"""
  organizationLogo: String!

  """"""
  profile: TalentAccessProfileDetailsContext!

  """"""
  buttonText: String!

  """"""
  expiresDays: Float!
}

"""Context object for talent access profile object"""
type TalentAccessProfileDetailsContext {
  """"""
  name: String!
}

"""Profile Direct Message Context input"""
input ProfileDirectMessageContextInput {
  """"""
  senderOrgId: Int!

  """"""
  roleId: Int
}

"""Context object for Profile Direct Message"""
type ProfileDirectMessageContextAndProfile {
  """"""
  organizationDivision: String!

  """"""
  organizationLogo: String!

  """"""
  role: ProfileDirectMessageRoleContext

  """"""
  project: ProfileDirectMessageProjectContext
}

"""SubContext object for Role in Profile Direct Message context"""
type ProfileDirectMessageRoleContext {
  """"""
  name: String!
}

"""SubContext object for Project in Profile Direct Message context"""
type ProfileDirectMessageProjectContext {
  """"""
  name: String!

  """"""
  castingCompanyName: String!
}

""""""
type BaseEmailContextNotificationContextAndRecipient {
  """"""
  to: String

  """"""
  toOrgId: Int

  """"""
  toAccountId: Int

  """"""
  toProfileId: Int

  """"""
  context: BaseEmailContext!
}

"""Context object for base email context"""
type BaseEmailContext {
  """"""
  heading: String!

  """"""
  receiverName: String!

  """"""
  roleCode: [String!]!

  """"""
  buttonText: String!

  """"""
  buttonURL: String!
}

""""""
type InternalWelcomeContextNotificationContextAndRecipient {
  """"""
  to: String

  """"""
  toOrgId: Int

  """"""
  toAccountId: Int

  """"""
  toProfileId: Int

  """"""
  context: InternalWelcomeContext!
}

"""Context object for internal welcome"""
type InternalWelcomeContext {
  """"""
  env: String!
}

""""""
type WelcomeContextNotificationContextAndRecipient {
  """"""
  to: String

  """"""
  toOrgId: Int

  """"""
  toAccountId: Int

  """"""
  toProfileId: Int

  """"""
  context: WelcomeContext!
}

"""Context object for welcome email."""
type WelcomeContext {
  """"""
  receiverName: String!

  """"""
  receiverEmail: String!
}

"""Schedule Reminder input"""
input ScheduleReminderInput {
  """Calendar Slot id."""
  calendarSlotId: Int!

  """Submission id."""
  submissionId: Int!

  """Calendar id."""
  calendarId: Int!

  """Calendar Type id."""
  calendarTypeId: Int!
}

"""
Schedule Reminder type. The Schedule Reminder is used on getScheduleReminiders
context to fill in template of reminder email sending to talent
"""
type ScheduleReminder {
  """"""
  to: String

  """Schedule reminder email context"""
  context: ScheduleReminderContext!
}

"""
Schedule Reminder Context type. The Schedule Reminder is used on
getScheduleReminiders context to fill in template of reminder email sending to talent
"""
type ScheduleReminderContext {
  """Schedule type"""
  scheduleType: String!

  """Email heading text"""
  heading: String!

  """Email sub heading text"""
  subHeading: String!

  """Reminder receiver email"""
  receiverEmail: String

  """URL to manage email settings"""
  manageEmailSettingsUrl: String!

  """Talent profile context"""
  profile: ScheduleReminderProfileContext!

  """Project context"""
  project: ScheduleReminderProjectContext!

  """Role context"""
  role: ScheduleReminderRoleContext!

  """Schedule date"""
  scheduleDate: String!

  """Schedule location"""
  scheduleLocation: String!

  """Schedule location notes"""
  locationNote: String

  """Instructions for talent"""
  instructionForTalent: String

  """Email divider text"""
  dividerText: String!

  """Open schedule button text"""
  buttonText: String!

  """Open schedule button URL"""
  buttonURL: String
}

"""Profile Context for Schedule reminder Context type."""
type ScheduleReminderProfileContext {
  """Profile ID"""
  id: Int!

  """Profile name"""
  name: String!

  """Profile photo URL"""
  primaryPhotoUrl: String!
}

"""Project Context for Schedule reminder Context type."""
type ScheduleReminderProjectContext {
  """Project Name"""
  name: String!

  """Project Casting Company"""
  castingCompany: ScheduleReminderCastingCompanyContext!
}

"""Casting company context for schedule reminder"""
type ScheduleReminderCastingCompanyContext {
  """Profile photo URL"""
  name: String!

  """Casting company logo"""
  logo: String!
}

"""Role Context for Schedule reminder Context type."""
type ScheduleReminderRoleContext {
  """Role Name"""
  name: String!
}

""""""
type PresentationSubmissionComment {
  """Presentation Group Talent Comment ID"""
  id: Int!

  """"""
  userName: String!

  """"""
  comment: String!

  """"""
  date: DateTime!

  """"""
  submissionId: BigInt!

  """Author's Account ID is exists"""
  createdBy: Int
}

"""Paginated result with [PresentationSubmissionComment] objects"""
type PresentationSubmissionCommentPaginatedResult {
  """Total count of rows"""
  totalCount: Int!

  """List of PresentationSubmissionComment objects"""
  objects: [PresentationSubmissionComment!]!

  """Current page"""
  page: Int!

  """Total pages"""
  totalPages: Int!

  """Last key """
  lastKey: String
}

""""""
type PresentationSubmissionFeedback {
  """"""
  commentsCount: Int!

  """"""
  pickedBy: [SubmissionPick!]!
}

"""Presentation"""
type Presentation {
  """GUID"""
  guid: ID!

  """ID of presentation"""
  id: Int!

  """Project ID of presentation"""
  projectId: Int

  """Name of presentation"""
  name: String!

  """Number of Folders in Presentation"""
  foldersCount: Int!

  """Creator Account ID"""
  createdById: Int!

  """Updated Account ID"""
  updatedById: Int

  """Link expiration date"""
  linkExpiresAt: DateTime

  """Creation Date"""
  createdAt: DateTime!

  """Update Date"""
  updatedAt: DateTime

  """"""
  isLive: Boolean!

  """presentation type"""
  type: PresentationType

  """presentation type"""
  project: Project

  """Account of creator"""
  createdBy: Account

  """Account of updater"""
  updatedBy: Account

  """Account of updater"""
  linkExpired: Boolean

  """"""
  organization: Organization!

  """"""
  passwordSet: Boolean!

  """"""
  settings: PresentationSettings
}

"""PresentationType object"""
type PresentationType {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

""""""
type PresentationSettings {
  """"""
  allowDownloadMedia: Boolean!

  """"""
  leaveFeedback: Boolean

  """"""
  seeOthersFeedback: Boolean
}

""""""
enum SortOrderEnum {
  """"""
  ASC

  """"""
  DESC
}

"""Rep Get Presentation by org Response"""
type RepPresentations {
  """Presentation objects"""
  records: [Presentation!]!

  """Total count of presentation objects in db"""
  totalCount: Int!
}

"""Presentation Folder Talent"""
type PresentationFolderTalent {
  """"""
  id: ID!

  """ID of the presentation folder"""
  folderId: Int!

  """ID of the presentation group"""
  groupId: Int!

  """"""
  profile: Profile

  """Total count of picks for the talent"""
  pickCount: Int!

  """"""
  pickedBy: [ProfilePick!]

  """Total count of comments for the talent"""
  commentCount: Int!

  """Retrieves profile customizations in the package folder"""
  profileCustomization: PresentationFolderTalentCustomization

  """
  Retrieves cover for profile in the package folder. Based on customization and profile cover
  """
  cover: Media
}

""""""
type ProfilePick {
  """ID Pick"""
  id: Int!

  """"""
  userName: String!
}

""""""
type PresentationFolderTalentCustomization {
  """"""
  id: Int!

  """"""
  note: String

  """"""
  isOverscale: Boolean

  """"""
  overscaleNote: String

  """Retrieves profile's customized media"""
  media: [PresentationFolderTalentMediaCustomization!]
}

""""""
type PresentationFolderTalentMediaCustomization {
  """"""
  id: ID!

  """"""
  mediaId: Int!

  """"""
  media: Media!

  """"""
  isPrimary: Boolean!

  """"""
  name: String

  """"""
  order: Int
}

"""Presentation Folder"""
type PresentationFolder {
  """ID of presentation folder"""
  id: Int!

  """ID of presentation"""
  presentationId: Int!

  """Name of presentation folder"""
  name: String!

  """Groups Count"""
  groupCount: Int!

  """Talents Count"""
  talentCount: Int!

  """Submissions Count"""
  submissionCount: Int!

  """Order of appearance"""
  order: Int!

  """Date when was created"""
  createdAt: DateTime!

  """Date when was updated"""
  updatedAt: DateTime
}

""""""
type MediaToArchive {
  """"""
  guid: String!

  """"""
  type: MediaTypeEnum!

  """"""
  filePath: String!

  """"""
  format: String!

  """"""
  storageStatus: MediaStorageStatusEnum!
}

""""""
enum MediaTypeEnum {
  """"""
  IMAGE

  """"""
  VIDEO
}

""""""
enum MediaStorageStatusEnum {
  """"""
  BAU_MIGRATED

  """"""
  CLD_CLEANED

  """"""
  DOWNLOADED

  """"""
  DOWNLOAD_FAILED

  """"""
  DOWNLOADING

  """"""
  UPLOADED

  """"""
  UPLOAD_FAILED

  """"""
  UPLOADING
}

"""Presentation Group"""
type PresentationGroup {
  """ID of presentation group"""
  id: Int!

  """Name of presentation group"""
  name: String

  """Order of appearance"""
  order: Int!

  """Date when created"""
  createdAt: DateTime!

  """Date when updated"""
  updatedAt: DateTime

  """Stage names of added talents"""
  stageNames: [String!]

  """Count of added talents"""
  talentCount: Int

  """"""
  submissionIds: [BigInt!]!

  """"""
  cover: Media

  """"""
  mediaCount: [MediaCount!]

  """"""
  media(
    """Media Type CODE"""
    mediaType: String
  ): [PresentationGroupMedia!]

  """"""
  presentation: Presentation!

  """"""
  presentationFolder: PresentationFolder!
}

"""Represent relation between Presentation Group and Media"""
type PresentationGroupMedia {
  """"""
  id: Int!

  """Id of media"""
  mediaId: Int!

  """Name"""
  name: String

  """Order of appearance"""
  order: Int!

  """Media object"""
  media: Media!
}

"""Paginated result with [PresentationGroupSubmission] objects"""
type PresentationGroupSubmissionPaginatedResult {
  """Total count of rows"""
  totalCount: Int!

  """List of PresentationGroupSubmission objects"""
  objects: [PresentationGroupSubmission!]!

  """Current page"""
  page: Int!

  """Total pages"""
  totalPages: Int!

  """Last key """
  lastKey: String
}

"""Presentation Group Submission"""
type PresentationGroupSubmission {
  """ID of connection between presentation group and submission"""
  id: Int!

  """ID of the presentation group"""
  groupId: Int!

  """Total count of picks for the submission"""
  pickCount: Int!

  """Total count of comments for the submission"""
  commentCount: Int!

  """Submission cover"""
  cover: Media

  """Custom presentation group talent role name."""
  roleName: String

  """"""
  submission: Submission!
}

""""""
type PresentationPublic {
  """GUID"""
  guid: ID!

  """ID of presentation"""
  id: Int!

  """Project ID of presentation"""
  projectId: Int

  """Name of presentation"""
  name: String!

  """Number of Folders in Presentation"""
  foldersCount: Int!

  """Creator Account ID"""
  createdById: Int!

  """Updated Account ID"""
  updatedById: Int

  """Link expiration date"""
  linkExpiresAt: DateTime

  """Creation Date"""
  createdAt: DateTime!

  """Update Date"""
  updatedAt: DateTime

  """"""
  isLive: Boolean!

  """presentation type"""
  type: PresentationType

  """"""
  project: PresentationProjectPublic

  """Account of creator"""
  createdBy: Account

  """Account of updater"""
  updatedBy: Account

  """Account of updater"""
  linkExpired: Boolean

  """"""
  organization: PresentationOrganizationPublic

  """"""
  passwordSet: Boolean!

  """"""
  settings: PresentationSettings

  """"""
  folders: [PresentationFolder!]!

  """"""
  folder(folderId: [Int!]!): [PresentationFolderPublic!]
}

""""""
type PresentationProjectPublic {
  """"""
  id: Int!

  """"""
  name: String!

  """"""
  internalName: String
}

""""""
type PresentationOrganizationPublic {
  """"""
  id: Int!

  """"""
  name: String

  """"""
  parentName: String

  """"""
  logo: Media
}

""""""
type PresentationFolderPublic {
  """ID of presentation folder"""
  id: Int!

  """ID of presentation"""
  presentationId: Int!

  """Name of presentation folder"""
  name: String!

  """Groups Count"""
  groupCount: Int!

  """Talents Count"""
  talentCount: Int!

  """Submissions Count"""
  submissionCount: Int!

  """Order of appearance"""
  order: Int!

  """Date when was created"""
  createdAt: DateTime!

  """Date when was updated"""
  updatedAt: DateTime

  """"""
  presentation: PresentationPublic!

  """"""
  groups(hasPicks: Boolean): [PresentationGroupPublic!]!

  """"""
  groupsByFilter(input: PresentationFilterInput!): [PresentationGroupPublic!]!

  """Folder talents of the package presentation"""
  talents(pageInput: PageInput = {pageSize: 100, pageNumber: 1}): [PresentationTalentPublic!]!

  """"""
  talentsWithPicksCount: Int!
}

""""""
type PresentationGroupPublic {
  """ID of presentation group"""
  id: Int!

  """Name of presentation group"""
  name: String

  """Order of appearance"""
  order: Int!

  """Date when created"""
  createdAt: DateTime!

  """Date when updated"""
  updatedAt: DateTime

  """Stage names of added talents"""
  stageNames: [String!]

  """Count of added talents"""
  talentCount: Int

  """"""
  submissionIds: [BigInt!]

  """"""
  cover: Media

  """"""
  mediaCount: [MediaCount!]

  """"""
  media(
    """Media Type CODE"""
    mediaType: String
  ): [PresentationGroupMedia!]

  """"""
  presentation: PresentationPublic

  """"""
  presentationFolder: PresentationFolderPublic

  """"""
  talents(userName: String, hasPicks: Boolean): [PresentationTalentPublic!]!

  """"""
  submissions(hasPicks: Boolean): [PresentationSubmissionPublic!]!
}

""""""
type PresentationTalentPublic {
  """"""
  id: Int!

  """"""
  guid: String

  """"""
  groupId: Int

  """"""
  submissionId: BigInt

  """"""
  dateOfBirth: DateTime

  """"""
  minor: Boolean

  """"""
  cover: Media

  """"""
  stageName: String

  """"""
  roleName: String

  """"""
  pickCount: Int

  """"""
  commentCount: Int

  """"""
  talentUnions: [TalentUnion!]

  """"""
  pickedBy: [TalentPickPublic!]

  """"""
  roleGuid: String

  """"""
  projectGuid: String
}

""""""
type TalentPickPublic {
  """"""
  id: String!

  """"""
  userName: String!
}

""""""
type PresentationSubmissionPublic {
  """Primary ID"""
  id: BigInt!

  """"""
  profileId: Int

  """Note"""
  note: String

  """Media"""
  media: [SubmissionMedia!]

  """Requested Media"""
  requestedMedia: [SubmissionMedia!]

  """"""
  mediaCount: [MediaCount!]

  """Profile Working Location ID"""
  profileWorkingLocationId: Int

  """"""
  profile: PublicProfile

  """Customized Profile Working Location"""
  workingLocation: ProfileWorkingLocation

  """"""
  contactInfo: ProfileContactInfo

  """Audition Snapshot Media Assets"""
  auditionSnapshot: Media

  """"""
  roleId: Int

  """"""
  roleName: String

  """"""
  pickCount: Int

  """"""
  commentCount: Int

  """"""
  pickedBy: [TalentPickPublic!]

  """"""
  projectId: Int

  """"""
  cover: Media
}

""""""
type PublicProfile {
  """Primary ID"""
  id: ID!

  """Primary ID"""
  profileId: ID!

  """stores/holds the id of the person who has deactivated the profile"""
  deactivatedBy: Float

  """"""
  profileStatusId: Int

  """Created at Date"""
  created: DateTime

  """GUID"""
  guid: String

  """Manager Email"""
  managerEmail: String

  """Note"""
  note: String

  """Other experiences"""
  otherExperiences: String

  """Parent Name"""
  parent: String

  """Note about piercing"""
  piercingNote: String

  """The minimum age a talent can play"""
  playableAgeMax: Float

  """The maximum age a talent can play"""
  playableAgeMin: Float

  """The age a talent can play"""
  playableAge: Float

  """Date of pregnancy"""
  pregnancy: DateTime @deprecated(reason: "This field is deprecated and will be deleted once the compatible changes at the front end will be added everyewhere for pregnancyDue reference. Use pregnancyDue instead")

  """Date of pregnancy"""
  pregnancyDue: DateTime

  """Profession"""
  profession: String

  """Project Type"""
  projectType: String

  """Stage Name"""
  stageName: String!

  """Blurb"""
  blurb: String

  """Tattoo Note"""
  tattooNote: String

  """Updated at Date"""
  updated: DateTime

  """has Representation"""
  hasRepresentation: Boolean

  """media assets"""
  profileMedia: [ProfileMedia!]

  """Is minor"""
  minor: Boolean

  """Date of birth"""
  dateOfBirth: DateTime

  """Hide credit year"""
  hideCreditYear: Boolean!

  """Default submission note"""
  defaultSubmissionNote: String

  """If Profile is overscaled"""
  isOverscaled: Boolean!

  """Overscale Note"""
  overscaleNote: String

  """Profile Account System Role"""
  profileAccountRole: String

  """Profile's primary photo"""
  cover: Media

  """Profile Artist ID"""
  artistId: Float

  """
  Access Token of a Profile, generated by Granting Access or Creating a Profile
  """
  profileAccessToken: String

  """ProfileAccessToken created date"""
  profileAccessTokenCreated: DateTime

  """"""
  ageInYears: Boolean

  """Work permit expiration date"""
  workPermitExp: DateTime

  """Roster hidden"""
  rosterHidden: Boolean

  """Search hidden"""
  searchHidden: Boolean

  """Job Persuing Type(s)"""
  pursuing: [Pursuing!]

  """"""
  accountId: Float

  """"""
  organizations: [Organization!]

  """"""
  organization: Organization

  """"""
  profileMainOrganization: Organization

  """"""
  profileMainDivision: Organization

  """Gender Appearance(s)"""
  genderAppearances: [GenderAppearance!]

  """Ethnic Appearance(s)"""
  ethnicAppearances: [ProfileEthnicAppearance!]

  """Talent unions"""
  talentUnions: [TalentProfileUnion!]

  """Gender Identities"""
  profileGenderIdentities: [ProfileGenderIdentity!]

  """Working Locations"""
  workingLocations: [ProfileWorkingLocation!]

  """Profile shoe sizes"""
  profileShoeSizes: [ProfileShoeSize!]!

  """Profile tattoo"""
  tattoo: Tattoo

  """Profile Pants"""
  profilePants: [Pants!]!

  """Profile TshirtSize"""
  profileTshirtSizes: [TShirtSize!]!

  """Profile general size"""
  profileSizes: [ProfileSize!]!

  """Profile pets"""
  profilePets: [ProfilePet!]!

  """Profile piercings"""
  profilePiercings: [Piercing!]!

  """Profile vehicles"""
  profileVehicles: [ProfileVehicle!]!

  """Wardrobes"""
  profileWardrobes: [ProfileWardrobe!]

  """Notes for the profile"""
  notes: [Note!]!

  """Last note for the profile"""
  lastNote: Note

  """Conflicts for the profile"""
  conflicts: [ProfileConflict!]!

  """Profile Credits"""
  credits: [PublicCredit!]!

  """Profile Credits Count"""
  creditsCount: Int!

  """Profile Status Object"""
  profileStatus: ProfileStatus

  """Bust Object"""
  bust: Bust

  """Coat Object"""
  coat: Coat

  """Cup size Object"""
  cupSize: CupSize

  """Dress size Object"""
  dressSize: ClothesSize

  """Hat size Object"""
  hatSize: HatSize

  """Hip size Object"""
  hipSize: Hip

  """Glove size Object"""
  gloveSize: Glove

  """Inseam size Object"""
  inseam: Inseam

  """Chest size Object"""
  chestSize: ChestSize

  """Neck size Object"""
  neck: Neck

  """Underbust size Object"""
  underbust: UnderBust

  """SeekingRepresentation Object"""
  seekingRepresentations: [SeekingRepresentation!]

  """profileVisibility Object"""
  profileVisiblities: [ProfileVisibility!]

  """Sleeve Object"""
  sleeve: Sleeve

  """Waist Object"""
  waist: Waist

  """Hair Color Object"""
  hairColor: HairColor

  """Hair Style Object"""
  hairStyle: HairStyle

  """Multiple Birth Object"""
  multipleBirth: MultipleBirth

  """Height Object"""
  height: Height

  """Weight Object"""
  weight: Weight

  """Willingness Objects"""
  willingness: [Willingness!]!

  """Eye Color Object"""
  eyeColor: EyeColor

  """Get the artist media profile"""
  profile: Profile!

  """Facial Hair Type(s)"""
  facialHair: [FacialHair!]

  """Get profile bookouts"""
  profileBookOuts: [ProfileBookOuts!]!

  """Checks if profile have granted access to roster"""
  accessGranted: Boolean!

  """Unique Attribute Type(s)"""
  uniqueAttributes: [UniqueAttribute!]

  """Skills and their Levels"""
  skills: [ProfileSkill!]

  """Document type(s)"""
  documentTypes: [Document!]

  """Profile photo assets"""
  photos(
    """Field is deprecated. Use cover field instead"""
    isPrimary: Boolean
  ): [ProfileMedia!]

  """Profile audio assets"""
  audios: [ProfileMedia!]

  """Profile video assets"""
  videos: [ProfileMedia!]

  """Profile document assets"""
  documents: [ProfileMedia!]

  """All profile media"""
  mediaAssets: [ProfileMedia!]

  """Profile's primary photo"""
  mediaSummary: [MediaCount!]!

  """Sport equipments"""
  sportEquipments: [ProfileSportEquipment!]

  """Prop Type(s)"""
  props: [ProfileProp!]

  """The Profile List ids where current profile participated"""
  profileLists: [Int!]!

  """Submission request's media assets"""
  submissionRequestMedia(roleId: Float!): [SubmissionMedia!]!

  """Returns submission"""
  submission(roleId: Float!): PublicSubmission

  """Profile has resume"""
  hasResume: Boolean

  """Profile has video reel"""
  hasVideoReel: Boolean

  """Profile has audio reel"""
  hasAudioReel: Boolean

  """User's resume document"""
  resume: ProfileMedia

  """"""
  isActive: Boolean!

  """
  Returns true if profile was deactivated by a Rep user, returns false if
  profile was deactivated by a Talent, returns null when there is no information
  about the deactivating account
  """
  isDeactivatedByReps: Boolean

  """"""
  isDropped: Boolean!

  """"""
  isInactive: Boolean!

  """Identify the personal or represented profile."""
  isPersonal: Boolean!

  """Identify represented profile"""
  isRepresented: Boolean!

  """Profile Type"""
  profileType: ProfileType

  """"""
  billingItems: [BillingItemModel!]

  """"""
  selectionType(roleId: Float!): ProfileSelectionType!

  """"""
  hasAuditionHistory(organizationId: Float): Boolean!

  """Profile email"""
  talentEmail: String

  """Profile phone"""
  phone: String

  """Dynamic field. Based on profile status and representative type"""
  contactInfo: ProfileContactInfo

  """talent's contacts regardless representative status"""
  talentContactInfo: ProfileContactInfo

  """"""
  isPlayableAgeLockedToTalent: Boolean!

  """"""
  talentFolders(folderId: Int!): [PresentationFolderTalentPresence!]

  """Profile account country"""
  profileAccountCountry: Country

  """"""
  folderCustomization(folderId: Float!): PublicProfileFolderCustomization
}

""""""
type PublicCredit {
  """Primary ID"""
  id: ID!

  """Year"""
  year: Int

  """Profile ID"""
  profileId: Int!

  """Highlighted"""
  highlighted: Boolean!

  """Credit Type Sort ordering"""
  sortOrder: Int!

  """Credit Sort ordering"""
  creditOrder: Int!

  """Created at Date"""
  created: DateTime!

  """Updated at Date"""
  updated: DateTime!

  """"""
  guid: String!

  """Profile Credit Type Id"""
  profileCreditTypeId: Float!

  """Title"""
  title: String

  """Role title"""
  role: String

  """The director of the Project"""
  director: String

  """"""
  creditMedia: [Media!]!

  """Credit Type"""
  creditType: CreditType
}

"""Public Submission object"""
type PublicSubmission {
  """Primary ID"""
  id: BigInt!

  """"""
  profileId: Int

  """Note"""
  note: String

  """Media"""
  media: [SubmissionMedia!]

  """Requested Media"""
  requestedMedia: [SubmissionMedia!]

  """"""
  mediaCount: [MediaCount!]

  """Profile Working Location ID"""
  profileWorkingLocationId: Int

  """"""
  profile: PublicProfile

  """Customized Profile Working Location"""
  workingLocation: ProfileWorkingLocation

  """"""
  contactInfo: ProfileContactInfo

  """Audition Snapshot Media Assets"""
  auditionSnapshot: Media
}

""""""
type PublicProfileFolderCustomization {
  """"""
  id: Int!

  """"""
  note: String

  """"""
  isOverscale: Boolean

  """"""
  overscaleNote: String

  """"""
  media: [PublicProfileFolderMediaCustomization!]!
}

""""""
type PublicProfileFolderMediaCustomization {
  """"""
  id: Int!

  """"""
  name: String

  """"""
  mediaId: Int!

  """"""
  order: Int!

  """"""
  isPrimary: Boolean!

  """"""
  media: Media!
}

""""""
input PresentationFilterInput {
  """"""
  presentationId: Int

  """"""
  presentationGuid: String

  """Users who made comments on presentation"""
  commentersAccountIds: [String!]

  """Users who made pick on presenatation"""
  pickUsers: [String!]

  """"""
  presenetationFolderIds: [Int!]

  """"""
  roleIds: [Int!]

  """"""
  roleNames: [String!]

  """"""
  stageName: String
}

""""""
type PresentationFilterData {
  """"""
  commentersAccountIds: [String!]

  """"""
  picksUser: [String!]

  """"""
  folders: [PresentationFilterFolder!]

  """"""
  roles: [PresentationFilterRole!]
}

""""""
type PresentationFilterFolder {
  """"""
  id: Int!

  """"""
  name: String!
}

""""""
type PresentationFilterRole {
  """"""
  id: Float

  """"""
  name: String!
}

"""Paginated result with [PresentationTalentPublic] objects"""
type PresentationTalentPublicPaginatedResult {
  """Total count of rows"""
  totalCount: Int!

  """List of PresentationTalentPublic objects"""
  objects: [PresentationTalentPublic!]!

  """Current page"""
  page: Int!

  """Total pages"""
  totalPages: Int!

  """Last key """
  lastKey: String
}

"""Profile Ids by Account"""
type ProfileIdsByAccount {
  """AccountId"""
  accountId: Float

  """Profile ID"""
  profileId: Float
}

"""Legacy Account By Profile"""
type LegacyAccount {
  """Legacy login"""
  legacyLogin: String!

  """Account Id"""
  accountId: Float!
}

"""Input type for fetching submissions by role and profile"""
input GetSubmissionByRoleProfileInput {
  """Role ID"""
  roleId: Int!

  """Profile ID"""
  profileId: Int!
}

"""Submission Profile Output"""
type SubmissionProfile {
  """Profile Information"""
  profile: Profile

  """Role Name"""
  roleName: String!
}

"""Profile Fit For You Values"""
type DefaultFitForYouArtist {
  """"""
  workingLocations: [Dma!]!

  """"""
  genderAppearances: [GenderAppearance!]

  """"""
  ethnicAppearances: [EthnicAppearance!]

  """"""
  talentUnions: [TalentUnion!]

  """"""
  projectTypes: [ProjectType!]

  """"""
  roleTargets: [RoleTarget!]

  """"""
  payPreferences: [PaidType!]

  """Maximum Playable Age"""
  playableAgeMax: Int

  """Mimimumm Playable Age"""
  playableAgeMin: Int

  """Is age displayed in years>"""
  ageInYears: Boolean!
}

"""Profile Access Token"""
type ProfileAccessToken {
  """Profile Id"""
  profileId: Float!

  """Artist Id"""
  artistId: Float!

  """Organization Id"""
  organizationId: Float!

  """ProfileAccessToken created date"""
  profileAccessTokenCreated: DateTime
}

"""Paginated result with [ProfileSearchResultByOrgId] objects"""
type ProfileSearchResultByOrgIdPaginatedResult {
  """Total count of rows"""
  totalCount: Int!

  """List of ProfileSearchResultByOrgId objects"""
  objects: [ProfileSearchResultByOrgId!]!

  """Current page"""
  page: Int!

  """Total pages"""
  totalPages: Int!

  """Last key """
  lastKey: String
}

"""Project by org id search result"""
type ProfileSearchResultByOrgId {
  """Profile Id"""
  id: Int

  """Profile stage name"""
  stageName: String
}

"""Submissions By Profile"""
input SubmissionByProfileInput {
  """Start Date"""
  dateFrom: DateTime

  """End Date"""
  dateTo: DateTime

  """Page Size"""
  pageSize: Float

  """Offset"""
  pageNumber: Float
}

"""Submission Search input"""
input SubmissionSearchInput {
  """List of Submission IDs"""
  submissionIds: [Int!]

  """List of Submission Status IDs"""
  submissionStatusIds: [Int!]

  """List of Submission Status Codes"""
  submissionStatusCodes: [String!]

  """List of Submission Tile Schema IDs"""
  tileSchemeValueIds: [Int!]

  """List of Submission Tile Schema Codes"""
  tileSchemeValueCodes: [String!]

  """List of Role IDs"""
  roleIds: [Int!]

  """Profile Search Input"""
  profileSearchInput: ProfileSearchInput

  """Is submission scheduled"""
  scheduled: Boolean

  """Is submission scheduled for audition"""
  auditionScheduled: Boolean

  """Filter by Schedule"""
  scheduleIds: [Int!]

  """Filter by Audition Session"""
  sessionIds: [Int!]

  """Is submission scheduled for callback"""
  callbackScheduled: Boolean

  """List of Submission IDs to be excluded from the search results"""
  excludeSubmissionsIds: [Int!]

  """"""
  hasPicks: Boolean

  """"""
  hasComments: Boolean

  """"""
  stageName: String
}

"""Search input"""
input ProfileSearchInput {
  """Stage name"""
  stageName: String

  """Organization ID"""
  organizationId: Float

  """Gender Identity Ids"""
  genderIdentityIds: [ID!]

  """Gender Identity Codes"""
  genderIdentities: [GenderIdentityEnum!]

  """Ethninc Appearance Ids"""
  ethnicAppearanceIds: [ID!]

  """"""
  ethnicAppearances: [EthnicAppearanceEnum!]

  """Gender Appearance Ids"""
  genderAppearanceIds: [ID!]

  """"""
  genderAppearances: [GenderAppearanceEnum!]

  """Playable Age Range"""
  playableAge: AgeRangeInput

  """Working Location Ids"""
  workingLocationIds: [ID!]

  """Work Unions Ids"""
  talentUnionIds: [ID!]

  """"""
  talentUnions: [TalentUnionEnum!]

  """Work Unions Ids which should be excluded from the search"""
  excludeTalentUnionIds: [ID!]

  """Work Unions Ids which should be excluded from the search"""
  excludeTalentUnions: [TalentUnionEnum!]

  """New profiles"""
  isNew: Boolean

  """Has Representation"""
  hasRepresentation: Boolean

  """Representation Ids"""
  seekingRepresentations: [ID!]

  """Height Range by Ids"""
  heightRange: IdRangeInput

  """Weight Range by IDs"""
  weightRange: IdRangeInput

  """Hair Color Id"""
  hairColorId: [ID!]

  """Piercing search by list of id and/or description"""
  piercing: PiercingInput

  """Tattoo search by list of id and/or description"""
  tattoo: TattooInput

  """Hair Style Id"""
  hairStyleId: [ID!]

  """Eye Color Id"""
  eyeColorId: [ID!]

  """Multiple Birth Id"""
  multipleBirthId: [ID!]

  """Document Ids"""
  documentIds: [ID!]

  """Facial Hair Ids"""
  facialHairIds: [ID!]

  """Relationship To Minor Id"""
  relationshipToMinorId: [ID!]

  """Range for Sleeve Ids"""
  sleeveId: IdRangeInput

  """Range for Neck Ids"""
  neckId: IdRangeInput

  """Range for Coat Ids"""
  coatId: IdRangeInput

  """Range for Waist Ids"""
  waistId: IdRangeInput

  """Range of IDs for cup size"""
  cupSizeId: IdRangeInput

  """Range of Hat Size Ids"""
  hatSizeId: IdRangeInput

  """Range for Glove Size Ids"""
  gloveSizeId: IdRangeInput

  """Range of IDs for hip size"""
  hipSizeId: IdRangeInput

  """Range for Inseam size Ids"""
  inseamId: IdRangeInput

  """Range of IDs for bust size"""
  bustId: IdRangeInput

  """Range of IDs for underbust size"""
  underbustId: IdRangeInput

  """Prop Id"""
  propIds: [ID!]

  """Pursuing Ids"""
  pursuingIds: [ID!]

  """Search by Sport Equipment IDs"""
  sportEquipmentIds: [Int!]

  """Range for t-shirt Size Ids"""
  tshirtSizeId: IdRangeInput

  """Unique Attribute Ids"""
  uniqueAttributeIds: [ID!]

  """Willingness Ids"""
  willingnessIds: [ID!]

  """Profile Status Id"""
  profileStatusId: [ID!]

  """Search By Profile Statuses"""
  profileStatusToSearch: ProfileStatusSearchEnum

  """blurb"""
  blurb: ID

  """Date Range"""
  pregnancyDueRange: DateRangeInput

  """Range of IDs for pants size"""
  pantsId: IdRangeInput

  """Range of IDs for dress size"""
  dressId: IdRangeInput

  """Range of IDs for chest size"""
  chestSizeId: IdRangeInput

  """Range of Shoe Size IDs"""
  shoeSizeId: IdRangeInput

  """Shoe Modifier ID"""
  shoeModifierId: ID

  """Range of General Size IDs"""
  sizeId: IdRangeInput

  """Size Modifier ID"""
  sizeModifierId: ID

  """Pet Ids"""
  petIds: [Int!]

  """Pet Size Id"""
  petSizeId: Int

  """Search by skill ids and their level ids"""
  skills: [SkillSearchInput!]

  """"""
  skillOperator: FilterOperator

  """Profession"""
  profession: String

  """Wardrobe Ids"""
  wardrobeIds: [Int!]

  """Profile Ids to search in"""
  profileIds: [Int!]

  """Representative Ids"""
  representativeIds: [Int!]

  """List Ids"""
  representativeListIds: [Int!]

  """
  Representative Profile List Ids - search profile/s if it included into Reps Profile List
  """
  profileListIds: [Int!]

  """
  Representative Profile List Ids - search profile/s if it SHOULD NOT be included into Reps Profile List
  """
  excludeProfileListIds: [Int!]

  """Search by vehicle object"""
  vehicle: VehicleSearchInput

  """Search by profile type"""
  profileTypeId: Int

  """Search by minor's age"""
  minorAge: AgeRangeInput

  """Work permit expiration Range"""
  workPermitExpRange: DateRangeInput

  """"""
  excludeConflictIds: [Int!]

  """"""
  excludeBookOutDates: DateRangeInput

  """Other Experiences"""
  otherExperiences: String
}

""""""
enum GenderIdentityEnum {
  """"""
  NON_BINARY

  """"""
  OTHER

  """"""
  TRANS

  """"""
  UNDEFINED
}

""""""
enum EthnicAppearanceEnum {
  """"""
  ABORIGINAL_TORRES_STRAIT_ISLANDER

  """"""
  AFRICAN_AMERICAN_BLACK

  """"""
  AMERICAN_INDIAN

  """"""
  CAUCASIAN_WHITE

  """"""
  EAST_ASIAN

  """"""
  EASTERN_EUROPEAN

  """"""
  EAST_INDIAN_SOUTH_ASIAN

  """"""
  ETHNICALLY_AMBIGUOUS

  """"""
  LATINX

  """"""
  MAORI

  """"""
  MEDITERRANEAN

  """"""
  MIDDLE_EASTERN

  """"""
  PACIFIC_ISLANDER

  """"""
  SOUTHEAST_ASIAN
}

""""""
enum GenderAppearanceEnum {
  """"""
  MAN

  """"""
  NON_BINARY_PERSON

  """"""
  TRANS_MAN

  """"""
  TRANS_WOMAN

  """"""
  WOMAN
}

"""Input type for AgeRangeInput"""
input AgeRangeInput {
  """The minimum age a talent can play"""
  ageMax: Int

  """The maximum age a talent can play"""
  ageMin: Int

  """Ages set in months. Default value: true"""
  inMonths: Boolean = true
}

""""""
enum TalentUnionEnum {
  """"""
  ACTRA

  """"""
  AEA

  """"""
  ANTC

  """"""
  BAY_AREA_THEATRE

  """"""
  BUSINESS_THEATRE_EVENTS

  """"""
  CABARET

  """"""
  CAEA

  """"""
  CASINO

  """"""
  CAT

  """"""
  COMMERCIAL

  """"""
  CORPORATE_EDUCATIONAL_NON_BROADCAST

  """"""
  CORST

  """"""
  COST

  """"""
  DINNER_THEATRE

  """"""
  DINNER_THEATRE_ARTIST

  """"""
  DISNEYWORLD

  """"""
  ELIGIBLE

  """"""
  EQUITY

  """"""
  FICORE

  """"""
  GUEST_ARTIST

  """"""
  HAT

  """"""
  LOA

  """"""
  LOA_NYC

  """"""
  LORT_NON_REP

  """"""
  LORT_REP

  """"""
  LOS_ANGELES_TRANSITIONAL_99_SEAT_THEATRE_CODE

  """"""
  LOW_BUDGET_FILM

  """"""
  MEAA

  """"""
  MEMBER

  """"""
  MIDSIZE_THEATRES

  """"""
  MINI

  """"""
  MODIFIED_BAT

  """"""
  MODIFIED_LOW_BUDGET_FILM

  """"""
  MSUA

  """"""
  MUSIC_VIDEO

  """"""
  NEAT

  """"""
  NEW_MEDIA

  """"""
  NOLA

  """"""
  NON_UNION

  """"""
  NO_UNION_AFFILIATION

  """"""
  OAT

  """"""
  OFF_BROADWAY

  """"""
  OTHER

  """"""
  OUTDOOR_DRAMA

  """"""
  PRODUCTION_DISNEY

  """"""
  PRODUCTION_LEAGUE

  """"""
  RMTA

  """"""
  SAG_AFTRA

  """"""
  SHORT_ENGAGEMENT_TOURING_AGREEMENT

  """"""
  SHORT_FILM

  """"""
  SHOWCASE_NY

  """"""
  SOUND_RECORDINGS

  """"""
  SPECIAL_AGREEMENT

  """"""
  SPECIAL_APPEARANCE

  """"""
  SPECIAL_PRODUCTION_CENTRAL

  """"""
  SPECIAL_PRODUCTION_EASTERN

  """"""
  SPECIAL_PRODUCTION_WESTERN

  """"""
  SPT

  """"""
  STUDENT_FILM

  """"""
  TELEVISION

  """"""
  THEATRICAL_FILM

  """"""
  TRANSITION

  """"""
  TYA

  """"""
  UBCP_ACTRA

  """"""
  UDA

  """"""
  ULTRA_LOW_BUDGET_FILM

  """"""
  URTA

  """"""
  WCLO

  """"""
  WORKSHOP
}

"""ID range input"""
input IdRangeInput {
  """The minimum ID value"""
  from: Int

  """The maximum ID value"""
  to: Int
}

"""Input type for search by piercing attributes"""
input PiercingInput {
  """Piercing id list"""
  piercingId: [ID!]

  """Piercing description"""
  piercingNote: String
}

"""Input type for search by tattoo attributes"""
input TattooInput {
  """tattoo id list"""
  tattooId: [ID!]

  """tattoo description"""
  tattooNote: String
}

""""""
enum ProfileStatusSearchEnum {
  """"""
  FORMER

  """"""
  CURRENT

  """"""
  FORMER_AND_CURRENT

  """"""
  ROSTER_HIDDEN

  """"""
  ROSTER_AND_SEARCH_HIDDEN
}

"""Input type for DateRangeInput"""
input DateRangeInput {
  """The minimum date"""
  dateMin: DateTime

  """The maximum date"""
  dateMax: DateTime
}

"""Input type for skill and skill level"""
input SkillSearchInput {
  """"""
  id: ID!

  """"""
  levelId: ID
}

""""""
enum FilterOperator {
  """"""
  OR

  """"""
  AND
}

"""Input type for vehicle search"""
input VehicleSearchInput {
  """Vehicle type ID"""
  typeId: Int

  """Vehicle Make ID"""
  makeId: Int

  """Year range of vehicle"""
  yearRange: IdRangeInput

  """Vehicle name"""
  name: String
}

""""""
input SearchPageInput {
  """Page size"""
  pageSize: Int!

  """Page number"""
  pageNumber: Int = 1

  """Returns dataset after provided key"""
  after: String
}

""""""
input SubmissionSearchSortOptionsInput {
  """Field name by which should be sorted"""
  fieldName: SubmissionSearchSortColumn!

  """Sort order value(asc or desc). Default value: asc"""
  sortOrder: SortOrderEnum
}

"""Enum of an available columns for sorting"""
enum SubmissionSearchSortColumn {
  """"""
  RANDOM

  """"""
  STAGE_NAME

  """"""
  LAST_NAME

  """"""
  SUBMITTED_DATE

  """"""
  SELECTION_TAG

  """"""
  ROLE

  """"""
  RANDOMIZE
}

""""""
enum SearchResultType {
  """"""
  ALL

  """"""
  FACETS

  """"""
  DOCUMENTS
}

"""Paginated result with [Submission] objects"""
type SubmissionPaginatedResult {
  """Total count of rows"""
  totalCount: Int!

  """List of Submission objects"""
  objects: [Submission!]!

  """Current page"""
  page: Int!

  """Total pages"""
  totalPages: Int!

  """"""
  facets: [Facet!]

  """Last key """
  lastKey: String
}

""""""
type Facet {
  """"""
  name: String!

  """"""
  buckets: [FacetBucket!]!
}

""""""
type FacetBucket {
  """"""
  key: ID!

  """"""
  docCount: Int!

  """"""
  facets: [Facet!]
}

"""Submission Search input"""
input SubmissionCountPerRoleInput {
  """List of Submission Status Codes"""
  submissionStatusCodes: [String!]

  """List of Submission Tile Schema Codes"""
  tileSchemeValueCodes: [String!]

  """List of Role IDs"""
  roleIds: [Int!]

  """Profile Type Id"""
  profileTypeId: Int

  """"""
  stageName: String

  """"""
  excludeRequestMasterId: String
}

"""Submission Count By Role object"""
type SubmissionCountPerRole {
  """Submission Role Id"""
  roleId: Int

  """Total count of rows"""
  totalCount: Int
}

"""Submission data for Workflow"""
type SubmissionWorkflow {
  """"""
  id: BigInt!

  """"""
  profile: Profile

  """"""
  project: ProjectWorkflow!

  """"""
  role: RoleWorkflow!

  """"""
  isCustomized: Boolean!

  """Talent's custom cover"""
  cover: Media

  """"""
  creatorAccountId: Int!

  """"""
  isCreatedByCD: Boolean
}

"""Project for Workflow"""
type ProjectWorkflow {
  """"""
  id: Int!

  """"""
  guid: String

  """"""
  name: String!

  """"""
  createdByPC: Boolean!

  """"""
  castingCompany: String

  """"""
  synopsis: String

  """"""
  projectType: ProjectType!

  """"""
  projectUnions: [ProjectUnionDetails!]!

  """Displayed project union"""
  displayedProjectUnion: String

  """Displayed project union short"""
  displayedProjectUnionShort: String

  """Project Conflicts"""
  projectConflicts: [Conflict!]

  """Project Status"""
  projectStatus: ProjectStatus

  """Conflict note"""
  conflictNote: String

  """Project Notes"""
  notes: String
}

"""Role for Workflow"""
type RoleWorkflow {
  """"""
  id: Int!

  """"""
  guid: String

  """"""
  name: String!

  """"""
  roleType: RoleType!

  """"""
  roleStatus: RoleStatus!

  """"""
  description: String

  """"""
  rate: Float

  """"""
  rateMax: Float

  """"""
  ratePerType: RatePerType

  """"""
  ageMin: Int

  """"""
  ageMax: Int

  """"""
  ageInYears: Boolean!

  """"""
  sides: [RoleMedia!]

  """"""
  sidesVisibility: RoleSidesVisibility

  """Rate summary"""
  rateSummary: String

  """Gender Appearances"""
  genderAppearance: [GenderAppearance!]

  """Ethnic Appearances"""
  ethnicAppearance: [EthnicAppearance!]

  """Sexual Situations """
  sexualSituations: [SexualSituation!]

  """Displayed role union"""
  displayedRoleUnion: String

  """Displayed role genders"""
  displayedRoleGenders: String

  """Displayed role ethnic appearance"""
  displayedRoleEthnicAppearance: String

  """Displayed role age range"""
  displayedRoleAgeRange: String

  """"""
  publicationSettingIds: [Int!]

  """"""
  locationDates: [RoleDateWithLocation!]

  """"""
  project: Project

  """Wardrobe"""
  wardrobe: String
}

"""Submission data for Workflow. Short version"""
type SubmissionWorkflowShort {
  """"""
  id: BigInt!

  """"""
  projectId: Int!

  """"""
  roleId: Int!

  """"""
  creatorAccountId: Int!

  """"""
  agencyId: Int

  """"""
  profileId: Int!

  """"""
  profileAccountId: Int

  """"""
  profileArtistId: Int
}

"""Result Sort Conditions"""
input SortConditionInput {
  """Column name by which result should be sorted"""
  orderColumn: String!

  """Either ASC or DESC"""
  orderDirection: String!
}

"""Project status filter options"""
enum ProjectStatusFilterEnum {
  """"""
  Current

  """"""
  Archived
}

"""Paginated result with [ProjectBase] objects"""
type ProjectBasePaginatedResult {
  """Total count of rows"""
  totalCount: Int!

  """List of ProjectBase objects"""
  objects: [ProjectBase!]!

  """Current page"""
  page: Int!

  """Total pages"""
  totalPages: Int!

  """Last key """
  lastKey: String
}

""""""
type ProjectBase {
  """Primary ID"""
  id: ID!

  """Project name"""
  name: String

  """Project internal name"""
  internalName: String

  """Project type"""
  projectType: ProjectType

  """Project type"""
  projectStatus: ProjectStatus

  """"""
  lastModifiedAt: DateTime!
}

"""Filters for searching suitable projects from backlot"""
input ProjectBacklotSearchInput {
  """Name"""
  name: String

  """Project Status Code"""
  projectStatusCode: [String!]

  """Project Creator Mail"""
  projectCreatorEmail: String

  """Project Id"""
  projectId: Int

  """Country Ids"""
  countryIds: [Int!]

  """Organization Id"""
  organizationId: Int
}

"""Paginated result with [ProjectBacklotSearchResult] objects"""
type ProjectBacklotSearchResultPaginatedResult {
  """Total count of rows"""
  totalCount: Int!

  """List of ProjectBacklotSearchResult objects"""
  objects: [ProjectBacklotSearchResult!]!

  """Current page"""
  page: Int!

  """Total pages"""
  totalPages: Int!

  """Last key """
  lastKey: String
}

"""Search result for backlot projects"""
type ProjectBacklotSearchResult {
  """Project Name"""
  name: String

  """Internal Name"""
  internalName: String

  """Casting Company Name"""
  castingCompanyName: String

  """Contact Email"""
  contactEmail: String

  """Project Id"""
  projectId: Int

  """Project Status Id"""
  projectStatusId: Int

  """Project Type Id"""
  projectTypeId: Int

  """Project Status"""
  projectStatus: ProjectStatus

  """Project Type"""
  projectType: ProjectType

  """Countries"""
  country: Country

  """Casting Company Id"""
  castingCompanyId: Int

  """Project Created Date"""
  created: DateTime

  """Project Update Date"""
  updated: DateTime
}

"""Paginated result with [Project] objects"""
type ProjectPaginatedResult {
  """Total count of rows"""
  totalCount: Int!

  """List of Project objects"""
  objects: [Project!]!

  """Current page"""
  page: Int!

  """Total pages"""
  totalPages: Int!

  """Last key """
  lastKey: String
}

"""Role status codes options"""
enum RoleStatusCodes {
  """"""
  ACTIVE

  """"""
  ARCHIVED

  """"""
  ARCHIVE_IN_PROGRESS

  """"""
  EDIT_TO_ACTIVE_ROLE

  """"""
  INTERNAL

  """"""
  MODIFICATIONS_COMPLETE

  """"""
  MODIFICATIONS_REQUESTED

  """"""
  NEW_ROLE_PENDING

  """"""
  NOT_YET_PUBLISHED

  """"""
  REJECTED

  """"""
  REQUESTING_ADDITIONAL_SUBMISSIONS

  """"""
  RESTORE_IN_PROGRESS

  """"""
  SUBMISSIONS_CLOSED
}

"""Role Previous Status"""
type RolePreviousStatus {
  """"""
  roleId: Float!

  """Role Previous Status"""
  previousRoleStatus: RoleStatus
}

""""""
input RepOrganizationListInput {
  """"""
  organizationStatusCode: [String!]!

  """"""
  countryCode: [String!]

  """"""
  organizationParentId: [Int!]

  """"""
  representationTypeCode: [String!]!

  """"""
  divisionsOnly: Boolean

  """"""
  sortColumn: RepOrganizationListSortEnum
}

"""Rep organization sorting enum"""
enum RepOrganizationListSortEnum {
  """"""
  NAME

  """"""
  PARENT_NAME
}

""""""
type RepOrganizationList {
  """"""
  organizationId: Int!

  """"""
  name: String!

  """"""
  parentName: String
}

"""Object that represent realtion between organization and account"""
type OrganizationAccount {
  """"""
  organizationId: Float!

  """"""
  accountId: Float!

  """"""
  organizationStatus: Float!

  """"""
  isAdmin: Boolean!
}

"""Paginated result with [OrganizationsByRoleSubmissionsAndName] objects"""
type OrganizationsByRoleSubmissionsAndNamePaginatedResult {
  """Total count of rows"""
  totalCount: Int!

  """List of OrganizationsByRoleSubmissionsAndName objects"""
  objects: [OrganizationsByRoleSubmissionsAndName!]!

  """Current page"""
  page: Int!

  """Total pages"""
  totalPages: Int!

  """Last key """
  lastKey: String
}

"""
Object that represent Reps divisions/agencies and count of their submissions to particular role
"""
type OrganizationsByRoleSubmissionsAndName {
  """"""
  orgId: Int!

  """"""
  submissionsCount: BigInt!

  """Organization object"""
  organization: Organization!
}

"""Input for get orgs by representation type + piece of/full name of org"""
input OrganizationsByRepTypeAndNameInput {
  """
  Org name or part of the Org name. Could be null in case if first N(page cfg)
  records need to be presented in order to sort by name asc
  """
  orgName: String

  """Codes of sought org representation type"""
  orgRepTypeCodes: [String!]!

  """Optional: ids of orgs used for search by org rep type+org name"""
  targetOrganizationIds: [Int!]

  """Pagination config"""
  page: PageInput!
}

"""Paginated result with [OrganizationsByRepTypeAndNameResult] objects"""
type OrganizationsByRepTypeAndNameResultPaginatedResult {
  """Total count of rows"""
  totalCount: Int!

  """List of OrganizationsByRepTypeAndNameResult objects"""
  objects: [OrganizationsByRepTypeAndNameResult!]!

  """Current page"""
  page: Int!

  """Total pages"""
  totalPages: Int!

  """Last key """
  lastKey: String
}

"""
Object that represent organization data retreived by org representation type and partial/full name match
"""
type OrganizationsByRepTypeAndNameResult {
  """"""
  orgId: Float!

  """Organization object"""
  organization: Organization!
}

"""Input type for entity type redirect"""
input RedirectInput {
  """"""
  type: String!

  """Legacy ID from BAU"""
  legacyId: String

  """BAU Instance"""
  legacyInstance: String!

  """Legacy presentation group id"""
  legacyPresentationGroupId: String

  """"""
  legacyUserName: String
}

"""Redirect object type"""
type Redirect {
  """B21 ID"""
  id: ID

  """B21 GUID"""
  guid: String

  """B21 Profile GUID"""
  profileGuid: String

  """B21 Project ID"""
  projectId: ID

  """B21 Invitation Type Audition/Callback"""
  inviationType: String

  """B21 ID"""
  presentationGroupId: Int

  """B21 ID"""
  presentationFolderId: Int
}

""""""
union ReportUnion = ScheduleReportModel | ScheduleSizeSheetsReportModel | PresentationLogReportModel | PresentationPickReportModel | PresentationSizeSheetsReportModel | ProjectOverviewReportModel | ProjectSubmissionReportModel | ProjectOverviewCDReportModel | BookingCallListsReportModel | TalentSubmissionModel | AgencyCallListReportModel

"""Schedule Report"""
type ScheduleReportModel {
  """"""
  id: ID!

  """"""
  reportType: ReportTypeEnum!

  """"""
  organizationId: Int

  """"""
  createdBy: Int

  """"""
  createdAt: DateTime!

  """"""
  updatedAt: DateTime

  """"""
  csvFileName: String

  """"""
  status: ReportStatusEnum!

  """"""
  scheduleId: Int!

  """"""
  repContactInfo: Boolean

  """"""
  confirmationStatuses: Boolean

  """"""
  castingNotes: Boolean

  """"""
  submissionNotes: Boolean

  """"""
  includeTimeframes: Boolean

  """"""
  displayTalentInfoOptions: [DisplayTalentInfoOptionsEnum!]

  """"""
  displayTalentPhotoOptions: [DisplayTalentPhotoOptionsEnum!]

  """"""
  payload: ScheduleReportPayloadModel
}

""""""
enum ReportTypeEnum {
  """"""
  Schedule

  """"""
  ScheduleReport

  """"""
  ScheduleSizeSheets

  """"""
  ProjectOverview

  """"""
  ProjectSubmission

  """"""
  ProjectOverviewCD

  """"""
  Presentation

  """"""
  PresentationLog

  """"""
  PresentationPick

  """"""
  PresentationSizeSheets

  """"""
  BookingCallList

  """"""
  TalentSubmission

  """"""
  AgencyCallList
}

""""""
enum ReportStatusEnum {
  """"""
  Pending

  """"""
  InProgress

  """"""
  Completed

  """"""
  Failed
}

""""""
enum DisplayTalentInfoOptionsEnum {
  """"""
  PicksAndFeedback

  """"""
  TalentRepresentationInfo

  """"""
  UnionStatuses

  """"""
  KidsAges

  """"""
  ProjectNotes

  """"""
  TalentContactInfo
}

""""""
enum DisplayTalentPhotoOptionsEnum {
  """"""
  Headshots

  """"""
  AuditionSnapshots

  """"""
  NoPhoto
}

"""Schedule Report Payload"""
type ScheduleReportPayloadModel {
  """"""
  projectName: String!

  """"""
  scheduleType: CalendarTypeEnum!

  """"""
  scheduleDate: DateTime!

  """"""
  timeframes: [ScheduleReportTimeframeModel!]!

  """"""
  castingCompanyLogo: ReportMediaModel

  """"""
  timeZone: String
}

""""""
enum CalendarTypeEnum {
  """"""
  AUDITION

  """"""
  CALLBACK
}

"""Schedule Report Timeframe"""
type ScheduleReportTimeframeModel {
  """"""
  id: Int!

  """"""
  startDate: DateTime!

  """"""
  endDate: DateTime!

  """"""
  isBreak: Boolean!

  """"""
  timeslots: [ScheduleReportTimeslotModel!]!
}

"""Schedule Report Timeslot"""
type ScheduleReportTimeslotModel {
  """"""
  id: Int!

  """"""
  startDate: DateTime!

  """"""
  endDate: DateTime!

  """"""
  submissions: [ScheduleReportSubmissionModel!]!
}

"""Schedule Report Submission"""
type ScheduleReportSubmissionModel {
  """"""
  id: Int!

  """"""
  roleName: String!

  """"""
  stageName: String

  """"""
  minor: Boolean

  """"""
  dateOfBirth: DateTime

  """"""
  orgAbbreviation: String

  """"""
  orgName: String

  """"""
  orgParentName: String

  """"""
  orgPhone: [String!]

  """"""
  talentUnions: [String!]

  """"""
  scheduleResponseStatus: String

  """"""
  isPersonal: Boolean

  """"""
  isRepresented: Boolean

  """"""
  cover: ReportMediaModel

  """"""
  submissionNote: String

  """"""
  castingNote: String

  """"""
  profileId: Float

  """"""
  organizationName: String

  """"""
  phone: String

  """"""
  agencyPhone: String @deprecated(reason: "use talentPhone")

  """Agency contacts for repped talent"""
  agencyContacts: ReportContactInfoModel

  """"""
  snapshotMedia: ReportMediaModel

  """"""
  headshotMedia: ReportMediaModel

  """"""
  notes: [String!]

  """"""
  sizeSheets: PresentationSizeSheetsTalentModel

  """"""
  talentPhone: String

  """"""
  talentEmail: String

  """"""
  genderAppearances: [SubFieldsGql!]
}

"""Report Media"""
type ReportMediaModel {
  """"""
  id: ID!

  """"""
  fileKey: String!

  """"""
  guid: String!

  """"""
  thumbnail: ReportMediaModel

  """"""
  mediaStorageStatus: MediaStorageStatus!

  """"""
  mediaType: MediaType!

  """"""
  transformation: MediaTransformation
}

""""""
type ReportContactInfoModel {
  """"""
  email: String

  """"""
  phone: String
}

"""Presentation Report Talent Model Size Sheets"""
type PresentationSizeSheetsTalentModel {
  """"""
  height: PresentationSizeSheetsMetricsModel

  """"""
  weight: PresentationSizeSheetsWeightMetricsModel

  """"""
  profileSizes: [PresentationSizeSheetsProfileSizeModel!]

  """"""
  profileTshirtSizes: [PresentationSizeSheetsProfileSizeModel!]

  """"""
  waist: PresentationSizeSheetsMetricsModel

  """"""
  inseam: PresentationSizeSheetsMetricsModel

  """"""
  gloveSize: PresentationSizeSheetsMetricsModel

  """"""
  hatSize: PresentationSizeSheetsMetricsModel

  """"""
  profileShoeSizes: [PresentationSizeSheetsSizeMetricsModel!]

  """"""
  chestSize: PresentationSizeSheetsMetricsModel

  """"""
  neck: PresentationSizeSheetsMetricsModel

  """"""
  sleeve: PresentationSizeSheetsMetricsModel

  """"""
  coat: String

  """"""
  profilePants: [PresentationSizeSheetsSizeMetricsModel!]

  """"""
  dressSize: PresentationSizeSheetsSizeMetricsModel

  """"""
  bust: PresentationSizeSheetsMetricsModel

  """"""
  underbust: PresentationSizeSheetsMetricsModel

  """"""
  cupSize: String

  """"""
  hipSize: PresentationSizeSheetsMetricsModel
}

""""""
type PresentationSizeSheetsMetricsModel {
  """"""
  id: Int!

  """"""
  inch: String

  """"""
  cm: String

  """"""
  inchRounded: String
}

""""""
type PresentationSizeSheetsWeightMetricsModel {
  """"""
  id: Int!

  """"""
  lbs: Float

  """"""
  kg: Float
}

""""""
type PresentationSizeSheetsProfileSizeModel {
  """"""
  id: Int!

  """"""
  name: String

  """"""
  category: SubFieldsGql

  """"""
  sizeModifier: SubFieldsGql
}

""""""
type SubFieldsGql {
  """"""
  id: Int!

  """"""
  code: String

  """"""
  name: String
}

""""""
type PresentationSizeSheetsSizeMetricsModel {
  """"""
  id: Int!

  """"""
  sizeUS: String

  """"""
  sizeUK: String

  """"""
  sizeEU: String

  """"""
  sizeAU: String

  """"""
  shoeModifier: SubFieldsGql

  """"""
  category: SubFieldsGql

  """"""
  gender: SubFieldsGql
}

"""Schedule Size Sheets Report"""
type ScheduleSizeSheetsReportModel {
  """"""
  id: ID!

  """"""
  reportType: ReportTypeEnum!

  """"""
  organizationId: Int

  """"""
  createdBy: Int

  """"""
  createdAt: DateTime!

  """"""
  updatedAt: DateTime

  """"""
  csvFileName: String

  """"""
  status: ReportStatusEnum!

  """"""
  scheduleId: Int!

  """"""
  displayTalentPhotoOptions: [DisplayTalentPhotoOptionsEnum!]

  """"""
  displayTalentInfoOptions: [DisplayTalentInfoOptionsEnum!]

  """"""
  displayTalentPerPageOptions: DisplayTalentPerPageOptionsEnum

  """"""
  payload: ScheduleReportPayloadModel
}

""""""
enum DisplayTalentPerPageOptionsEnum {
  """"""
  OnePerPage

  """"""
  TwoPerPage
}

"""Presentation Log Report Model"""
type PresentationLogReportModel {
  """"""
  id: ID!

  """"""
  reportType: ReportTypeEnum!

  """"""
  organizationId: Int

  """"""
  createdBy: Int

  """"""
  createdAt: DateTime!

  """"""
  updatedAt: DateTime

  """"""
  csvFileName: String

  """"""
  status: ReportStatusEnum!

  """"""
  presentationId: Int!

  """"""
  presentationFolderIds: [Int!]

  """"""
  displayTalentPhotoOptions: [DisplayTalentPhotoOptionsEnum!]

  """"""
  displayTalentInfoOptions: [DisplayTalentInfoOptionsEnum!]

  """"""
  payload: PresentationLogReportPayloadModel
}

"""Presentation Log Report Payload Model"""
type PresentationLogReportPayloadModel {
  """"""
  projectName: String!

  """"""
  castingCompanyLogo: ReportMediaModel

  """"""
  presentation: PresentationLogPresentationModel
}

"""Presentation Log Report Presentation Model"""
type PresentationLogPresentationModel {
  """"""
  id: ID!

  """"""
  name: String

  """"""
  items: [PresentationLogFolderModel!]
}

"""Presentation Log Report Folder Model"""
type PresentationLogFolderModel {
  """"""
  id: ID!

  """"""
  name: String

  """"""
  items: [PresentationLogGroupModel!]
}

"""Presentation Log Report Payload Group Model"""
type PresentationLogGroupModel {
  """"""
  id: ID!

  """"""
  name: String

  """"""
  items: [PresentationReportTalentModel!]

  """"""
  order: Int
}

"""Presentation Report Talent Model"""
type PresentationReportTalentModel {
  """"""
  id: Int!

  """"""
  roleName: String

  """"""
  stageName: String

  """"""
  minor: Boolean

  """"""
  isPersonal: Boolean

  """"""
  isRepresented: Boolean

  """"""
  dateOfBirth: DateTime

  """"""
  phone: String

  """"""
  talentEmail: String

  """"""
  orgPhone: String

  """"""
  orgLogo: OrganizationLogo

  """"""
  genderAppearance: [SubFieldsGql!]

  """"""
  talentUnions: [String!]

  """"""
  orgName: String

  """"""
  orgParentName: String

  """"""
  orgAbbreviation: String

  """"""
  sizeSheets: PresentationSizeSheetsTalentModel

  """"""
  cover: ReportMediaModel

  """"""
  talentNote: PresentationReportTalentNoteModel

  """"""
  snapshotMedia: ReportMediaModel

  """"""
  headshotMedia: ReportMediaModel

  """"""
  notes: [String!]

  """"""
  agencyContacts: ReportContactInfoModel
}

""""""
type OrganizationLogo {
  """"""
  id: Float!

  """"""
  fileKey: String!
}

"""Presentation Report Talent Note"""
type PresentationReportTalentNoteModel {
  """"""
  picksCount: Float

  """"""
  commentsCount: Float

  """"""
  pickedBy: [String!]

  """"""
  comments: [PresentationReportTalentNoteCommentModel!]
}

"""Presentation Report Talent Note Comment"""
type PresentationReportTalentNoteCommentModel {
  """"""
  id: String!

  """"""
  submissionId: BigInt!

  """"""
  author: String!

  """"""
  comment: String!
}

"""Presentation Pick Report Model"""
type PresentationPickReportModel {
  """"""
  id: ID!

  """"""
  reportType: ReportTypeEnum!

  """"""
  organizationId: Int

  """"""
  createdBy: Int

  """"""
  createdAt: DateTime!

  """"""
  updatedAt: DateTime

  """"""
  csvFileName: String

  """"""
  status: ReportStatusEnum!

  """"""
  presentationId: Int!

  """"""
  presentationFolderIds: [Int!]

  """"""
  payload: PresentationPickReportPayloadModel
}

"""Presentation Pick Report Payload Model"""
type PresentationPickReportPayloadModel {
  """"""
  projectName: String!

  """"""
  castingCompanyLogo: ReportMediaModel

  """"""
  presentation: PresentationPickPresentationModel
}

"""Presentation Pick Report Presentation Model"""
type PresentationPickPresentationModel {
  """"""
  id: ID!

  """"""
  name: String

  """"""
  items: [PresentationPickRoleModel!]
}

"""Presentation Pick Report Role Model"""
type PresentationPickRoleModel {
  """"""
  id: ID!

  """"""
  name: String

  """"""
  items: [PresentationReportTalentModel!]
}

"""Presentation Size Sheets Report Model"""
type PresentationSizeSheetsReportModel {
  """"""
  id: ID!

  """"""
  reportType: ReportTypeEnum!

  """"""
  organizationId: Int

  """"""
  createdBy: Int

  """"""
  createdAt: DateTime!

  """"""
  updatedAt: DateTime

  """"""
  csvFileName: String

  """"""
  status: ReportStatusEnum!

  """"""
  presentationId: Int!

  """"""
  presentationFolderIds: [Int!]

  """"""
  displayTalentPhotoOptions: [DisplayTalentPhotoOptionsEnum!]

  """"""
  displayTalentInfoOptions: [DisplayTalentInfoOptionsEnum!]

  """"""
  displayTalentPerPageOptions: DisplayTalentPerPageOptionsEnum

  """"""
  displayOnlyTalentWithPicks: [DisplayOnlyTalentWithPicksEnum!]

  """"""
  payload: PresentationLogReportPayloadModel
}

""""""
enum DisplayOnlyTalentWithPicksEnum {
  """"""
  PicksOnly

  """"""
  All
}

"""Project Overview Report"""
type ProjectOverviewReportModel {
  """"""
  id: ID!

  """"""
  reportType: ReportTypeEnum!

  """"""
  organizationId: Int

  """"""
  createdBy: Int

  """"""
  createdAt: DateTime!

  """"""
  updatedAt: DateTime

  """"""
  csvFileName: String

  """"""
  status: ReportStatusEnum!

  """"""
  projectId: Int!

  """"""
  payload: ProjectOverviewReportPayloadModel
}

"""Project Overview Report Payload"""
type ProjectOverviewReportPayloadModel {
  """"""
  projectInfo: ProjectReportInfoModel!

  """"""
  projectRoles: [ProjectReportRoleModel!]!

  """"""
  divisionLogo: ReportMediaModel

  """"""
  divisionName: String
}

"""Project Info"""
type ProjectReportInfoModel {
  """"""
  name: String!

  """"""
  projectType: String!

  """"""
  rate: String

  """"""
  castingDirector: String

  """"""
  castingCompany: String

  """"""
  castingAssociate: String

  """"""
  castingAssistant: String

  """"""
  phoneNumber: String

  """"""
  email: String

  """"""
  studio: String

  """"""
  executiveProducer: String

  """"""
  writer: String

  """"""
  director: String

  """"""
  producer: String

  """"""
  network: String

  """"""
  productionCompany: String

  """"""
  adAgency: String

  """"""
  photographer: String

  """"""
  conflictsNameList: [String!]!

  """"""
  conflictsNote: String

  """"""
  usageRun: String

  """"""
  additionalProvisions: String

  """"""
  attachments: [ProjectReportAttachmentModel!]!

  """"""
  projectSynopsis: String

  """"""
  projectNotes: String

  """"""
  displayedProjectUnion: String
}

"""Project Report Attachment"""
type ProjectReportAttachmentModel {
  """"""
  id: Float!

  """"""
  name: String!
}

"""Project Report Role"""
type ProjectReportRoleModel {
  """"""
  id: Float!

  """"""
  name: String!

  """"""
  submissions: [String!]!

  """"""
  gender: [String!]!

  """"""
  ageRange: String!

  """"""
  ethnicAppearance: [String!]!

  """"""
  roleType: String!

  """"""
  displayedRoleUnion: String

  """"""
  sexualSituations: [String!]!

  """"""
  rate: String

  """"""
  rateNote: String

  """"""
  ratePer: String

  """"""
  description: String

  """"""
  rateSummary: String

  """"""
  paidType: String
}

"""Project Submission Report"""
type ProjectSubmissionReportModel {
  """"""
  id: ID!

  """"""
  reportType: ReportTypeEnum!

  """"""
  organizationId: Int

  """"""
  createdBy: Int

  """"""
  createdAt: DateTime!

  """"""
  updatedAt: DateTime

  """"""
  csvFileName: String

  """"""
  status: ReportStatusEnum!

  """"""
  projectId: Int!

  """"""
  talentStatus: TalentStatusEnum!

  """"""
  payload: ProjectSubmissionReportPayloadModel
}

""""""
enum TalentStatusEnum {
  """"""
  SelectedTalent

  """"""
  SubmittedTalent
}

"""Project Overview CD Report Payload"""
type ProjectSubmissionReportPayloadModel {
  """"""
  projectInfo: ProjectReportInfoModel!

  """"""
  projectRolesAcceptingSubmissions: [ProjectSubmissionReportRoleModel!]

  """"""
  projectRolesClosedSubmissions: [ProjectSubmissionReportRoleModel!]

  """"""
  divisionLogo: ReportMediaModel

  """"""
  divisionName: String
}

"""Project Submission Report Role"""
type ProjectSubmissionReportRoleModel {
  """"""
  id: Float!

  """"""
  name: String!

  """"""
  roleType: String!

  """"""
  gender: [String!]

  """"""
  ageRange: String

  """"""
  submissions: [String!]

  """"""
  ethnicAppearance: [String!]
}

"""Project Overview CD Report"""
type ProjectOverviewCDReportModel {
  """"""
  id: ID!

  """"""
  reportType: ReportTypeEnum!

  """"""
  organizationId: Int

  """"""
  createdBy: Int

  """"""
  createdAt: DateTime!

  """"""
  updatedAt: DateTime

  """"""
  csvFileName: String

  """"""
  status: ReportStatusEnum!

  """"""
  projectId: Int!

  """"""
  payload: ProjectOverviewCDReportPayloadModel
}

"""Project Overview CD Report Payload"""
type ProjectOverviewCDReportPayloadModel {
  """"""
  projectInfo: ProjectReportInfoModel!

  """"""
  projectRoles: [ProjectReportCDRoleModel!]!

  """"""
  displayRoleOption: DisplayRoleOptionsEnum!

  """"""
  castingCompanyLogo: ReportMediaModel
}

"""Project Report Role"""
type ProjectReportCDRoleModel {
  """"""
  id: Float!

  """"""
  name: String!

  """"""
  description: String

  """"""
  roleType: String!

  """"""
  roleStatus: String!

  """"""
  displayedRoleUnion: String

  """"""
  gender: [String!]!

  """"""
  displayedRoleGenderAppearance: String!

  """"""
  ageRange: String!

  """"""
  ethnicAppearance: [String!]

  """"""
  roleEthnicityNationality: String

  """"""
  displayedRoleEthnicAppearance: String

  """"""
  sexualSituations: [String!]

  """"""
  sexualSituationDescription: String

  """"""
  spot: String

  """"""
  rate: String

  """"""
  rateNote: String

  """"""
  ratePerType: String

  """"""
  rateSummary: String

  """"""
  paidType: String

  """"""
  roleSkills: [String!]

  """"""
  workRequirement: String

  """"""
  wardrobe: String

  """"""
  sides: [ReportMediaObjectModel!]

  """"""
  photos: [ReportMediaModel!]

  """"""
  sidesVisibility: String

  """"""
  roleDateWithLocation: [ReportRoleDateWithLocation!]

  """"""
  submissionInstruction: String

  """"""
  requestMediaInstruction: String

  """"""
  requestMediaTypes: [String!]

  """"""
  requestSubmissionsFrom: [ReportPublicationSettings!]
}

"""Report Media Sides"""
type ReportMediaObjectModel {
  """"""
  name: String!

  """"""
  mediaObject: ReportMediaModel!
}

""""""
type ReportRoleDateWithLocation {
  """"""
  id: ID!

  """"""
  startDate: DateTime

  """"""
  endDate: DateTime

  """"""
  cityName: String

  """"""
  roleDateType: ReportRoleDateType
}

""""""
type ReportRoleDateType {
  """"""
  id: ID!

  """"""
  code: String

  """"""
  name: String
}

""""""
type ReportPublicationSettings {
  """"""
  publicationSetting: ReportSetting!

  """"""
  dmas: [ReportDma!]!
}

""""""
type ReportSetting {
  """"""
  id: ID!

  """"""
  code: String

  """"""
  name: String
}

""""""
type ReportDma {
  """"""
  id: ID!

  """"""
  code: String

  """"""
  name: String
}

""""""
enum DisplayRoleOptionsEnum {
  """"""
  FullRoleDetails

  """"""
  BasicRoleInformation
}

""""""
type BookingCallListsReportModel {
  """"""
  id: ID!

  """"""
  reportType: ReportTypeEnum!

  """"""
  organizationId: Int

  """"""
  createdBy: Int

  """"""
  createdAt: DateTime!

  """"""
  updatedAt: DateTime

  """"""
  csvFileName: String

  """"""
  status: ReportStatusEnum!

  """"""
  projectId: Int!

  """"""
  payload: BookingCallListReportPayloadModel
}

"""Booking Call List Report Payload"""
type BookingCallListReportPayloadModel {
  """"""
  projectInfo: ProjectReportInfoModel!

  """"""
  personalSubmissions: [BookingCallListPersonalProfilesModel!]!

  """"""
  divisionSubmissions: [BookingCallListDivisionSubmissionsModel!]!

  """"""
  castingCompanyLogo: ReportMediaModel
}

""""""
type BookingCallListPersonalProfilesModel {
  """"""
  id: Int

  """"""
  stageName: String

  """"""
  cover: ReportMediaModel

  """"""
  snapshotMedia: ReportMediaModel

  """"""
  phone: String

  """"""
  talentUnion: [TalentUnionModel!]

  """"""
  roleName: String!

  """"""
  roleRateSummary: String

  """"""
  note: String

  """"""
  isPersonal: Boolean

  """"""
  deletedProfile: Boolean!
}

""""""
type TalentUnionModel {
  """"""
  id: Int!

  """"""
  name: String

  """"""
  code: String

  """"""
  talentMembershipId: String
}

""""""
type BookingCallListDivisionSubmissionsModel {
  """"""
  id: Float

  """"""
  orgName: String

  """"""
  orgParentName: String

  """"""
  orgPhone: [String!]

  """"""
  submissions: [BookingCallListPersonalProfilesModel!]
}

"""Talent Submission Report"""
type TalentSubmissionModel {
  """"""
  id: ID!

  """"""
  reportType: ReportTypeEnum!

  """"""
  organizationId: Int

  """"""
  createdBy: Int

  """"""
  createdAt: DateTime!

  """"""
  updatedAt: DateTime

  """"""
  csvFileName: String

  """"""
  status: ReportStatusEnum!

  """"""
  profileId: Int!

  """"""
  dateFrom: DateTime!

  """"""
  dateTo: DateTime!

  """"""
  payload: TalentSubmissionPayloadModel
}

"""Talent Submission Report Payload"""
type TalentSubmissionPayloadModel {
  """"""
  castingCompanyInfo: CompanyInfoModel

  """"""
  submissions: [TalentSubmissionItemModel!]

  """"""
  profile: TalentSubmissionProfileModel
}

"""Company Info Model"""
type CompanyInfoModel {
  """"""
  name: String

  """"""
  parentName: String

  """"""
  logo: ReportMediaModel
}

"""Talent Submission Item Payload"""
type TalentSubmissionItemModel {
  """"""
  id: Float!

  """"""
  submissionDate: DateTime!

  """"""
  projectName: String!

  """"""
  roleName: String!

  """"""
  ageRange: String!

  """"""
  castingDirector: String

  """"""
  status: String!

  """"""
  mediaRequest: Boolean!
}

"""Talent Submission Profile Model"""
type TalentSubmissionProfileModel {
  """"""
  stageName: String

  """"""
  created: DateTime
}

""""""
type AgencyCallListReportModel {
  """"""
  id: ID!

  """"""
  reportType: ReportTypeEnum!

  """"""
  organizationId: Int

  """"""
  createdBy: Int

  """"""
  createdAt: DateTime!

  """"""
  updatedAt: DateTime

  """"""
  csvFileName: String

  """"""
  status: ReportStatusEnum!

  """"""
  scheduleId: Int!

  """"""
  payload: AgencyCallListReportPayloadModel
}

"""Agency Call List Report Payload"""
type AgencyCallListReportPayloadModel {
  """"""
  divisionLogo: ReportMediaModel

  """"""
  divisionName: String

  """"""
  scheduleInfo: AgencyCallListScheduleInfo!

  """"""
  projectInfo: AgencyCallListProjectInfo!

  """"""
  reppedSubmissions: [AgencyCallListDivisionGroup!]!

  """"""
  personalSubmissions: [AgencyCallListSubmission!]!
}

""""""
type AgencyCallListScheduleInfo {
  """"""
  scheduleType: String!

  """"""
  scheduleDate: DateTime!

  """"""
  scheduleName: String!
}

""""""
type AgencyCallListProjectInfo {
  """"""
  name: String!

  """"""
  castingDirector: String

  """"""
  productionCompany: String

  """"""
  producer: String

  """"""
  adAgency: String
}

""""""
type AgencyCallListDivisionGroup {
  """"""
  id: Int!

  """"""
  organizationName: String!

  """"""
  phone: [String!]

  """"""
  submissions: [AgencyCallListSubmission!]!
}

""""""
type AgencyCallListSubmission {
  """"""
  id: BigInt!

  """"""
  slotStartDate: DateTime!

  """"""
  roleName: String!

  """"""
  stageName: String

  """"""
  talentUnions: [String!]

  """"""
  scheduleResponseStatus: String

  """"""
  cover: ReportMediaModel

  """"""
  phone: String

  """"""
  note: String

  """"""
  isPersonal: Boolean!

  """"""
  deletedProfile: Boolean!
}

"""Input type for search representatives"""
input SearchRepresentativeInput {
  """Company name"""
  companyName: String

  """List of Representative Type CODEs"""
  representativeTypeCodes: [String!]

  """List of Dma CODEs"""
  dmas: [String!]

  """List of Representative Category CODEs"""
  representativeCategoryCodes: [String!]

  """List of Representative Age Category CODEs"""
  representativeAgeCategoryCodes: [String!]
}

"""Representative search result"""
type RepresentativeSearchResult {
  """Total records count"""
  totalCount: Int!

  """List of representatives"""
  organizations: [Organization!]!
}

"""Profile List Details"""
type ProfileList {
  """List ID"""
  id: ID!

  """List Name"""
  name: String!

  """Organization ID"""
  organizationId: Int

  """List creation date"""
  created: DateTime!

  """Last list updated date"""
  updated: DateTime

  """List Type Object"""
  listType: ListType

  """Account of last list editor"""
  modifiedBy: Account

  """List's Creator Account"""
  createdBy: Account

  """Organization of represe"""
  organization: Organization

  """"""
  profiles(profileSearchInput: ProfileSearchInput, page: PageInput!): ProfileSearch!

  """Total count of profiles"""
  totalProfiles(profileStatusToSearch: ProfileStatusSearchEnum): Float!
}

"""Roster type object"""
type ListType {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""Profile search object"""
type ProfileSearch {
  """Total number of profiles"""
  totalCount: Int

  """Search profile list"""
  profiles: [Profile!]

  """"""
  facets: [Facet!]
}

"""Sort order for list of lists"""
enum ListSortOrderEnum {
  """"""
  ALPHABETICAL

  """"""
  LAST_MODIFIED
}

"""Paginated result with [ProfileList] objects"""
type ProfileListPaginatedResult {
  """Total count of rows"""
  totalCount: Int!

  """List of ProfileList objects"""
  objects: [ProfileList!]!

  """Current page"""
  page: Int!

  """Total pages"""
  totalPages: Int!

  """Last key """
  lastKey: String
}

"""Get Organization Representative Lists Input"""
input GetOrganizationRepresentativeListsInput {
  """Reps list sort order"""
  sortOrder: ListSortOrderEnum = LAST_MODIFIED
}

"""Paginated result with [RepresentativeList] objects"""
type RepresentativeListPaginatedResult {
  """Total count of rows"""
  totalCount: Int!

  """List of RepresentativeList objects"""
  objects: [RepresentativeList!]!

  """Current page"""
  page: Int!

  """Total pages"""
  totalPages: Int!

  """Last key """
  lastKey: String
}

"""Representative List Details"""
type RepresentativeList {
  """List ID"""
  id: ID!

  """List Name"""
  name: String!

  """Organization ID"""
  organizationId: Int

  """List creation date"""
  created: DateTime!

  """Last list updated date"""
  updated: DateTime

  """Representative List Type Object"""
  listType: ListType

  """Total count of representatives"""
  totalRepresentatives: Float!

  """Account of list creator"""
  account: Account

  """Account of last list editor"""
  modifiedBy: Account

  """List's Creator Account"""
  createdBy: Account

  """Organization of represe"""
  organization: Organization

  """"""
  representatives: [Organization!]!
}

"""Object for representing a Schedule Slot."""
type ScheduleSlot {
  """Slot Id"""
  id: ID

  """Slot Id"""
  slotId: Float

  """Slot Start Time"""
  slotStartTime: DateTime

  """Slot End Time"""
  slotEndTime: DateTime

  """"""
  submissions: [Submission!]!
}

"""Schedule Details"""
type ScheduleDetail {
  """Schedule Id"""
  id: ID

  """Schedule Id"""
  scheduleId: ID

  """Project Id"""
  projectId: Int

  """Schedule Name"""
  name: String!

  """Note"""
  note: String!

  """Schedule Date"""
  date: DateTime

  """"""
  version: Int

  """"""
  isLocationHidden: Boolean!

  """Schedule Address"""
  address: Address

  """Time Zone"""
  timeZone: TimeZone

  """Calendar Type"""
  calendarType: CalendarType

  """"""
  timeframes: [ScheduleTimeframe!]!

  """"""
  timeframesSummary: [ScheduleTimeframeSummary!]!

  """"""
  hasScheduledRepsSubmissions: Boolean!

  """"""
  scheduleInviteRequestNotes: ScheduleInviteRequestNotes!
}

"""Calendar Type object"""
type CalendarType {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""Schedule Timeframe Details"""
type ScheduleTimeframe {
  """Timeframe Id"""
  id: ID

  """Timeframe Name"""
  name: String!

  """Timeframe Start Time"""
  startTime: DateTime

  """Timeframe End Time"""
  endTime: DateTime

  """Timeframe Duration"""
  durations: [Float!]

  """Is this timeframe represents a break"""
  isBreak: Boolean!

  """List of Slots in this Timeframe"""
  slots: [ScheduleSlot!]
}

"""Schedule Timeframe Summary"""
type ScheduleTimeframeSummary {
  """Timeframe Id"""
  id: ID!

  """Timeframe Duration"""
  durations: [Float!]

  """"""
  startTime: DateTime!

  """"""
  endTime: DateTime!

  """"""
  isBreak: Boolean!

  """"""
  slotsCount: Int!

  """"""
  emptySlotsCount: Int!

  """"""
  rolesSummary: [ScheduleTimeframeRoleSummary!]!

  """"""
  requestSummary: [ScheduleTimeframRequestSummary!]!
}

"""Schedule Timeframe Role Summary"""
type ScheduleTimeframeRoleSummary {
  """"""
  id: ID!

  """"""
  timeframeId: ID!

  """"""
  name: String!

  """"""
  internalName: String

  """"""
  submissionCount: Int!
}

"""Schedule Timeframe Request Summary"""
type ScheduleTimeframRequestSummary {
  """"""
  status: String!

  """"""
  count: Int!
}

""""""
type ScheduleInviteRequestNotes {
  """"""
  noteForTalents: String

  """"""
  noteForRepresentative: String
}

"""Search Schedules input"""
input SchedulesSelectInput {
  """Schedule ids to search in"""
  scheduleIds: [Int!]

  """List of Unscheduled submissions"""
  unscheduled: Boolean
}

""""""
type ScheduleTalentPool {
  """"""
  roleId: Int!

  """"""
  submissions: [Submission!]

  """"""
  submissionCount: Int!
}

"""Holds the input data for Slot."""
type Slot {
  """Slot ID"""
  slotId: Int!

  """Submission ID"""
  submissionIds: [Int!]!

  """Slot argument ID"""
  slotArguments: [SlotArguments!]!
}

"""Holds the link between slot and entity."""
type SlotArguments {
  """entity ID"""
  entityId: BigInt!

  """Slot argument entity ID"""
  entityType: Int!

  """Slot argument ID"""
  slotArgId: Int!
}

""""""
type ScheduleSlotSummary {
  """"""
  id: Int!

  """"""
  timeframeId: Int!

  """"""
  startTime: DateTime!

  """"""
  endTime: DateTime!

  """"""
  submissionCount: Int!

  """"""
  roleCount: Int!
}

"""Search input"""
input ScheduleSearchInput {
  """List of Project Id to search in"""
  projectId: [Int!]

  """"""
  scheduleType: CalendarTypeEnum
}

"""Paginated result with [Schedule] objects"""
type SchedulePaginatedResult {
  """Total count of rows"""
  totalCount: Int!

  """List of Schedule objects"""
  objects: [Schedule!]!

  """Current page"""
  page: Int!

  """Total pages"""
  totalPages: Int!

  """Last key """
  lastKey: String
}

"""Schedule"""
type Schedule {
  """Primary ID"""
  id: ID!

  """Name"""
  name: String

  """Updated Date"""
  lastUpdated: DateTime

  """Schedule Date"""
  scheduleDate: DateTime

  """canceled status"""
  isCanceled: Boolean

  """scheduleType"""
  scheduleType: String

  """Submissions Count"""
  submissionCount: BigInt

  """"""
  statusCounts: ScheduleInviteResponseStatusCounts!
}

""""""
type ScheduleInviteResponseStatusCounts {
  """"""
  scheduleId: Int!

  """"""
  notSent: Int!

  """"""
  confirmed: Int!

  """"""
  declined: Int!

  """"""
  pending: Int!

  """"""
  rescheduleRequested: Int!
}

"""Schedule History"""
type ScheduleHistory {
  """Schedule Id"""
  id: ID

  """Schedule Id"""
  scheduleId: ID

  """Project Id"""
  projectId: Int

  """Schedule Name"""
  name: String!

  """Note"""
  note: String!

  """Schedule Date"""
  date: DateTime

  """"""
  version: Int

  """"""
  isLocationHidden: Boolean!

  """Schedule Address"""
  address: Address

  """Time Zone"""
  timeZone: TimeZone

  """Calendar Type"""
  calendarType: CalendarType

  """"""
  timeframes: [ScheduleTimeframe!]!

  """"""
  timeframesSummary: [ScheduleTimeframeSummary!]!

  """"""
  hasScheduledRepsSubmissions: Boolean!

  """"""
  scheduleInviteRequestNotes: ScheduleInviteRequestNotes!

  """Schedule History created date"""
  created: DateTime

  """Schedule History operation time"""
  operationTime: DateTime

  """Schedule History operation"""
  operation: String

  """Schedule History modified by"""
  modifiedBy: Float
}

""""""
input ProfileSearchSortOption {
  """"""
  fieldName: ProfileSearchSortField!

  """Default value: ASC"""
  sortOrder: SortOrderEnum
}

"""Profile sort field options"""
enum ProfileSearchSortField {
  """"""
  Random

  """"""
  FirstName

  """"""
  LastName
}

""""""
type ProfileUnionFilter {
  """"""
  roleId: Float!

  """"""
  talentUnions: [TalentUnionEnum!]!

  """"""
  excludeTalentUnions: [TalentUnionEnum!]!
}

"""Search Casting Billboard Input"""
input CastingBillboardSearchInput {
  """"""
  projectId: Int

  """"""
  roleId: Int

  """"""
  workingLocations: [Int!]

  """"""
  genderAppearanceIds: [Int!]

  """"""
  genderAppearances: [GenderAppearanceEnum!]

  """"""
  ethnicAppearanceIds: [Int!]

  """"""
  ethnicAppearances: [EthnicAppearanceEnum!]

  """"""
  profileUnions: [TalentUnionEnum!]

  """"""
  profileUnionIds: [Int!]

  """"""
  projectTypeIds: [Int!]

  """"""
  roleTargetIds: [Int!]

  """"""
  roleTargets: [RoleTargetsEnum!]

  """"""
  payPreferenceIds: [Int!]

  """"""
  payPrefences: [PayPreferencesEnum!]

  """Playable Age Range"""
  playableAge: AgeRangeInput

  """"""
  autofill: Boolean

  """"""
  showRolesNoLongerAcceptingSubmissions: Boolean

  """Search by Project/Role Names and Descriptions"""
  roleProjectKeywordSearch: RoleProjectKeywordSearchEnum

  """Keywords"""
  keywords: String

  """"""
  excludeSexualSituations: Boolean
}

""""""
enum RoleTargetsEnum {
  """"""
  BACKGROUND

  """"""
  PRINCIPAL
}

""""""
enum PayPreferencesEnum {
  """"""
  NO

  """"""
  PAY_IS_DEFERRED

  """"""
  UNLISTED

  """"""
  YES
}

""""""
enum RoleProjectKeywordSearchEnum {
  """"""
  PROJECT_NAME

  """"""
  ROLE_NAME

  """"""
  PROJECT_OR_ROLE_DESCRIPTION

  """"""
  ALL
}

"""Role search result object"""
type RoleSearchResult {
  """Result total count"""
  totalCount: Float!

  """Search role list"""
  roles: [Role!]!
}

"""Organization search input"""
input OrganizationSearchInput {
  """Organization name"""
  name: String

  """Organization abbreviation"""
  abbreviation: String

  """
  Defines whether search should use 'add' or 'or' clause with input parameters
  """
  multiMatch: Boolean

  """Organization Type Id"""
  representationTypeId: Int

  """List of Representation Type Id"""
  representationTypeIds: [Int!]

  """List of Representation Category Id"""
  representationCategoryIds: [Int!]

  """List of Representation Category Id"""
  representationCategoryList: [Int!]

  """List of Representation Age Category Id"""
  representationAgeCategoryIds: [Int!]

  """Organization Id"""
  organizationId: Int

  """Organization parent Id"""
  organizationParentId: Int

  """Organization parent Ids"""
  organizationParentIds: [Int!]

  """System Role Id for account/user"""
  systemRoleId: Int

  """"""
  parent: Boolean

  """List of DMA Id"""
  dmas: [Int!]

  """Organization Status Ids"""
  organizationStatusIds: Int
}

"""Organization search result"""
type OrganizationSearchResult {
  """Total records count"""
  totalCount: Int!

  """List of organization"""
  organizations: [Organization!]
}

"""Filters for searching suitable projects"""
input ProjectFilterInput {
  """Search in the name"""
  projectName: String

  """Search in role name"""
  roleName: String

  """Which organization division should be considered?"""
  dmaIds: [ID!]

  """Is project viewed"""
  isViewed: Boolean

  """Has selects attached?"""
  hasSelects: Boolean

  """Has submissions attached?"""
  hasSubmissions: Boolean

  """Has requests attached?"""
  hasRequests: Boolean

  """What project types (by ID) should project have?"""
  projectTypeIds: [ID!]

  """Should the project contain only kids roles?"""
  isKidsRolesOnly: Boolean

  """Which project unions should be considered?"""
  projectUnionIds: [ID!]

  """Which casting organization's project should it be?"""
  castingOrganizationIds: [ID!]

  """Search by roleTypes array using codes"""
  roleTypes: [String!]

  """What submission date should it be?"""
  submissionDueDate: SubmissionDueDateSearchEnum

  """Which organization this project belongs?"""
  organizationId: Float
}

"""Determine discrete boundaries for project filtering"""
enum SubmissionDueDateSearchEnum {
  """"""
  TODAY

  """"""
  FUTURE
}

""""""
type ProjectVisibilityResult {
  """Total number of projects"""
  totalCount: Int

  """project_id - is_viewed pair"""
  projectVisibilities: [ProjectVisibility!]!

  """Total number of new or updated requests"""
  totalCountOfNewOrUpdatedRequests: Int!

  """Total number of requests"""
  totalCountOfRequests: Int!

  """Clusterized info about project locations"""
  projectsLocations: [ProjectLocation!]!
}

""""""
type ProjectVisibility {
  """Project ID"""
  project: Project!

  """States if the project was viewed by the context user"""
  isViewed: Boolean!

  """
  States if the project has any role with selected talent from user current agency
  """
  isAnyRoleSelected: Boolean!

  """
  States if the project has any role with submitted talent from user current agency
  """
  isAnyRoleSubmitted: Boolean!

  """States if the project has any requests for current reps agency"""
  requestsInfo: ProjectRequestsInfo
}

""""""
type ProjectRequestsInfo {
  """Total Project Requests regardless of status"""
  totalProjectRequestsCount: Float!

  """
  # of Requested talent in Project with worksheer request status of New, Rescheduled, Review 
  """
  newProjectRequestsCount: Float
}

""""""
type ProjectLocation {
  """"""
  id: ID!

  """"""
  projectId: Int!

  """"""
  projectLocations: [String!]!
}

""""""
input CDWorksheetFilterInput {
  """"""
  projectId: Int!

  """"""
  roleIds: [Int!]

  """"""
  stageName: String

  """"""
  hasRepresentation: Boolean

  """"""
  scheduleIds: [Int!]

  """"""
  sessionIds: [Int!]

  """"""
  representativeListIds: [Int!]

  """"""
  representativeIds: [Int!]

  """"""
  tileSchemeValueCodes: [String!]

  """"""
  statusCodes: [String!]

  """"""
  hasPicks: Boolean

  """"""
  hasComments: Boolean

  """"""
  presentationIds: [Int!]

  """"""
  scheduleRequest: SubmissionScheduleRequestSearchInput

  """"""
  otherRequest: SubmissionRequestSearchInput
}

""""""
input SubmissionScheduleRequestSearchInput {
  """"""
  ids: [String!]

  """"""
  responseStatuses: [ScheduleInviteRequestStatus!]

  """"""
  notInRequest: [Boolean!]
}

""""""
enum ScheduleInviteRequestStatus {
  """"""
  PENDING

  """"""
  CANCELLED

  """"""
  DECLINED

  """"""
  CONFIRMED

  """"""
  RESCHEDULED

  """"""
  CANCELLED_RESCHEDULED

  """"""
  RESCHEDULE_REQUESTED

  """"""
  ON_HOLD

  """"""
  UPDATED
}

""""""
input SubmissionRequestSearchInput {
  """"""
  ids: [String!]

  """"""
  responseStatuses: [RequestStatusUnion!]

  """"""
  notInRequest: [Boolean!]
}

""""""
enum RequestStatusUnion {
  """"""
  NOT_SENT

  """"""
  PENDING

  """"""
  CANCELLED

  """"""
  ANSWERED

  """"""
  MEDIA_ADDED

  """"""
  ADDITIONAL_MEDIA_ADDED

  """"""
  DECLINED

  """"""
  CONFIRMED

  """"""
  RESCHEDULED

  """"""
  ON_HOLD

  """"""
  UPDATED

  """"""
  CHANGE_REQUESTED

  """"""
  RESCHEDULE_REQUESTED

  """"""
  CANCELLED_RESCHEDULED
}

""""""
input RoleTypeFilterInput {
  """"""
  keys: FilterInput

  """"""
  projectType: FilterInput

  """"""
  roleTarget: FilterInput
}

"""Measurement object"""
type ShoeSize {
  """Primary ID"""
  id: ID!

  """ShoeSize for US"""
  shoeSizeUS: String!

  """ShoeSize for EU"""
  shoeSizeEU: String!

  """ShoeSize for UK"""
  shoeSizeUK: String!

  """ShoeSize for AU"""
  shoeSizeAU: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Gender"""
  category: BasicSetting!

  """short order"""
  sortOrder: Float!
}

"""General size object"""
type GeneralSize {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int

  """Size gender ID"""
  sizeGenderId: ID!

  """"""
  category: BasicSetting!
}

""""""
enum TileSchemaEnum {
  """"""
  Default

  """"""
  PresentationPick
}

""""""
input StateFilterInput {
  """Filter states by ID or CODE values"""
  state: FilterInput

  """Filter states by country ID or CODE values"""
  country: FilterInput
}

""""""
type GetChatMessagesByTopicModel {
  """"""
  messages: [ChatMessageModel!]!

  """"""
  lastViewedMessageId: String

  """"""
  unreadMessageCount: Int

  """"""
  participantOrganizations: [Organization!]
}

""""""
enum SearchDirection {
  """"""
  Asc

  """"""
  Dsc
}

""""""
type SavedSearch {
  """"""
  id: ID!

  """"""
  name: String!

  """"""
  isDefault: Boolean!

  """"""
  notificationType: String

  """"""
  attributes: SavedSearchAttributes!
}

""""""
type SavedSearchAttributes {
  """"""
  workingLocations: [Dma!]

  """"""
  ethnicAppearances: [EthnicAppearance!]

  """"""
  genderAppearances: [GenderAppearance!]

  """"""
  paidTypes: [PaidType!]

  """"""
  roleTargets: [RoleTarget!]

  """"""
  projectTypes: [ProjectType!]

  """"""
  talentUnions: [TalentUnion!]

  """"""
  playableAge: AgeRange

  """"""
  showRolesNoLongerAcceptingSubmissions: Boolean

  """"""
  roleProjectKeywordSearch: RoleProjectKeywordSearchEnum

  """"""
  keywords: String

  """"""
  excludeSexualSituations: Boolean
}

""""""
type AgeRange {
  """"""
  ageMax: Int

  """"""
  ageMin: Int

  """"""
  inMonths: Boolean
}

""""""
type SavedSearchList {
  """"""
  items: [SavedSearch!]!

  """"""
  nextKeyOffset: String
}

""""""
input SubmissionTrendsInput {
  """"""
  timeFrame: TimeFrameEnum = NinetyDays

  """"""
  interval: IntervalEnum = Week
}

"""Time frame"""
enum TimeFrameEnum {
  """"""
  ThirtyDays

  """"""
  NinetyDays

  """"""
  SixMonths

  """"""
  Year

  """"""
  All
}

"""Date interval"""
enum IntervalEnum {
  """"""
  Week

  """"""
  Month

  """"""
  Quarter
}

""""""
union SubmissionTrendsResult = SubmissionTrendsSuccess | SubmissionTrendsNoAccessError

""""""
type SubmissionTrendsSuccess {
  """"""
  data: [SubmissionTrend!]!
}

""""""
type SubmissionTrend {
  """"""
  submissionCount: Int!

  """"""
  selectionCount: Int!

  """"""
  date: DateTime
}

""""""
type SubmissionTrendsNoAccessError implements IError {
  """"""
  code: Int!

  """"""
  message: String!
}

""""""
interface IError {
  """"""
  code: Int!

  """"""
  message: String!
}

""""""
type Session {
  """"""
  accessToken: String

  """"""
  expirationDate: DateTime

  """"""
  deviceId: String

  """"""
  context: AccountContext
}

""""""
type AccountContext {
  """"""
  role: ContextRole

  """"""
  artistId: Float

  """"""
  organizationId: Float
}

""""""
type ContextRole {
  """"""
  id: Int!

  """"""
  code: SystemRoleCode!
}

""""""
enum SystemRoleCode {
  """"""
  API

  """"""
  AGENT

  """"""
  TALENT

  """"""
  MANAGER

  """"""
  ROOT_USER

  """"""
  LEGACY_USER

  """"""
  PROJECT_CREATOR

  """"""
  CASTING_DIRECTOR

  """"""
  CREATIVE

  """"""
  SHARED_PROJECT_USER
}

""""""
input SearchAccountsFiltersArgs {
  """"""
  accountId: Int

  """"""
  firstName: String

  """"""
  lastName: String

  """"""
  phone: String

  """"""
  email: String

  """"""
  systemRoleIds: [Int!]

  """"""
  organizationIds: [Int!]

  """"""
  former: Boolean

  """"""
  legacyLogin: String

  """"""
  legacyInstance: String

  """"""
  legacyEmail: String
}

""""""
type AccountItemPagedList {
  """"""
  page: Int!

  """"""
  totalCount: Int!

  """"""
  totalPages: Int!

  """"""
  data: [AccountItem!]!
}

""""""
type AccountItem {
  """"""
  id: Float!

  """"""
  firstName: String!

  """"""
  lastName: String!

  """"""
  email: String!

  """"""
  phone: String

  """"""
  accountStatus: AccountStatus

  """"""
  accountSystemRole: [SystemRole!]

  """"""
  lastSuccessfulLogin: DateTime

  """"""
  created: DateTime

  """"""
  updated: DateTime

  """"""
  emailToReset: String

  """"""
  legacyLogin: String

  """"""
  legacyInstance: String

  """"""
  legacyEmail: String

  """"""
  organizationIds: [AccountOrganizationItem!]

  """"""
  legacyProfileStatus: ProfileStatus
}

""""""
type AccountOrganizationItem {
  """"""
  organizationId: Float!

  """"""
  organizationParentId: Float

  """"""
  enabled: Boolean

  """"""
  admin: Boolean
}

"""Order By options, default set to timestamp DESC"""
input NotificationOrderByInput {
  """Timestamp Sort field"""
  timestamp: SortOrder!
}

""""""
enum SortOrder {
  """"""
  ASC

  """"""
  DESC
}

""""""
input SearchNotificationFiltersArgs {
  """"""
  archived: Boolean
}

""""""
type NotificationPagedList {
  """"""
  page: Int!

  """"""
  totalCount: Int!

  """"""
  totalPages: Int!

  """"""
  data: [Notification!]!
}

""""""
type Notification {
  """"""
  id: ID!

  """"""
  timestamp: DateTime!

  """"""
  toArtistId: Int

  """"""
  toProfileId: Int!

  """"""
  toAccountId: Int

  """"""
  type: String!

  """"""
  from: String

  """"""
  subject: String!

  """"""
  message: String!

  """"""
  context: NotificationContext

  """"""
  viewed: Boolean

  """"""
  archivedAt: DateTime
}

""""""
type NotificationContext {
  """"""
  requestId: ID

  """"""
  requestType: RequestType

  """"""
  auditionDateUTC: DateTime
}

""""""
enum RequestType {
  """"""
  MEDIA

  """"""
  AUDITION

  """"""
  CALLBACK

  """"""
  ASK_QUESTION

  """"""
  ROSTER_INVITATION
}

""""""
input SearchOrganizationsFiltersArgs {
  """Organization Id"""
  organizationId: Int

  """Organization name"""
  name: String

  """Organization Type Id"""
  representationTypeId: Int

  """Organization Parent Id"""
  organizationParentId: Int

  """Organization status code"""
  organizationStatusCodes: [String!]

  """System role code"""
  systemRoles: [String!]
}

""""""
type OrganizationItemPagedList {
  """"""
  page: Int!

  """"""
  totalCount: Int!

  """"""
  totalPages: Int!

  """"""
  data: [OrganizationItem!]!
}

""""""
type OrganizationItem {
  """Primary ID"""
  id: Int!

  """"""
  created: DateTime

  """"""
  updated: DateTime

  """Organization name"""
  name: String

  """Parent organization ID"""
  organizationParentId: Int

  """abbreviation"""
  abbreviation: String

  """"""
  divisions: [OrganizationItem!]

  """"""
  representationType: RepresentationType

  """Profile Count"""
  profileCount: Int

  """Account Count"""
  accountCount: Int

  """"""
  accounts: [AccountItem!]

  """"""
  dmas: [DmaItem!]

  """"""
  representationCategory: [RepresentationCategory!]

  """"""
  logo: MediaItem
}

""""""
type DmaItem {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int

  """"""
  region: RegionItem
}

""""""
type RegionItem {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int

  """"""
  country: CountryItem
}

""""""
type CountryItem {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enbaled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

""""""
type MediaItem {
  """Media ID"""
  mediaId: Int!

  """name"""
  name: String

  """Upload Path"""
  uploadPath: String
}

""""""
type OrganizationDictionaryItemPagedList {
  """"""
  page: Int!

  """"""
  totalCount: Int!

  """"""
  totalPages: Int!

  """"""
  data: [OrganizationDictionaryItem!]!
}

""""""
type OrganizationDictionaryItem {
  """Primary ID"""
  id: Int!

  """Organization name"""
  name: String

  """Organization abbreviation"""
  abbreviation: String
}

""""""
input RepsWorksheetFiltersArgs {
  """"""
  type: RequestType

  """"""
  receivedFrom: DateTime

  """"""
  receivedTo: DateTime

  """"""
  slotDateFrom: DateTime

  """"""
  slotDateTo: DateTime

  """"""
  dueDateFrom: DateTime

  """"""
  dueDateTo: DateTime

  """"""
  statuses: [RepRequestStatus!]

  """"""
  projectIds: [Int!]

  """"""
  profileIds: [Int!]

  """"""
  fromOrgIds: [Int!]

  """"""
  responseStatus: ResponseStatus

  """"""
  talentResponseStatus: ResponseStatus
}

"""Status enum for rep's worksheet"""
enum RepRequestStatus {
  """"""
  NOT_SENT

  """"""
  NEW_REQUEST

  """"""
  NEW_MESSAGE

  """"""
  RESCHEDULED

  """"""
  REVIEW_RESPONSE

  """"""
  UPDATED

  """"""
  CHANGE_REQUESTED

  """"""
  ON_HOLD

  """"""
  PENDING

  """"""
  CANCELLED

  """"""
  COMPLETED

  """"""
  RESCHEDULE_REQUESTED

  """"""
  CANCELLED_RESCHEDULED

  """"""
  DECLINED
}

""""""
enum ResponseStatus {
  """"""
  CONFIRMED

  """"""
  DECLINED

  """"""
  ANSWERED

  """"""
  MEDIA_ADDED

  """"""
  ADDITIONAL_MEDIA_ADDED

  """"""
  CHANGE_REQUESTED

  """"""
  RESCHEDULE_REQUESTED
}

""""""
enum RepWorksheetFieldOrder {
  """"""
  receivedAt

  """"""
  dueDate

  """"""
  slotDate

  """"""
  status

  """"""
  type

  """"""
  talentName

  """"""
  projectName
}

""""""
input RepWorksheetOrderOption {
  """"""
  field: RepWorksheetFieldOrder!

  """"""
  sortOrder: SortOrder = ASC
}

""""""
type RepsWorksheetItemPagedList {
  """"""
  page: Int!

  """"""
  totalCount: Int!

  """"""
  totalPages: Int!

  """"""
  data: [RepsWorksheetItem!]!
}

""""""
type RepsWorksheetItem {
  """Request ID"""
  id: ID!

  """Request Type"""
  type: String!

  """Request Status"""
  status: RepRequestStatus!

  """"""
  submission: RepWorksheetSubmission

  """"""
  updatedAt: DateTime

  """Date when request was created"""
  createdAt: DateTime!

  """Talent's response to a request"""
  talentResponse: RepWorksheetResponse

  """Response to a request"""
  response: RepWorksheetResponse

  """How many times a request has been forwarded to a talent"""
  forwardCount: Int

  """Schedule"""
  schedule: RepWorksheetScheduleDetail

  """Date of Slot"""
  slotDate: DateTime

  """"""
  unreadMessageCount: Int

  """"""
  lastMessageId: String

  """"""
  dueDate: DateTime
}

"""Submission info"""
type RepWorksheetSubmission {
  """Talent's ID"""
  id: Int!

  """"""
  profile: RepWorksheetProfile

  """"""
  role: RepWorksheetRole!

  """Submission's note"""
  note: String

  """"""
  isCreatedByCD: Boolean
}

"""Talent info"""
type RepWorksheetProfile {
  """Talent's ID"""
  id: Int!

  """Talent's stage name"""
  stageName: String!

  """Talents phone"""
  phone: String

  """Talent's email"""
  email: String

  """"""
  defaultSubmissionNote: String

  """"""
  profileMainDivision: RepWorksheetOrganization

  """"""
  talentUnions: [RepWorksheetTalentUnion!]
}

""""""
type RepWorksheetOrganization {
  """"""
  id: Int

  """"""
  name: String
}

""""""
type RepWorksheetTalentUnion {
  """"""
  id: String

  """"""
  code: String

  """"""
  name: String
}

""""""
type RepWorksheetRole {
  """"""
  id: Int!

  """"""
  name: String!

  """"""
  project: RepWorksheetProject!
}

"""Project info"""
type RepWorksheetProject {
  """Project's ID"""
  id: Int!

  """Project's name"""
  name: String!

  """Casting company"""
  castingCompany: String
}

"""Response type for Rep Worksheet"""
type RepWorksheetResponse {
  """Response status"""
  status: ResponseStatus!

  """"""
  repliedAt: DateTime

  """Response note"""
  note: String

  """The media files sent in response"""
  medias: [WfMedia!] @deprecated(reason: "please use mediaList")

  """"""
  mediaList: [MediaResponseItem!]
}

""""""
type WfMedia {
  """"""
  mediaId: Int!

  """"""
  name: String

  """"""
  filename: String!

  """"""
  guid: String!

  """"""
  fileType: WfMediaFileType

  """"""
  mediaType: WfMediaType

  """"""
  mediaStatus: WfMediaStatus

  """"""
  mediaStorageStatus: WfMediaStatus

  """"""
  tag: String

  """"""
  url: String

  """"""
  fileKey: String

  """"""
  thumbnailUrl: String

  """"""
  transformation: WfMediaTransformation

  """"""
  isLocked: Boolean

  """"""
  thumbnail: WfMedia
}

""""""
type WfMediaFileType {
  """"""
  id: ID!

  """"""
  name: String!

  """"""
  code: String!

  """"""
  mediaType: WfMediaType!
}

""""""
type WfMediaType {
  """"""
  id: ID!

  """"""
  name: String!

  """"""
  code: String!
}

""""""
type WfMediaStatus {
  """"""
  id: ID!

  """"""
  name: String!

  """"""
  code: String!
}

""""""
type WfMediaTransformation {
  """"""
  xAxis: Float

  """"""
  yAxis: Float

  """"""
  width: Float

  """"""
  height: Float

  """"""
  rotate: Float
}

""""""
type MediaResponseItem {
  """"""
  id: Int!

  """"""
  alias: String

  """"""
  timestamp: DateTime!

  """"""
  isAdditional: Boolean

  """"""
  isForwardedToCD: Boolean

  """"""
  type: String!

  """"""
  media: WfMedia!
}

""""""
type RepWorksheetScheduleDetail {
  """"""
  id: ID

  """"""
  timeZone: RepWorksheetTimeZone

  """"""
  address: RepWorksheetScheduleAddress
}

"""Measurement object"""
type RepWorksheetTimeZone {
  """"""
  id: ID

  """"""
  standardName: String!

  """"""
  abbreviation: String
}

""""""
type RepWorksheetScheduleAddress {
  """"""
  id: Int!

  """"""
  line1: String

  """"""
  line2: String

  """"""
  line3: String

  """"""
  postalCode: String

  """"""
  city: String

  """"""
  note: String

  """"""
  otherDetail: String

  """"""
  state: RepWorksheetScheduleAddressState

  """"""
  country: RepWorksheetScheduleAddressCountry
}

""""""
type RepWorksheetScheduleAddressState {
  """"""
  id: ID

  """"""
  code: String

  """"""
  name: String
}

""""""
type RepWorksheetScheduleAddressCountry {
  """"""
  id: ID

  """"""
  code: String

  """"""
  name: String
}

""""""
enum RepsWorksheetGroupType {
  """"""
  PROJECT

  """"""
  PROFILE
}

""""""
type RepsWorksheetGroups {
  """"""
  nextGroupId: ID

  """"""
  groups: [RepsWorksheetGroup!]!
}

""""""
type RepsWorksheetGroup {
  """"""
  id: ID!

  """"""
  itemCount: Int!

  """"""
  details: RepsWorksheetGroupDetails
}

""""""
union RepsWorksheetGroupDetails = RepWorksheetProfile | RepWorksheetProject

""""""
type RepsWorksheetFilters {
  """"""
  projects: [ProjectFilter!]

  """"""
  profiles: [ProfileFilter!]

  """"""
  organizations: [OrganizationFilter!]
}

""""""
type ProjectFilter {
  """"""
  id: ID!

  """"""
  name: String!
}

""""""
type ProfileFilter {
  """"""
  id: Int!

  """"""
  stageName: String!
}

""""""
type OrganizationFilter {
  """"""
  id: Int!

  """"""
  name: String!
}

""""""
input GetBillingInfoInput {
  """"""
  ids: [String!]
}

"""Billing information"""
type BillingInfo {
  """"""
  id: ID

  """"""
  firstName: String

  """"""
  lastName: String

  """"""
  isPrimaryPaymentMethod: Boolean

  """"""
  isBackupPaymentMethod: Boolean

  """"""
  cardType: String

  """"""
  lastFour: String

  """"""
  month: Int

  """"""
  year: Int

  """"""
  postalCode: String
}

""""""
type RequestPagedList {
  """"""
  page: Int!

  """"""
  totalCount: Int!

  """"""
  totalPages: Int!

  """"""
  data: [Request!]!
}

""""""
type Request {
  """Request ID"""
  id: ID!

  """Request Type"""
  type: RequestType!

  """"""
  name: String!

  """"""
  sentAt: DateTime

  """"""
  lastActionAt: DateTime
}

""""""
type RequestSubmission {
  """Request ID"""
  id: ID!

  """Submission ID"""
  submissionId: ID!
}

""""""
enum RequestStatus {
  """"""
  NOT_SENT

  """"""
  PENDING

  """"""
  CANCELLED

  """"""
  NEW_REQUEST

  """"""
  RESCHEDULED

  """"""
  REVIEW_RESPONSE

  """"""
  CHANGE_REQUESTED

  """"""
  ON_HOLD

  """"""
  COMPLETED

  """"""
  CANCELLED_RESCHEDULED
}

"""'Media Request' Type"""
type MediaRequest {
  """"""
  id: ID!

  """"""
  name: String!

  """"""
  projectId: Int!

  """"""
  includeSides: Boolean!

  """"""
  talentInstructions: String!

  """"""
  messageForRepresentatives: String

  """"""
  maxNumberOfMediaFiles: Int!

  """"""
  mediaTypes: [RequestMediaType!]!

  """"""
  createdAt: DateTime!

  """"""
  updatedAt: DateTime

  """"""
  shouldResend: Boolean!

  """"""
  talentInstructionsUpdatedAt: DateTime

  """"""
  messageForRepresentativesUpdatedAt: DateTime

  """"""
  dueDate: DateTime

  """"""
  allowAdditionalMedia: Boolean

  """"""
  responses(statuses: [String!], page: PageInput!): MediaResponsePagedList!

  """"""
  submissionIds: [Int!]!

  """"""
  dueDateTimeZone: WfTimeZone
}

""""""
enum RequestMediaType {
  """"""
  PDF

  """"""
  VIDEO

  """"""
  AUDIO

  """"""
  PHOTO
}

""""""
type MediaResponsePagedList {
  """"""
  page: Int!

  """"""
  totalCount: Int!

  """"""
  totalPages: Int!

  """"""
  data: [MediaResponse!]!
}

""""""
type MediaResponse {
  """"""
  id: ID!

  """"""
  submissionId: Float! @deprecated(reason: "Replaced with field 'submission'.")

  """"""
  submission: WfSubmission!

  """"""
  sentAt: DateTime

  """"""
  repliedAt: DateTime

  """"""
  cancelledAt: DateTime

  """"""
  note: String

  """"""
  medias: [WfMedia!] @deprecated(reason: "please use mediaList")

  """"""
  mediaList: [MediaResponseItem!]

  """"""
  status: MediaRequestStatus!

  """"""
  chatTopicKey: String!

  """"""
  chatTopic: WfChatTopic
}

""""""
type WfSubmission {
  """"""
  id: Int!

  """"""
  isCustomized: Boolean!

  """Talent's customized cover"""
  cover: WfMedia

  """Role"""
  role: WfRole

  """Profile"""
  profile: WfProfile

  """"""
  isOverscale: Boolean

  """"""
  overscaleNote: String

  """"""
  notes: [WfNote!]

  """"""
  note: String

  """"""
  tileSchemaValue: WfBasicSettingModel

  """"""
  hasVideoReel: Boolean

  """"""
  hasAudioReel: Boolean

  """"""
  lastNote: WfNote

  """"""
  contactInfo: WfProfileContactInfo

  """"""
  isCreatedByCD: Boolean

  """"""
  mediaCount(requested: Boolean): [WfMediaCount!]
}

""""""
type WfRole {
  """"""
  id: Int!

  """"""
  guid: String

  """"""
  name: String!

  """Role internal name"""
  internalName: String

  """"""
  roleType: WfRoleType!

  """"""
  roleStatus: WfBasicSettingModel!

  """"""
  publicationSettingIds: [Int!]

  """"""
  ageMin: Int

  """"""
  ageMax: Int

  """"""
  rate: Float

  """"""
  rateMax: Float

  """"""
  ratePerType: WfRatePerType

  """"""
  sides: [WfRoleMedia!]

  """"""
  sidesVisibility: WfRoleSidesVisibility

  """"""
  synopsis: String

  """Rate summary"""
  rateSummary: String

  """Role description"""
  description: String

  """Ages of roles showing in years"""
  ageInYears: Boolean!

  """Role description"""
  locationDates: [WfRoleLocationDate!]

  """"""
  project: WfProject

  """"""
  wardrobe: String
}

""""""
type WfRoleType {
  """"""
  id: String!

  """"""
  name: String!

  """"""
  code: String!

  """"""
  enabled: Boolean!

  """"""
  projectType: WfProjectType!

  """"""
  roleTarget: WfRoleTarget!

  """"""
  sortOrder: Int
}

""""""
type WfProjectType {
  """"""
  id: String!

  """"""
  name: String!

  """"""
  code: String!

  """"""
  enabled: Boolean!

  """"""
  selectable: Boolean!

  """"""
  childObjects: [WfComplexSetting!]!

  """"""
  sortOrder: Int

  """"""
  parentObject: Int
}

""""""
type WfComplexSetting {
  """"""
  id: String!

  """"""
  name: String!

  """"""
  code: String!

  """"""
  enabled: Boolean!

  """"""
  selectable: Boolean!

  """"""
  childObjects: [WfComplexSetting!]!

  """"""
  sortOrder: Int

  """"""
  parentObject: Int
}

""""""
type WfRoleTarget {
  """"""
  id: String!

  """"""
  name: String!

  """"""
  code: String!

  """"""
  enabled: Boolean!

  """"""
  sortOrder: Int
}

"""Base object"""
type WfBasicSettingModel {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!
}

""""""
type WfRatePerType {
  """"""
  id: String!

  """"""
  name: String!

  """"""
  code: String!

  """"""
  enabled: Boolean!

  """"""
  sortOrder: Int
}

""""""
type WfRoleMedia {
  """"""
  roleMediaId: Int!

  """"""
  mediaObject: WfMedia!

  """"""
  isSides: Boolean!

  """"""
  name: String
}

""""""
type WfRoleSidesVisibility {
  """"""
  id: String!

  """"""
  name: String!

  """"""
  code: String!

  """"""
  enabled: Boolean!

  """"""
  sortOrder: Int
}

""""""
type WfRoleLocationDate {
  """RoleDateLocation Primary ID"""
  id: ID!

  """"""
  startDate: DateTime

  """"""
  endDate: DateTime

  """"""
  cityName: String

  """"""
  roleDateType: WfRoleDateType
}

""""""
type WfRoleDateType {
  """"""
  id: String!

  """"""
  name: String!

  """"""
  code: String!

  """"""
  enabled: Boolean!

  """"""
  sortOrder: Int
}

""""""
type WfProject {
  """"""
  id: Int!

  """"""
  guid: String

  """"""
  name: String!

  """"""
  createdByPC: Boolean!

  """"""
  projectType: WfProjectType!

  """"""
  projectStatus: WfBasicSettingModel!

  """"""
  projectUnions: [WfProjectUnionDetails!]

  """"""
  displayedProjectUnion: String

  """"""
  displayedProjectUnionShort: String

  """"""
  castingCompany: String

  """"""
  synopsis: String
}

""""""
type WfProjectUnionDetails {
  """"""
  union: WfTalentUnion!

  """"""
  contractId: String

  """"""
  contractStatusId: Int

  """"""
  contractStatus: WfContractStatus
}

""""""
type WfTalentUnion {
  """"""
  id: String!

  """"""
  name: String!

  """"""
  code: String!

  """"""
  enabled: Boolean!

  """"""
  selectable: Boolean!

  """"""
  talentEnabled: Boolean!

  """"""
  projectEnabled: Boolean!

  """"""
  country: WfCountry

  """"""
  childObjects: [WfTalentUnion!]!

  """"""
  sortOrder: Int

  """"""
  parentObject: WfTalentUnion
}

""""""
type WfCountry {
  """"""
  id: String!

  """"""
  name: String!

  """"""
  code: String!

  """"""
  enabled: Boolean!

  """"""
  continent: WfContinent!

  """"""
  unitSystem: WfUnitSystem!

  """"""
  sortOrder: Int

  """"""
  currency: WfCurrency

  """"""
  regions: [WfRegion!]
}

""""""
type WfContinent {
  """"""
  id: String!

  """"""
  name: String!

  """"""
  code: String!

  """"""
  enabled: Boolean!

  """"""
  sortOrder: Int
}

""""""
type WfUnitSystem {
  """"""
  id: String!

  """"""
  name: String!

  """"""
  code: String!

  """"""
  enabled: Boolean!

  """"""
  sortOrder: Int
}

""""""
type WfCurrency {
  """"""
  id: String!

  """"""
  name: String!

  """"""
  code: String!

  """"""
  symbol: String!

  """"""
  enabled: Boolean!

  """"""
  sortOrder: Int
}

""""""
type WfRegion {
  """"""
  id: String!

  """"""
  name: String!

  """"""
  code: String!

  """"""
  enabled: Boolean!

  """"""
  dmas: [WfDma!]

  """"""
  sortOrder: Int

  """"""
  country: WfCountry
}

""""""
type WfDma {
  """"""
  id: String!

  """"""
  name: String!

  """"""
  code: String!

  """"""
  enabled: Boolean!

  """"""
  sortOrder: Int

  """"""
  region: WfRegion
}

""""""
type WfContractStatus {
  """"""
  id: String!

  """"""
  name: String!

  """"""
  code: String!

  """"""
  enabled: Boolean!

  """"""
  sortOrder: Int
}

""""""
type WfProfile {
  """"""
  id: Int!

  """"""
  artistId: Float

  """"""
  guid: String

  """Talent's name"""
  name: String @deprecated(reason: "Deprecated. replaced with stageName field")

  """Talent's stage name"""
  stageName: String!

  """Talents phone"""
  phone: String

  """Talent's email"""
  email: String

  """Talent's cover"""
  coverUrl: String @deprecated(reason: "Replaced with cover field")

  """Talent's cover"""
  cover: WfMedia

  """Is minor"""
  minor: Boolean

  """Date of birth"""
  dateOfBirth: DateTime

  """Identify the personal or represented profile."""
  isPersonal: Boolean!

  """"""
  isRepresented: Boolean

  """Identify the access granted by agency or not."""
  accessGranted: Boolean!

  """The minimum age a talent can play"""
  playableAgeMax: Float

  """The maximum age a talent can play"""
  playableAgeMin: Float

  """Profile Status Object"""
  profileStatus: WfBasicSettingModel

  """HairStyle object"""
  hairStyle: WfBasicSettingModel

  """HairColor object"""
  hairColor: WfBasicSettingModel

  """Height object"""
  height: WfMeasurementModel

  """Weight object"""
  weight: WfWeight

  """Profession"""
  profession: String

  """Working Locations"""
  workingLocations: [WfDma!]!

  """"""
  organizations: [WfOrganization!]!

  """"""
  organization: WfOrganization

  """"""
  profileMainOrganization: WfOrganization

  """"""
  profileMainDivision: WfOrganization

  """Talent unions"""
  talentUnions: [WfTalentProfileUnion!]!

  """All profile media"""
  mediaAssets: [WfProfileMedia!]!

  """
  Access Token of a Profile, generated by Granting Access or Creating a Profile
  """
  profileAccessToken: String

  """If Profile is overscaled"""
  isOverscaled: Boolean

  """Overscale Note"""
  overscaleNote: String

  """all notes"""
  notes: [WfNote!]

  """profile note"""
  note: String

  """"""
  mediaSummary: [WfMediaCount!]

  """"""
  credits: [WfCredit!]

  """"""
  resume: WfProfileMedia

  """"""
  creditsCount: Int!

  """"""
  hasResume: Boolean

  """"""
  lastNote: WfNote

  """"""
  hasAuditionHistory: Boolean

  """"""
  contactInfo: WfProfileContactInfo
}

"""Measurement object"""
type WfMeasurementModel {
  """Primary ID"""
  id: ID!

  """Centimeters"""
  cm: Int!

  """Inches"""
  inch: Float!
}

"""General weight object"""
type WfWeight {
  """Primary ID"""
  id: ID!

  """pounds"""
  lbs: Int!

  """"""
  kg: Float!
}

"""Organization object"""
type WfOrganization {
  """Primary ID"""
  id: Int!

  """Abbreviation"""
  abbreviation: String

  """Name"""
  name: String

  """"""
  contacts: [WfContact!]

  """"""
  parentOrganization: WfOrganization
}

""""""
type WfContact {
  """"""
  id: Int!

  """"""
  email: String

  """"""
  phone: String

  """"""
  mainContact: Boolean

  """"""
  enabled: Boolean
}

"""General weight object"""
type WfTalentProfileUnion {
  """Primary ID"""
  id: String!

  """Code"""
  code: String!

  """Name"""
  name: String!

  """parent object"""
  parentObject: WfTalentProfileUnion
}

"""Profile Media"""
type WfProfileMedia {
  """"""
  media: WfMedia!

  """"""
  profileMediaId: Float!
}

"""Note object type"""
type WfNote {
  """Note Id"""
  id: Int!

  """Account id who created the note"""
  accountId: Int!

  """Comment"""
  comment: String!

  """Created Date"""
  created: String!

  """"""
  noteModifier: WfNoteModifier
}

""""""
type WfNoteModifier {
  """"""
  id: ID!

  """"""
  code: String!

  """"""
  name: String!

  """"""
  enabled: Boolean!

  """"""
  sortOrder: Int

  """"""
  entityType: WfEntityType!
}

""""""
type WfEntityType {
  """"""
  id: ID!

  """"""
  code: String!

  """"""
  name: String!

  """"""
  enabled: Boolean!

  """"""
  sortOrder: Int
}

"""Media Count"""
type WfMediaCount {
  """Media Type"""
  type: WfMediaType

  """Count of the media"""
  count: Int
}

"""Credit Attribute"""
type WfCredit {
  """Primary ID"""
  id: ID!

  """Year"""
  year: Int

  """Profile ID"""
  profileId: Int!

  """Highlighted"""
  highlighted: Boolean!

  """Credit Type Sort ordering"""
  sortOrder: Int!

  """Credit Sort ordering"""
  creditOrder: Int!

  """Created at Date"""
  created: DateTime

  """Updated at Date"""
  updated: DateTime!

  """"""
  guid: String!

  """Profile Credit Type Id"""
  profileCreditTypeId: Int!

  """Title"""
  title: String

  """Role title"""
  role: String

  """The director of the Project"""
  director: String
}

"""Profile Media"""
type WfProfileContactInfo {
  """"""
  email: String

  """"""
  phone: String
}

""""""
enum MediaRequestStatus {
  """"""
  NOT_SENT

  """"""
  PENDING

  """"""
  CANCELLED

  """"""
  MEDIA_ADDED

  """"""
  ADDITIONAL_MEDIA_ADDED

  """"""
  CHANGE_REQUESTED

  """"""
  DECLINED

  """"""
  CONFIRMED
}

""""""
type WfChatTopic {
  """"""
  unreadMessageCount: Int

  """"""
  lastUserMessage: WfChatMessage

  """"""
  topicKey: String!
}

""""""
type WfChatMessage {
  """"""
  id: ID!

  """"""
  createdAt: DateTime!

  """"""
  messageBody: String!

  """"""
  senderOrgId: Int

  """"""
  senderAccountId: Int

  """"""
  messageType: String!

  """"""
  topicKey: String!

  """"""
  ownMessage: Boolean!

  """"""
  senderAccount: ChatSenderAccount!
}

""""""
type ChatSenderAccount {
  """"""
  id: Int

  """"""
  firstName: String

  """"""
  lastName: String
}

"""Measurement object"""
type WfTimeZone {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """"""
  gmtOffset: Float!

  """"""
  dstOffset: Float!

  """"""
  rawOffset: Float!

  """"""
  standardName: String!

  """"""
  abbreviation: String

  """"""
  daylightSavingsCode: String

  """"""
  codeBrowser: String!
}

""""""
type MediaResponseCounts {
  """"""
  status: MediaRequestStatus!

  """"""
  count: Float!
}

"""'Media Sub-Request' Type for (Reps|Talent)"""
type MediaSubRequest {
  """"""
  id: ID!

  """"""
  includeSides: Boolean!

  """"""
  submissionId: Int! @deprecated(reason: "Replaced with field 'submission'.")

  """"""
  submission: WfSubmission!

  """"""
  talentInstructions: String!

  """"""
  messageForRepresentatives: String

  """"""
  maxNumberOfMediaFiles: Int!

  """"""
  mediaTypes: [RequestMediaType!]!

  """The date when request was sent"""
  sentAt: DateTime

  """The date when response was sent"""
  repliedAt: DateTime

  """The date when request was cancelled"""
  cancelledAt: DateTime

  """"""
  profile: WfProfile

  """"""
  role: WfRole!

  """"""
  project: WfProject!

  """The media files sent in response"""
  medias: [WfMedia!] @deprecated(reason: "please use mediaList")

  """"""
  mediaList: [MediaResponseItem!]

  """The note sent in response"""
  note: String

  """Forwarded Note"""
  forwardNote: String

  """"""
  requestedChangesMedia: [Int!]

  """"""
  requestedChangesNote: String

  """"""
  updatedMedia: [Int!]

  """"""
  status: MediaRequestStatus!

  """Reps Worksheet Status"""
  repsWorksheetStatus: String!

  """"""
  talentInstructionsUpdatedAt: DateTime

  """"""
  messageForRepresentativesUpdatedAt: DateTime

  """"""
  dueDate: DateTime

  """Cancellation note"""
  cancellationNote: String

  """"""
  chatTopicKey: String!

  """"""
  allowAdditionalMedia: Boolean

  """"""
  dueDateTimeZone: WfTimeZone

  """"""
  chatTopic: WfChatTopic
}

"""'Ask Question Request' Type"""
type AskQuestionRequest {
  """"""
  id: ID!

  """"""
  name: String!

  """"""
  question: String!

  """"""
  projectId: Int!

  """"""
  includeSides: Boolean!

  """"""
  messageForRepresentatives: String

  """"""
  createdAt: DateTime!

  """"""
  updatedAt: DateTime

  """"""
  dueDate: DateTime

  """"""
  shouldResend: Boolean!

  """"""
  responses(page: PageInput!): AskQuestionResponsePagedList!

  """"""
  submissionIds: [Int!]!

  """"""
  dueDateTimeZone: WfTimeZone
}

""""""
type AskQuestionResponsePagedList {
  """"""
  page: Int!

  """"""
  totalCount: Int!

  """"""
  totalPages: Int!

  """"""
  data: [AskQuestionResponse!]!
}

""""""
type AskQuestionResponse {
  """"""
  id: ID!

  """"""
  submissionId: Float! @deprecated(reason: "Replaced with field 'submission'.")

  """"""
  submission: WfSubmission!

  """"""
  sentAt: DateTime

  """"""
  repliedAt: DateTime

  """"""
  cancelledAt: DateTime

  """"""
  answer: String

  """"""
  status: AskQuestionRequestStatus!
}

""""""
enum AskQuestionRequestStatus {
  """"""
  NOT_SENT

  """"""
  PENDING

  """"""
  CANCELLED

  """"""
  ANSWERED
}

"""'Ask Question Sub-Request' Type"""
type AskQuestionSubRequest {
  """"""
  id: ID!

  """"""
  question: String!

  """"""
  submissionId: Int! @deprecated(reason: "Replaced with field 'submission'.")

  """"""
  submission: WfSubmission!

  """"""
  includeSides: Boolean!

  """"""
  messageForRepresentatives: String

  """"""
  profile: WfProfile

  """"""
  role: WfRole!

  """"""
  project: WfProject!

  """"""
  status: AskQuestionRequestStatus!

  """The date when request was sent"""
  sentAt: DateTime!

  """The date when response was sent"""
  repliedAt: DateTime

  """The answer to the question"""
  response: String

  """Forwarded note"""
  forwardNote: String

  """Cancellation note"""
  cancellationNote: String

  """Reps Worksheet Status"""
  repsWorksheetStatus: String!

  """"""
  dueDate: DateTime

  """"""
  dueDateTimeZone: WfTimeZone
}

"""'Roster Talent Invitation' type"""
type RosterTalentInvitation {
  """Talent's name"""
  name: String!

  """Talent's email"""
  email: String!

  """Talent's invitation ID"""
  id: ID!

  """Status of talent's invitation"""
  status: RosterInvitationRequestStatus!

  """Invitation created date"""
  createdAt: DateTime!

  """Invitation expiration date"""
  expiredAt: DateTime!

  """ID of organization which invited talent to the roster"""
  organizationId: Int!

  """Generated token for invited talent"""
  token: String!

  """Invitation profile Id"""
  profileId: Int

  """Current Profile Status"""
  profileStatusCode: String
}

"""Roster Invitation request status"""
enum RosterInvitationRequestStatus {
  """"""
  PENDING

  """"""
  EXPIRED

  """"""
  IN_ROSTER
}

""""""
type RosterTalentInvitationPagedList {
  """"""
  page: Int!

  """"""
  totalCount: Int!

  """"""
  totalPages: Int!

  """"""
  data: [RosterTalentInvitation!]!
}

""""""
input RosterInvitationTalentHistoryFilterInput {
  """Filter by name"""
  name: String!

  """Filter by email"""
  email: String!
}

"""
Schedule Invite Request type. The Schedule Invite is always sent from a schedule
and some fields are based on the schedule data.
"""
type ScheduleInviteSubRequest {
  """Schedule Invite Request id."""
  id: ID!

  """
  A message to Representatives of the talents that are connected to submissions.
  """
  noteForRepresentative: String

  """An instruction for Talents connected to submissions."""
  noteForTalents: String

  """"""
  schedule: WfSchedule

  """"""
  project: WfProject!

  """"""
  role: WfRole!

  """"""
  profile: WfProfile

  """"""
  submissionId: Int!

  """"""
  status: ScheduleInviteRequestStatus!

  """Reps Worksheet Status"""
  repsWorksheetStatus: String!

  """"""
  responseNote: String

  """Response Status"""
  responseStatus: String

  """Forwarded Note"""
  forwardNote: String

  """Date of Slot"""
  slotDate: DateTime

  """Previous Response Status"""
  prevResponseStatus: String

  """Previous Response Note"""
  prevResponseNote: String

  """Previous Slot Date"""
  prevSlotDate: DateTime

  """"""
  chatTopicKey: String!

  """Cancellation note"""
  cancellationNote: String
}

""""""
type WfSchedule {
  """"""
  id: Int!

  """"""
  name: String!

  """"""
  type: ScheduleRequestType!

  """"""
  address: WfAddress

  """"""
  date: DateTime

  """Time Zone"""
  timeZone: WfTimeZone

  """"""
  note: String

  """"""
  isLocationHidden: Boolean!
}

""""""
enum ScheduleRequestType {
  """"""
  AUDITION

  """"""
  CALLBACK
}

""""""
type WfAddress {
  """"""
  id: Int!

  """Postal code"""
  postalCode: String!

  """"""
  countryName: String

  """"""
  countryCode: String

  """"""
  state: String

  """"""
  city: String

  """"""
  line1: String

  """"""
  line2: String

  """"""
  line3: String

  """"""
  note: String
}

""""""
type ScheduleInviteResponse {
  """"""
  id: ID!

  """"""
  submissionId: Int!

  """"""
  sentAt: DateTime

  """"""
  repliedAt: DateTime

  """"""
  note: String

  """"""
  status: ScheduleInviteRequestStatus!

  """"""
  prevRevisionResponseStatus: ScheduleInviteRequestStatus

  """"""
  slotId: Int!

  """"""
  chatTopicKey: String!

  """"""
  slotStartDate: DateTime

  """"""
  chatTopic: WfChatTopic
}

""""""
type ScheduleInvitePreviousResponse {
  """"""
  id: ID!

  """"""
  status: ScheduleInviteResponseStatus!

  """"""
  submissionId: Int!

  """"""
  responseNote: String

  """"""
  schedule: WfSchedule!

  """"""
  slotDate: DateTime
}

""""""
enum ScheduleInviteResponseStatus {
  """"""
  PENDING

  """"""
  DECLINED

  """"""
  CONFIRMED

  """"""
  RESCHEDULE_REQUESTED
}

""""""
type ActivityLogPagedList {
  """"""
  page: Int!

  """"""
  totalCount: Int!

  """"""
  totalPages: Int!

  """"""
  data: [ActivityLog!]!
}

""""""
type ActivityLog {
  """"""
  id: ID!

  """"""
  timestamp: DateTime!

  """"""
  type: ActivityLogType!

  """"""
  operation: ActivityLogOperation!

  """"""
  request: ActivityLogRequest

  """"""
  account: ActivityLogAccount

  """"""
  submission: ActivityLogSubmission

  """"""
  project: ActivityLogProject

  """"""
  role: ActivityLogRole

  """"""
  calendarSlot: ActivityLogCalendarSlot

  """"""
  presentation: ActivityLogPresentation

  """"""
  presentationFolder: ActivityLogPresentationFolder

  """"""
  presentationGroup: ActivityLogPresentationGroup

  """"""
  organization: ActivityLogOrganization

  """"""
  schedule: ActivityLogSchedule

  """"""
  auditionSession: ActivityLogAuditionSession

  """"""
  auditionGroup: ActivityLogAuditionGroup

  """"""
  note: ActivityLogNote
}

""""""
enum ActivityLogType {
  """"""
  SUBMISSION_CREATED

  """"""
  SUBMISSION_UPDATED

  """"""
  SUBMISSION_SELECTIONTAG_ASSIGNED

  """"""
  SUBMISSION_SELECTIONTAG_UPDATED

  """"""
  SUBMISSION_STATUS_UPDATED

  """"""
  SUBMISSION_MOVED_TO_ROLE

  """"""
  REQUEST_ASKQUESTION

  """"""
  REQUEST_AUDITION

  """"""
  REQUEST_CALLBACK

  """"""
  REQUEST_MEDIA

  """"""
  SUBMISSION_ADDED_TO_AUDITION_GROUP

  """"""
  FAST_CAPTURE_NOTE_ADDED

  """"""
  SUBMISSION_NOTE_ADDED

  """"""
  SUBMISSION_ADDED_TO_PRESENTATION_GROUP
}

""""""
enum ActivityLogOperation {
  """"""
  INSERT

  """"""
  UPDATE

  """"""
  DELETE
}

""""""
type ActivityLogRequest {
  """"""
  id: String!

  """"""
  masterRequestId: String

  """"""
  type: RequestType!

  """"""
  question: String

  """"""
  answer: String

  """"""
  talentInstructions: String

  """"""
  note: String

  """"""
  status: String!

  """"""
  medias: [WfMedia!]

  """"""
  mediaByType: MediaByType

  """"""
  additionalMedia: [WfMedia!]
}

""""""
type MediaByType {
  """"""
  PHOTO: [Int!]!

  """"""
  VIDEO: [Int!]!

  """"""
  AUDIO: [Int!]!

  """"""
  DOCUMENT: [Int!]!
}

""""""
type ActivityLogAccount {
  """"""
  id: Int!

  """"""
  firstName: String!

  """"""
  lastName: String!

  """"""
  email: String!

  """"""
  isCCD: Boolean!
}

""""""
type ActivityLogSubmission {
  """"""
  id: Int!

  """"""
  selectionTagId: Float

  """"""
  selectionTagName: String

  """"""
  selectionTagCode: String

  """"""
  statusId: Float

  """"""
  statusName: String

  """"""
  statusCode: String

  """"""
  note: String

  """"""
  media: [WfMedia!]

  """"""
  mediaByType: MediaByType

  """"""
  requestMedia: [WfMedia!]

  """"""
  requestMediaByType: MediaByType

  """"""
  oldRole: WfRoleShort

  """"""
  newRole: WfRoleShort
}

""""""
type WfRoleShort {
  """"""
  id: Int!

  """"""
  parentId: Int

  """"""
  projectId: Int!

  """"""
  statusId: Int!

  """"""
  name: String!

  """"""
  internalName: String
}

""""""
type ActivityLogProject {
  """"""
  id: Int!

  """"""
  note: String!
}

""""""
type ActivityLogRole {
  """"""
  id: Int!

  """"""
  name: String!

  """"""
  internalName: String!
}

""""""
type ActivityLogCalendarSlot {
  """"""
  id: Int!

  """"""
  slotStartTime: DateTime!

  """"""
  slotEndTime: DateTime!
}

""""""
type ActivityLogPresentation {
  """"""
  id: Int!

  """"""
  name: String!
}

""""""
type ActivityLogPresentationFolder {
  """"""
  id: Int!

  """"""
  name: String!
}

""""""
type ActivityLogPresentationGroup {
  """"""
  id: Int!

  """"""
  name: String

  """"""
  order: Int
}

""""""
type ActivityLogOrganization {
  """"""
  id: Int!

  """"""
  abbreviation: String
}

""""""
type ActivityLogSchedule {
  """"""
  id: Int!

  """"""
  scheduleDate: DateTime

  """"""
  scheduleType: String
}

""""""
type ActivityLogAuditionSession {
  """"""
  id: Int!

  """"""
  name: String

  """"""
  order: Int
}

""""""
type ActivityLogAuditionGroup {
  """"""
  id: Int!

  """"""
  name: String

  """"""
  order: Int

  """"""
  medias: [WfMedia!]

  """"""
  mediaByType: MediaByType
}

""""""
type ActivityLogNote {
  """"""
  comment: String!

  """"""
  noteModifier: WfBasicSettingModel
}

type Mutation {
  """Returns a session bearer token."""
  bauLogin(input: BauLoginInput!): String!

  """Update existing account"""
  updateBauAccount(input: BauAccountInput!): Json!

  """Verify BAU account from email link"""
  verifyBauAccount(token: String!): String!

  """Resent Verification email"""
  resentVerificationEmail(audience: String!): Json!

  """Resent Verification email"""
  updateBauEmailAddress(email: String!, audience: String!): Json!

  """Claims Rep/CD account multiple times"""
  claimEnterpriseAccount(input: BauAccountInput!): Json!

  """BAU login by providing legacy data. Returns onboarding token."""
  bauLoginByLegacyData(input: BauLoginByLegacyDataInput!): Json!

  """Returns a session bearer token."""
  updateProjectCreatorAccount: AuthTokenItem!

  """Prepare account for onboarding."""
  prepareAccountForOnboarding(paypalCode: String, accountId: Float!): Boolean!

  """
  Creates a temporary, single-use password reset token by legacy login and legacy instance.
  """
  resetPasswordByLegacyLogin(legacyInstance: String, legacyLogin: String!): String!

  """Reset password using B21 email, BAU email, BAU username."""
  resetPasswordBauB21(legacyInstance: String, login: String!): Json!

  """Update existing account"""
  updateLegacyProfile(input: BauProfileUpdateInput!): UpdateLegacyResult!

  """Update organization for casting director user"""
  updateCastingDirectorOrganization(input: OrganizationInput!): UpdateOrganizationResult!

  """Update organization for Agent rep User"""
  updateAgentOrganization(input: AgentOrganizationInput!): UpdateOrganizationResult!

  """Returns a session bearer token."""
  updateAccountPreMappedOrganizations: UpdateLegacyResult!

  """Returns a session bearer token."""
  updatePCOrganizations(input: BauPCAccountUpdateInput!): UpdateLegacyResult!

  """"""
  sendVerificationCode(language: String, phoneNumber: String!): String!

  """"""
  checkOtpCode(otpCode: String!, verificationId: String!): Boolean!

  """"""
  completePurchase(input: PurchaseInput!): CompletePurchaseBillingDetailsModel!

  """"""
  createSubscription(input: CreateSubscriptionInput!): Boolean!

  """"""
  cancelSubscription(subscriptionId: Int!): Boolean!

  """"""
  deleteSubscription(transaction: String!): Boolean!

  """"""
  addArtistFreeCredits(input: AddArtistFreeCreditsInput!): Boolean!

  """"""
  updateAccount(
    """"""
    input: UpdateAccountInput!

    """Use input value instead"""
    accountId: Float!
  ): Account!

  """"""
  removeUserFromOrganization(accountId: Float!, organizationId: Float!): Float

  """"""
  reAddUserToOrganization(accountId: Float!, organizationId: Float!): Float

  """"""
  addOrganizationAccount(companyAdmin: Boolean!, userId: Float!, organizationId: Float!): Account!

  """"""
  createAccount(audience: String, isEmailVerificationRequired: Boolean, input: AccountCreateInput!): AuthToken!

  """"""
  updatePCAccount(input: PCAccountUpdateInput!): Float

  """"""
  createInternalAccount(input: InternalAccountCreateInput!): Float!

  """"""
  createEndUserAccount(input: EndUserAccountInput!): Account!

  """Creates a temporary, single-use password reset token."""
  resetPassword(
    """Deprecated argument"""
    audience: String

    """"""
    email: String!
  ): String!

  """
  Update account email and resend email verification link. Returns new emailResetToken.
  """
  updateVerificationEmail(audience: String!, email: String!): String!

  """"""
  updateEmailWithToken(token: String!): AuthToken!

  """"""
  resendEmailVerification(audience: String!, token: String!): String

  """"""
  updatePasswordWithToken(languageLocaleId: Int, timeZoneCode: String, isEmailNotificationRequired: Boolean!, newPassword: String!, token: String!): Boolean!

  """"""
  resendCreatePasswordLink(token: String!): Boolean!

  """"""
  updatePassword(newPassword: String!, oldPassword: String!): String!

  """"""
  updateAccountName(updateInfo: UpdateAccountInput!): Account!

  """"""
  updateAccountRosterInvitationToken(updateInfo: UpdateAccountInput!): Account!

  """"""
  updateAccountPhone(updateInfo: UpdateAccountInput!): Account!

  """Delete account"""
  deleteAccount(accountId: Float!): Boolean!

  """"""
  updateAccountBillingInfo(threeDSecureActionResultTokenId: String, token: String): Boolean!

  """"""
  mergeUserAccounts(toAccountId: Float!, fromAccountId: Float!): Boolean!

  """"""
  checkEmailOtp(otp: String!, verificationId: String!): Boolean!

  """"""
  verifyAccountEmail: AuthToken!

  """"""
  sendAccountEmailVerificationCode: String!

  """Creates a temporary, single-use email otp code"""
  resetEmail(audience: String!, updateInfo: UpdateAccountInput!): String!

  """"""
  setAccountSchedulePreferences(preferences: AccountSchedulePreferencesInput!): Boolean!

  """"""
  setAccountProjectListFilterPreferences(preferences: AccountProjectFiltersInput!): Boolean!

  """"""
  registerAccountDevice(input: RegisterDeviceInput!): Boolean!

  """"""
  addAddress(addToOrganization: Boolean, input: AddressInput!): Float!

  """Mutation for updating address"""
  updateAddress(
    """Adding/Removing address to organization of logged in user"""
    addToOrganization: Boolean

    """Input object"""
    input: AddressInput!

    """ID of address which should be updated"""
    addressId: Float!
  ): Float!

  """"""
  updateArtist(input: ArtistUpdateInput!): Boolean!

  """"""
  attachMediaToArtist(
    """
    Artist to which media should be attached. For Talent will be taken from auth token
    """
    artistId: Int

    """"""
    mediaId: Int!
  ): Media!

  """"""
  initMediaUpload(input: MediaInitUploadInput!): [Media!]!

  """"""
  finalizeMediaUpload(input: [MediaMetadataInput!]!): [Media!]!

  """Generates signature for uploading media"""
  getMediaUploadSignature(params: JSONObject!): String!

  """"""
  updateMediaAsset(input: UpdateMediaInput!): Media!

  """"""
  deleteMediaAsset(accountId: Float, mediaId: Float!): Boolean!

  """"""
  archiveMediaAsset(
    """"""
    artistId: Float

    """"""
    accountId: Float

    """"""
    mediaIds: [Int!]

    """
    Deprecated. Please use "mediaIds"
    """
    mediaId: Float
  ): Boolean!

  """"""
  cloneMedia(input: MediaTransformationInput!, id: Int!): Media!

  """"""
  editMedia(input: MediaTransformationInput!, id: Int!): Media!

  """"""
  editMediaThumbnail(input: MediaTransformationInput!, id: Int!): Media!

  """Adds new audition session. Returns id."""
  addAuditionSession(inputModel: AuditionSessionCreateInput!): Int

  """Copy the selected groups to the specific session"""
  copyAuditionGroupsToAuditionSession(auditionSession: Int!, auditionGroups: [Int!]!): Int

  """
  Updates existing audition session. Returns true if updated successfully.
  """
  updateAuditionSession(inputModel: AuditionSessionUpdateInput!): Boolean!

  """Returns true if deleted successfully."""
  deleteAuditionSession(id: Int!): Boolean!

  """"""
  addSubmissionsToAuditionTalentPool(createdBy: Int, submissionIds: [BigInt!]!, sessionId: Int!): Boolean!

  """"""
  updateSubmissionsInAuditionTalentPool(submissionSnapshotIds: [AuditionSubmissionSnapshotInput!]!, sessionId: Int!): Boolean!

  """"""
  changeAuditionSessionTalentRoleName(input: ChangeAuditionSessionTalentRoleNameInput!): Boolean!

  """Adds new audition session group"""
  addAuditionSessionGroup(
    """Input model of new audition session group"""
    inputModel: AuditionGroupInput!
  ): Int

  """Updates new audition session group"""
  updateAuditionSessionGroup(
    """Input model of updated audition session group"""
    inputModel: AuditionGroupInput!

    """Id of Audition group which should be updated"""
    auditionGroupId: Int!
  ): Boolean

  """Updates audition session groups"""
  updateAuditionSessionGroupsBulk(
    """Input model of updated audition session groups"""
    inputModel: AuditionGroupBulkUpdateInput!

    """List of Ids of Audition groups which should be updated"""
    auditionGroupIds: [Int!]!
  ): Float

  """Attaches uploaded media to the Audition Group"""
  attachMediaToAuditionGroup(
    """Input model for adding media to audition group"""
    inputModel: AuditionGroupMediaInput!
  ): Boolean!

  """Attaches uploaded media to the Audition Group in defined order"""
  attachOrderedMediaToAuditionGroup(inputModel: AuditionGroupMediaInput!): Boolean!

  """Deletes Audition Group Media"""
  deleteMediaFromAuditionGroup(
    """List of media IDs"""
    mediaIds: [Int!]!

    """Id of the AuditionGroup object"""
    groupId: Int!
  ): Int!

  """Set thumbnail media to the audition group"""
  updateAuditionGroupThumbnail(startOffset: String, mediaId: Int!, groupId: Int!): AuditionGroup!

  """Add Submissions to Audition Group"""
  addSubmissionsToAuditionGroup(
    """Id of the AuditionGroup object"""
    groupId: Int!

    """Id of the AuditionGroup object"""
    submissionIds: [BigInt!]!

    """"""
    createdBy: Int

    """"""
    searchInput: SubmissionSearchInput

    """DEPRECATED. use searchInput"""
    tileSchemeValueCodes: [String!]

    """DEPRECATED. use searchInput"""
    roleIds: [Int!]
  ): Int!

  """"""
  addProfileToAuditionGroup(input: AddProfileToAuditionGroupInput!): Boolean!

  """"""
  addProfileToAuditionGroupAddIn(input: AddProfileToAuditionGroupAddInInput!): Boolean!

  """Delete Submissions from Audition Group"""
  deleteSubmissionsFromAuditionGroup(
    """Id of the AuditionGroup object"""
    submissionIds: [BigInt!]!

    """Id of the AuditionGroup object"""
    groupId: Int!
  ): Int!

  """Changes Submission order in Audition Group"""
  changeSubmissionOrderInAuditionGroup(input: ChangeAuditionGroupTalentOrderInput!): Boolean!

  """Mutation for updating audition group sort order"""
  updateAuditionGroupMediaOrder(input: AuditionGroupMediaOrderUpdateInput!): Boolean!

  """Update AuditionGroupMedia"""
  updateAuditionGroupMedia(
    """Input model for updating AuditionGroupMedia"""
    inputModel: AuditionGroupMediaInput!
  ): Int!

  """"""
  createSessionAndAddSubmissions(submissionIds: [BigInt!]!, sessionName: String!): Int!

  """"""
  addSubmissionsToExistingSession(submissionIds: [BigInt!]!, sessionId: Int!): Int!

  """"""
  addNote(input: AddNoteInput!): Note!

  """"""
  updateNote(input: UpdateNoteInput!): Boolean!

  """"""
  deleteNote(noteId: Int!): Boolean!

  """"""
  updateNotificationNotificationTypeSubscription(input: NotificationSubscriptionInput!): Boolean!

  """"""
  updateNotificationEntityTypeSubscription(input: NotificationSubscriptionInput!): Boolean!

  """Marks notifications as viewed"""
  markNotifications(ids: [ID!]!, viewed: Boolean!): Boolean!

  """Archive notification"""
  archiveNotifications(ids: [String!]!): Boolean!

  """Restore notification"""
  restoreNotifications(ids: [String!]!): Boolean!

  """Adds comment for the submission"""
  addCommentToSubmission(
    """"""
    presentationId: Float

    """"""
    comment: String!

    """ID of Submission"""
    submissionId: BigInt!
  ): PresentationSubmissionComment!

  """Delete comment for the submission"""
  deleteSubmissionComment(
    """ID of Submission Comment"""
    commentId: Int!

    """ID of Submission"""
    submissionId: BigInt!
  ): Boolean!

  """Adds pick for the submission"""
  addPickToSubmission(
    """"""
    presentationId: Float

    """ID of Submission"""
    submissionId: BigInt!
  ): Int!

  """Adds pick for the profile in the package"""
  addPickToPackageProfile(
    """Package Id to which this pick will be linked."""
    packageId: Float!

    """"""
    profileId: Float!
  ): Int!

  """"""
  addPickToPackageProfilePublic(
    """"""
    userName: String!

    """Package Id to which this pick will be linked."""
    packageId: Float!

    """"""
    profileId: Float!
  ): String!

  """Removes pick from the submission"""
  deletePickFromSubmission(
    """ID of Presentation Talent Pick"""
    pickId: Int!

    """ID of Submission"""
    submissionId: BigInt!
  ): Boolean!

  """"""
  deletePick(pickId: Int!): Boolean!

  """Mutation for creating Audition Presentation"""
  createAuditionPresentation(input: AuditionPresentationInput!): Int!

  """Mutation for creating Share Selects Presentation"""
  createShareSelectPresentation(input: ShareSelectPresentationInput!): Presentation!

  """"""
  copyPresentation(input: CopyPresentationInput!): Int!

  """Mutation for creating Rep Package Presentation"""
  createRepPackagePresentation(name: String!): Presentation!

  """Mutation for import Audition Session data to the Presentation"""
  importPresentationFromAudition(
    """"""
    projectId: Int!

    """"""
    auditionIds: [Int!]!

    """ID of existing presentation"""
    presentationId: Int

    """Name for the new presentation"""
    name: String

    """"""
    isLive: Boolean!
  ): Int!

  """Mutation for updating Presentation"""
  updatePresentation(input: PresentationUpdateInput!): Int

  """Mutation for deleting Presentation"""
  deletePresentation(presentationId: Int!): Boolean

  """Email presentation link"""
  sendPresentationLinkEmail(input: PresentationLinkEmailInput!): Boolean!

  """Mutation for creating Presentation Folder"""
  createPresentationFolder(input: PresentationFolderInput!): Int!

  """Mutation for import Audition Group to the Presentation Folder"""
  importPresentationFolderFromAuditionGroup(
    """"""
    projectId: Int!

    """"""
    auditionGroupIds: [Int!]!

    """ID of existing presentation"""
    presentationId: Int

    """Name for the new presentation"""
    presentationName: String

    """ID of the existing Presentation Folder"""
    presentationFolderId: Int

    """Name for the new Presentation Folder"""
    presentationFolderName: String
  ): PresentationFolder

  """Add the talent(s) to Presentation Folder"""
  addTalentToPresentationFolder(profileId: [Int!]!, presentationFolderId: Int!): Boolean!

  """"""
  customizeTalentInFolder(input: CustomizeTalentInFolderInput!): PresentationFolderTalentCustomization!

  """Deletes the talent from Presentation Folder"""
  deletePresentationFolderTalent(profileId: Int!, presentationFolderId: Int!): Boolean!

  """Archives the Presentation Folder"""
  deletePresentationFolder(presentationFolderId: Int!): Boolean!

  """Updates presentation folder"""
  updatePresentationFolder(input: PresentationFolderUpdateInput!): Boolean!

  """Updates presentation folder sort order"""
  updatePresentationFolderOrder(
    """
    Folder ID behind which the folder should be moved. If not passed will be moved to the beginning
    """
    behindFolderId: Int

    """Presentation Folder's ID which should be changed"""
    folderId: Int!
  ): Boolean!

  """"""
  sendDirectEmailToPresentationFolderTalent(subject: String, message: String!, talentCanSeeSenderAddress: Boolean = false, presentationFolderId: Int!): Boolean!

  """"""
  sendDirectEmailToPickedPackageTalent(subject: String, message: String!, talentCanSeeSenderAddress: Boolean = false, packageFolderId: Int!): Boolean!

  """Mutation for creating Presentation Group in a Presentation Folder"""
  createPresentationGroup(folderId: Int!): Int!

  """Mutation for updating Presentation Group"""
  updatePresentationGroup(input: PresentationGroupUpdateInput!): PresentationGroup!

  """Mutation for deleting Presentation Group"""
  deletePresentationGroup(groupId: Int!): Boolean!

  """Mutation for adding submission to the Presentation Group"""
  addSubmissionToPresentationGroup(
    """Id of the AuditionGroup object"""
    groupId: Int!

    """Id of the AuditionGroup object"""
    submissionIds: [BigInt!]!

    """"""
    searchInput: SubmissionSearchInput

    """DEPRECATED. use searchInput"""
    tileSchemeValueCodes: [String!]

    """DEPRECATED. use searchInput"""
    roleIds: [Int!]
  ): [PresentationGroupSubmission!]!

  """Mutation for deleting submission from the Presentation Group"""
  deleteSubmissionFromPresentationGroup(submissionId: BigInt!, groupId: Int!): Boolean!

  """Mutation for updating presentation group sort order"""
  updatePresentationGroupOrder(
    """
    Group ID behind which the group should be moved. If not passed will be moved to the beginning
    """
    moveAfterGroupMediaId: Int

    """Presentation Group's ID which should be changed"""
    groupId: Int!
  ): Boolean!

  """Mutation for updating presentation group sort order"""
  updatePresentationGroupMediaOrder(moveAfterGroupMediaId: Int, groupMediaId: Int!): Boolean!

  """Mutation for attaching media to the presentation group"""
  attachMediaToPresentationGroup(
    """"""
    mediaIds: [Int!]!

    """Presentation Group's ID """
    groupId: Int!
  ): Boolean!

  """Mutation for deleting media from the presentation group"""
  deleteMediaFromPresentationGroup(
    """"""
    mediaIds: [Int!]!

    """Presentation Group's ID """
    groupId: Int!
  ): Boolean!

  """Set thumbnail media to the presentation group"""
  updatePresentationGroupThumbnail(startOffset: String, mediaId: Int!, groupId: Int!): PresentationGroup!

  """"""
  addCommentToPresentationSubmissionPublic(presentationId: Float, comment: String!, userName: String!, submissionId: BigInt!): PresentationSubmissionComment!

  """Delete comment for the submission"""
  deleteCommentToPresentationSubmissionPublic(
    """ID of Submission Comment"""
    commentId: Int!

    """User name who left comment"""
    userName: String!

    """ID of Submission"""
    submissionId: BigInt!
  ): Boolean!

  """"""
  addPickToPresentationSubmissionPublic(presentationId: Float, userName: String!, submissionId: BigInt!): String!

  """"""
  deletePickFromPresentationSubmissionPublic(pickId: String!, submissionId: BigInt!, guid: String!): Boolean!

  """"""
  deletePickFromPresentationProfilePublic(input: DeletePresentationProfilePickPublickInput!): Boolean!

  """Initiates presentation's media downloading"""
  initPresentationMediaToDownloadPublic(input: PresentationMediaDownloadInput!): String!

  """"""
  addProfileBookout(artistId: Float, input: ProfileBookOutInput!): Boolean!

  """"""
  updateProfileBookout(input: ProfileBookOutInput!): Boolean!

  """"""
  removeProfileBookout(input: ProfileBookOutInput!): Boolean!

  """"""
  updateProfileArtist(profileAccessToken: String!, artistId: Int!): Int!

  """"""
  createProfile(accountId: Float, input: ProfileCreateInput!): Profile!

  """"""
  grantTalentAccess(note: String!, organizationId: Float!, profileId: Float!): Boolean!

  """"""
  updateProfile(accountId: Float, input: ProfileUpdateInput!): Profile!

  """"""
  updateProfileSkill(input: ProfileSkillInput!): Boolean!

  """"""
  updateProfileVisibilities(profileVisibilityCodes: [String!]!, profileId: Float!): Boolean!

  """"""
  attachMediaToProfile(input: AttachMediaToProfileInput!): Media!

  """"""
  attachMediasToProfile(mediaIds: [Int!]!, profileId: Int!): Boolean!

  """"""
  attachMediaToProfileSkill(mediaId: Int!, profileSkillId: BigInt!, profileId: Int!): Media!

  """"""
  setProfileResume(mediaId: Int!, profileId: Int!): Media!

  """"""
  removeProfileResume(profileId: Int!): Boolean!

  """Update single profile media"""
  updateProfileMedia(profileMedia: ProfileMediaInput!): Boolean!

  """Update profile media list"""
  updateProfileMediaList(profileMediaList: [ProfileMediaInput!]!): Boolean!

  """"""
  deleteProfileMedia(mediaId: Float!, profileId: Float!): Boolean!

  """"""
  updateProfileMediaVisibility(profileIds: [Int!]!, mediaId: Int!): Boolean!

  """"""
  addProfileSkill(skillIds: [Float!]!, profileId: Float!): Boolean!

  """"""
  addProfileVehicle(input: ProfileVehicleInput!, profileId: Float!): ProfileVehicle!

  """"""
  deleteProfileVehicle(profileVehicleId: Float!, profileId: Float!): Boolean!

  """"""
  updateProfileVehicle(input: UpdateProfileVehicleInput!, profileVehicleId: Float!, profileId: Float!): ProfileVehicle!

  """"""
  addProfilePet(input: ProfilePetInput!, profileId: Float!): ProfilePet!

  """"""
  deleteProfilePet(profilePetId: Float!, profileId: Float!): Boolean!

  """"""
  updateProfilePet(input: ProfilePetInput!, profilePetId: Float!, profileId: Float!): ProfilePet!

  """"""
  addProfileProp(propId: Float!, profileId: Float!): ProfileProp!

  """"""
  deleteProfileProp(profilePropId: Float!, profileId: Float!): Boolean!

  """"""
  updateProfileProp(propId: Float!, profilePropId: Float!, profileId: Float!): ProfileProp!

  """"""
  addProfileSportsEquipment(sportEquipmentId: Float!, profileId: Float!): ProfileSportEquipment!

  """"""
  copyProfileFromExisting(invitationToken: String, organizationId: Float, profileId: Float!): Profile!

  """"""
  copyProfileUnderSameArtist(toProfileId: Float!, fromProfileId: Float!): Boolean!

  """"""
  deleteProfileSportsEquipment(profileSportEquipmentId: Float!, profileId: Float!): Boolean!

  """"""
  updateProfileSportsEquipment(sportEquipmentId: Float!, profileSportEquipmentId: Float!, profileId: Float!): ProfileSportEquipment!

  """"""
  addProfileWardrobe(wardrobeId: Float!, profileId: Float!): ProfileWardrobe!

  """"""
  deleteProfileWardrobe(profileWardrobeId: Float!, profileId: Float!): Boolean!

  """"""
  updateProfileWardrobe(wardrobeId: Float!, profileWardrobeId: Float!, profileId: Float!): ProfileWardrobe!

  """"""
  deleteProfileSkill(profileSkillId: BigInt!): Boolean!

  """"""
  sendDirectMessageToTalents(input: SendDirectMessageToTalentsInput!): Boolean!

  """"""
  contactSubTalent(input: ContactSubTalentInput!): Boolean!

  """"""
  deleteProfile(profileId: Int!): Boolean!

  """"""
  copyProfileData(toProfileId: Float!, fromProfileId: Float!): Float!

  """"""
  createCredit(credit: CreditInput!): Credit!

  """"""
  updateCredit(credit: CreditUpdateInput!): Credit!

  """"""
  updateCreditOrder(input: [CreditOrderInput!]!): Boolean!

  """"""
  updateProfileCreditTypeSortOrder(secondProfileCreditTypeId: Float!, firstProfileCreditTypeId: Float!): Boolean!

  """"""
  deleteCredit(creditId: Float!): Boolean!

  """"""
  deleteCreditMedia(mediaId: Float!, creditId: Float!): Boolean!

  """"""
  attachCreditVideo(
    """
    Should media be attached to the profile or not? E.g. in a case when media was just uploaded. Default value: false
    """
    attachToProfile: Boolean

    """"""
    mediaIds: [Float!]!

    """"""
    creditId: Float!
  ): [Media!]!

  """Creating profile conflict"""
  addProfileConflict(input: CreateProfileConflictInput!): Boolean!

  """Creating profile conflict"""
  deleteProfileConflict(profileConflictId: Float!): Boolean!

  """Creating profile conflict"""
  updateProfileConflict(input: UpdateProfileConflictInput!): Boolean!

  """Delete submission"""
  deleteSubmission(id: BigInt!): Boolean!

  """Delete submission"""
  deleteAllSubmissions(roleId: Float!, projectId: Float!): Float!

  """Delete submission"""
  deleteSubmissionsBulk(ids: [BigInt!]!): Boolean!

  """Update submission status"""
  updateSubmissionStatus(input: UpdateSubmissionStatusInput!): Boolean!

  """Update status of a bunch submissions"""
  updateSubmissionsStatus(
    """CODE of new status"""
    statusCode: String!

    """List of subscription Ids which should be updated """
    submissionIds: [BigInt!]!
  ): [Submission!]!

  """Update submission"""
  updateSubmission(syncIndexing: Boolean = false, input: SubmissionUpdateInput!): Submission!

  """Adding profile submission"""
  addProfileSubmission(syncIndexing: Boolean, input: CreateProfileSubmissionInput!): [Submission!]!

  """"""
  addProfileSubmissionOrGet(input: CreateProfileSubmissionOrGetInput!): SubmissionCreated!

  """
  Adding submissions for all profiles by search input filters. Returns count of created submissions.
  """
  addAllProfilesSubmissions(roleId: Int!, searchInput: ProfileSearchInput!): Float!

  """Quick add submission (FastCapture support)"""
  addSubmissionQuick(input: SubmissionQuickAddInput!): Int!

  """Add submission snapshot"""
  addSubmissionSnapshot(startOffset: String, snapshotId: Int!, submissionsId: BigInt!): Int!

  """Copies submission data to another role"""
  copySubmissionToRole(submissionId: BigInt!, submissionStatusCode: SubmissionStatusCodeEnum!, tileSchemaValueCode: String!, roleId: Int!): Submission! @deprecated(reason: "Use moveSubmissionsToRole")

  """Move submissions to another role"""
  moveSubmissionsToRole(submissionStatusCode: SubmissionStatusCodeEnum, submissionIds: [BigInt!]!, tileSchemaValueCode: String!, roleId: Int!): [Submission!]!

  """Submits all selected submissions by REPS for the role"""
  submitSelectedSubmissionForRole(roleId: Int!, mediaRequestStatuses: [MediaRequestStatus!]): Boolean!

  """Submits all selected submissions by REPS for the role"""
  submitSelectedSubmissionForRoleV1(roleId: Int!, mediaRequestStatuses: [MediaRequestStatus!]): Int!

  """"""
  hideProfileInRoster(id: ID!): Profile!

  """"""
  hideProfileInRosterAndSearch(id: ID!): Profile!

  """"""
  unHideProfileInRosterAndSearch(id: ID!): Profile!

  """"""
  setProfileActive(id: ID!): Profile!

  """"""
  approvePCProject(input: ApprovePCProjectInput!): Boolean!

  """Sends notification to all representatives"""
  sendProjectUpdateMessageToReps(input: ProjectNotificationToRepsInput!): Boolean!

  """"""
  addProjectNote(input: ProjectNoteInput!): Float

  """Denotes if the update went successfully"""
  setProjectAsViewed(id: ID!): Boolean!

  """
  Denotes if the project has been accepted successfully along with it(s) associated role(s)
  """
  acceptProjectModification(id: ID!): Boolean!

  """
  Denotes if the project has been rejected successfully along with it(s) associated role(s)
  """
  rejectProjectModification(id: ID!): Boolean!

  """"""
  createProject(input: CreateProjectInput!): Project!

  """"""
  updateProject(input: UpdateProjectInput!): Project!

  """Adds a profile to a Project"""
  addProfileToProject(input: AddProfileToProjectInput!): Submission! @deprecated(reason: "That mutation is deprecated. Please use addSubmission for the same")

  """"""
  createPCProject(input: CreatePCProjectInput!): Project!

  """"""
  updatePCProject(input: UpdatePCProjectInput!): Boolean!

  """"""
  submitPCProjectForApproval(input: UpdatePCProjectInput!): Boolean!

  """"""
  setProjectStatus(projectStatusCodeToUpdate: String!, projectId: ID!): Boolean!

  """"""
  createRole(input: RoleCreateInput!): Role!

  """"""
  createPCRole(input: RoleCreateInput!): Role!

  """"""
  updateRole(input: RoleUpdateInput!): Role

  """"""
  deleteRole(roleId: Float!): Boolean!

  """"""
  publishRoles(messageToTalents: String, messageToReps: String, roleIds: [ID!]!): Boolean!

  """
  Request for additional submissions for provided roles. Returns either request was sent or not.
  """
  requestSubmissionsForRoles(
    """"""
    messageToReps: String

    """"""
    messageToTalents: String

    """
    List of Role's ids for which should be requested additional submissions
    """
    roleIds: [Int!]!
  ): Boolean!

  """Changes order of the role. Returns either the order was changed or not"""
  changeRoleOrder(
    """
    Determines should the new order relative to positionalRoleId be moved behind or not. Default value: true.
    """
    moveBehind: Boolean

    """ProjectId to which ROLES are associated"""
    projectId: Int!

    """Role's id relative to which new order will be set"""
    positionalRoleId: Int!

    """Role's id which should be changed"""
    roleId: Int!
  ): Boolean!

  """"""
  widenPublicationRoles(messageToTalents: String, messageToReps: String, rolePublicationSettings: [RolePublicationSettingInput!]!, roleIds: [Int!]!): Boolean!

  """"""
  updateRoleStatus(roleStatusCode: RoleStatusCodes!, roleIds: [Int!]!): Boolean!

  """"""
  updateRolesWardrobeBulk(input: [RoleUpdateWardrobeInput!]!): Boolean!

  """"""
  setRoleRepStatus(newStatus: RepRoleStatusEnum!, roleId: Float!): Boolean!

  """"""
  updateOrganizationFeatures(features: [OrganizationFeatureInput!]!): [Feature!]!

  """"""
  updateOrganizationAccount(accountsRoots: [OrganizationAccountInput!]!, accountId: Float!): Boolean

  """"""
  createOrganization(input: CreateOrganizationInput!): Organization!

  """"""
  mergeOrganization(toOrganizationId: Float!, fromOrganizationId: Float!): Boolean!

  """"""
  updateOrganization(input: UpdateOrganizationInput!): Organization!

  """"""
  deleteOrganzationAddress(addressId: Int!, organizationId: Int!): Boolean!

  """"""
  addOrganizationLogo(mediaId: Int!, organizationId: Int!): Media!

  """"""
  removeOrganizationLogo(organizationId: Float!): Organization!

  """"""
  reassignProjectToOrganization(toOrganizationId: Float!, fromOrganizationId: Float!): Boolean

  """"""
  upgradePCOrgToCD(organizationId: Float!): Boolean

  """"""
  reassociateChildOrgtoParent(parentOrgId: Float!, childOrgId: Float!): Boolean

  """"""
  closeDivision(divisionId: Float!): Float

  """"""
  createScheduleReport(input: ScheduleReportCreateInput!): String!

  """"""
  createScheduleSizeSheetsReport(input: ScheduleSizeSheetsReportCreateInput!): String!

  """"""
  createPresentationLogReport(input: PresentationReportCreateInput!): String!

  """"""
  createPresentationPickReport(input: PresentationReportCreateInput!): String!

  """"""
  createPresentationSizeSheetsReport(input: PresentationReportCreateInput!): String!

  """"""
  createProjectOverviewReport(input: ProjectReportCreateInput!): String!

  """"""
  createProjectSubmissionReport(input: ProjectSubmissionCreateInput!): String!

  """"""
  createProjectOverviewCDReport(input: ProjectReportCDCreateInput!): String!

  """"""
  createBookingCallListReport(input: ProjectReportCreateInput!): String!

  """"""
  createTalentSubmissionReport(input: TalentSubmissionReportCreateInput!): String!

  """"""
  createAgencyCallListReport(input: AgencyCallListReportCreateInput!): String!

  """"""
  createPresentationLogReportPublic(input: PresentationReportCreatePublicInput!): String!

  """"""
  createPresentationSizeSheetsReportPublic(input: PresentationReportCreatePublicInput!): String!

  """Updates the name of a Profile List."""
  updateProfileListName(input: UpdateListNameInput!): Float!

  """Adds a list of profiles."""
  addProfileList(input: AddProfileListInput!): ProfileList!

  """Adds profiles (ids) to organization profile list"""
  addProfileListEntities(input: AddOrDeleteListEntitiesInput!): Float!

  """Removes profiles (ids) from organization profile list"""
  deleteProfileListEntities(input: AddOrDeleteListEntitiesInput!): Float!

  """Deletes the profile list by listId."""
  deleteProfileList(listId: Float!): Float!

  """Adds all profiles to list based on provided filters."""
  addAllProfilesToList(input: ProfileSearchInput!, listId: Float!): Float!

  """Updates the name of a Reps List."""
  updateRepresentativeListName(input: UpdateListNameInput!): Float!

  """Updates a list of representatives."""
  updateRepresentativeList(input: UpdateRepresentativeListInput!): Float!

  """Adds a list of representatives."""
  addRepresentativeList(input: AddRepresentativeListInput!): Float!

  """Deletes the representative list by ListId."""
  deleteRepresentativeList(listId: Float!): Float!

  """Creates a schedule"""
  createSchedule(input: CreateScheduleInput!): ScheduleDetail!

  """Update schedule"""
  updateScheduleWithAddress(
    """Input object"""
    addressInput: AddressInput

    """"""
    scheduleInput: UpdateScheduleInput!
  ): Boolean!

  """Assign submissions to the calendar slot. Returns added submission ids"""
  addSubmissionsToSlot(input: AddSubmissionsToTimeframeInput!): [BigInt!]!

  """Remove submission from calendar slot"""
  deleteSubmissionFromSlot(input: DeleteSubmissionFromSlotInput!): Boolean! @deprecated(reason: "use deleteSubmissionsFromSlot")

  """Remove submissions from calendar slots"""
  deleteSubmissionsFromSlot(input: DeleteSubmissionsFromSlotInput!): Boolean!

  """Cancel Schedule"""
  cancelSchedule(input: CancelScheduleInput!): Boolean!

  """Moves Submissions to the new time slot"""
  moveSubmissionsFromSlotBulk(input: MoveSubmissionsFromSlotsInput!): Boolean!

  """Add break to schedule"""
  addScheduleBreak(
    """Break's end time """
    endTime: DateTime!

    """Break's start time """
    startTime: DateTime!

    """Schedule ID"""
    scheduleId: Int!
  ): Int!

  """Update break"""
  updateScheduleBreak(
    """Break's end time """
    endTime: DateTime!

    """Break's start time """
    startTime: DateTime!

    """Timeframe ID"""
    breakId: Int!

    """Schedule ID"""
    scheduleId: Int!
  ): Boolean!

  """Add Timeframe to a Schedule"""
  addTimeframeToSchedule(input: AddTimeframeInput!): Float!

  """Delete Timeframe from a Schedule"""
  deleteTimeframeFromSchedule(input: DeleteTimeframeInput!): Boolean!

  """Adds Add-in profile to the timeslot. Returns added submission"""
  addAddInProfileToScheduleTimeSlot(input: AddProfileToTimeSlotAddInInput!): Submission!

  """Adds profile to the timeslot. Returns ID of added submission"""
  addProfileToScheduleTimeSlot(input: AddProfileToTimeSlotInput!): Submission!

  """"""
  shiftScheduleTimeframe(input: ShiftTimeframeInput!): ScheduleTimeframeShiftedResult

  """"""
  createChatMessage(messageInput: ChatMessageCreateInput!): ChatMessageModel!

  """"""
  markChatMessageAsReadFromId(messageId: String!): Boolean!

  """"""
  markAllAsRead(topicKey: String!): Boolean!

  """"""
  archiveRole(roleIds: [String!]!): String!

  """"""
  restoreRole(roleIds: [String!]!): String!

  """"""
  archiveProjects(projectIds: [Float!]!): String!

  """"""
  restoreProjects(projectIds: [Float!]!): String!

  """"""
  createSavedSearch(input: CreateSavedSearchInput!): SavedSearch!

  """"""
  updateSavedSearch(input: UpdateSavedSearchInput!): SavedSearch!

  """"""
  deleteSavedSearch(ids: [ID!]!): Int!

  """Returns a session bearer token."""
  login(email: String!, password: String!): AuthToken!

  """Sign in user on behalf of internal service"""
  loginDelegatedUser(email: String!, password: String!, service: MicroServices!): AuthToken!

  """Deletes refresh token"""
  logout(refreshToken: String!): Boolean!

  """Creates new pair of tokens"""
  switchAuthContext(refreshToken: String!, role: SystemRoleCode, artistId: Int, organizationId: Int): AuthToken!

  """Creates new pair of tokens"""
  createAuthContextByAccountId(accountId: Int!, service: MicroServices, organizationId: Int): AuthToken!

  """Creates new pair of tokens for CSR user"""
  loginImpersonatedAccount(accountId: Float!): AuthToken!

  """Creates new pair of tokens"""
  refreshToken(refreshToken: String!): AuthToken!

  """Returns a session bearer token for internal user."""
  googleLoginInternal(googleAuthToken: String!): AuthToken!

  """"""
  addBillingInfo(input: AddBillingInfoInput!): BillingInfo!

  """"""
  updateBillingInfo(input: UpdateBillingInfoInput!): BillingInfo!

  """"""
  removeBillingInfo(input: RemoveBillingInfoInput!): Boolean!

  """"""
  setSubscriptionPaymentMethod(input: SetSubscriptionPaymentMethodInput!): Boolean!

  """Either sends 'Not Yet Sent' request or re-sends it"""
  sendRequest(id: ID!, sendTo: RequestSendTo!, note: String = null): Boolean!

  """"""
  cancelRequest(id: ID!, input: CancelRequestInput!): Boolean!

  """"""
  createChatTopicFromSubRequest(subRequestId: String!): Boolean!

  """"""
  forwardRequests(ids: [ID!]!, message: String, ccManagerEmail: Boolean): [RepWorksheetItem!]!

  """"""
  deleteRequest(id: ID!): Boolean!

  """"""
  updateRequestDueDate(id: ID!, input: UpdateDueDateInput!): RequestUnion!

  """Creates 'Media' request type"""
  createMediaRequest(input: MediaRequestInput!): MediaRequest!

  """Updates 'Media' request type"""
  updateMediaRequest(id: ID!, input: MediaRequestInput!, roleIds: [Int!]): MediaRequest!

  """Reply to 'Media' request"""
  replyToMediaRequest(input: MediaResponseInput!): MediaSubRequest!

  """Request changes on 'Media' request"""
  requestMediaChanges(input: MediaChangeInput!): MediaSubRequest!

  """"""
  addTalentToMediaRequest(id: ID!, submissionIds: [Int!]!, roleIds: [Int!], tileSchemeValueCodes: [String!], searchInput: WfSubmissionSearchInput): MediaRequest!

  """"""
  updateMediaRequestTalentInstructions(id: ID!, instructions: String!): MediaRequest!

  """"""
  updateMediaRequestMessageForRepresentatives(id: ID!, message: String = null): MediaRequest!

  """Creates 'Ask Question' request type"""
  createAskQuestionRequest(input: AskQuestionRequestInput!): AskQuestionRequest!

  """Updates 'Ask Question' request type"""
  updateAskQuestionRequest(id: ID!, input: AskQuestionRequestInput!, roleIds: [Int!]): AskQuestionRequest!

  """Reply to 'Ask Question' request"""
  replyToAskQuestionRequest(input: AskQuestionResponseInput!): AskQuestionSubRequest!

  """"""
  addTalentToQuestionRequest(id: ID!, submissionIds: [Int!]!, roleIds: [Int!], tileSchemeValueCodes: [String!], searchInput: WfSubmissionSearchInput): AskQuestionRequest!

  """Creates 'Roster Invitation Request' type"""
  createRosterInvitationRequest(input: RosterInvitationRequestInput!): RosterInvitationRequest!

  """Send 'Schedule Invite' request"""
  sendScheduleInviteRequest(input: ScheduleInviteRequestInput!): Boolean!

  """Reply to 'Schedule Invite' request"""
  replyToScheduleInviteRequest(input: ScheduleInviteResponseInput!): ScheduleInviteSubRequest!

  """Casting Director can set reply status"""
  setSheduleInviteRequestStatus(input: ScheduleInviteSetStatusInput!): ScheduleInviteSubRequest!

  """Sends Voice Over 'Media' request"""
  sendVoiceOverMediaRequest(input: SendVoiceOverMediaRequestInput!): [MediaSubRequest!]!
}

"""Creates a user account based on given input values"""
input BauLoginInput {
  """"""
  username: String!

  """"""
  password: String!

  """"""
  instance: String!

  """"""
  migratedAccountID: Float!
}

"""Creates or update a user account based on given input values"""
input BauAccountInput {
  """"""
  firstName: String!

  """"""
  lastName: String!

  """"""
  email: String!

  """"""
  phone: String!

  """"""
  countryId: ID!

  """"""
  timeZoneId: Float!

  """"""
  password: String!

  """"""
  audience: String!

  """"""
  termsOfUse: Boolean!

  """Closest casting market for PC user"""
  dmaId: ID
}

""""""
input BauLoginByLegacyDataInput {
  """"""
  email: String!

  """"""
  phoneEnding: String!

  """"""
  username: String!

  """project name for validation"""
  instance: String

  """Recovery Type EMAILANDPHONE|PROJECT|STAGE"""
  accountRecoveryType: AccountRecoveryType!

  """project name for validation"""
  projectName: String

  """stage name for validation"""
  stageName: String

  """additional account id"""
  migratedAccountID: Float
}

"""Account Recovery Type by EMAILANDPHONE|PROJECT|STAGE"""
enum AccountRecoveryType {
  """"""
  EmailAndPhone

  """"""
  Project

  """"""
  StageName

  """"""
  Phone
}

""""""
type AuthTokenItem {
  """"""
  access: String

  """"""
  refresh: String
}

"""Update or Create B21 Profile from BAU"""
input BauProfileUpdateInput {
  """Array of Bau Artists"""
  artists: [BauArtistInput!]!
}

"""Update or Create B21 Profile from BAU"""
input BauArtistInput {
  """Artist first name"""
  firstName: String!

  """Artist last name"""
  lastName: String!

  """Is artist minor"""
  isMinor: Boolean!

  """Array of Bau Profiles"""
  profiles: [BauProfileInput!]!

  """Personal Profile Info"""
  personalProfile: BauPersonalProfileInput!

  """Primary Artist ID"""
  primaryArtistId: Int
}

"""Update or Create B21 Profile from BAU"""
input BauProfileInput {
  """Profile ID"""
  profileId: Int!

  """Profile primary location ID"""
  primaryLocationId: Int!

  """Profile min playable age"""
  minPlayableAge: Int!

  """Profile max playable age"""
  maxPlayableAge: Int!

  """Profile primary appearance ID"""
  primaryAppearanceId: Int!

  """Artist ID"""
  artistId: Int

  """Profile division (organization) ID"""
  divisionId: Int
}

"""Update or Create B21 Profile from BAU"""
input BauPersonalProfileInput {
  """Profile ID"""
  profileId: Int!

  """Profile primary location ID"""
  primaryLocationId: Int!

  """Profile min playable age"""
  minPlayableAge: Int!

  """Profile max playable age"""
  maxPlayableAge: Int!

  """Profile primary appearance ID"""
  primaryAppearanceId: Int!

  """Artist ID"""
  artistId: Int

  """Profile from REP|UNREP|NEW"""
  personalProfileFrom: ProfileFromEnum!
}

"""All possible way for creating personal profile"""
enum ProfileFromEnum {
  """"""
  UNREP

  """"""
  REP

  """"""
  NEW

  """"""
  NONE
}

"""Update Legacy Profile Result Object"""
type UpdateLegacyResult {
  """Update Legacy Profile Status"""
  status: Int

  """New JWT Token For Redirect"""
  token: AuthTokenItem
}

"""
Creates or update organization contact or address on given input values
"""
input OrganizationInput {
  """Organization Id"""
  organizationId: Float!

  """Organization Parent Id"""
  parentOrganizationId: Float

  """Contact Id"""
  contactId: Float

  """Primary Contact Name"""
  primaryContactName: String!

  """Primary Contact Email"""
  primaryContactEmail: String!

  """Primary Contact Phone Number"""
  primaryContactPhoneNumber: String!

  """Address Id"""
  addressId: Float

  """Country Id"""
  countryId: Float!

  """Company Address Line 1"""
  companyAddressLine1: String!

  """Company Address Line 2"""
  companyAddressLine2: String

  """City"""
  city: String!

  """State Id"""
  stateId: Float

  """Zip"""
  zip: String!

  """Company Phone Number"""
  companyPhoneNumber: String

  """is update org info"""
  isUpdateOrgInfo: Boolean!
}

"""Update Organization Result Object"""
type UpdateOrganizationResult {
  """Update Organization Status"""
  status: Int

  """New JWT Token For Redirect"""
  token: AuthTokenItem
}

"""
Creates or update Rep organization contact, address, publishing categories, dma and workingLocation on given input values
"""
input AgentOrganizationInput {
  """Organization input"""
  organizationInput: OrganizationInput!

  """Publishing categories"""
  publishingCategories: [Float!]!

  """DMA id"""
  dmaId: Float!

  """Primary working organization"""
  primaryWorkingLocation: [Float!]!

  """Representation age categories"""
  ageCategories: [Float!]
}

""""""
input BauPCAccountUpdateInput {
  """"""
  companyName: String

  """"""
  institutionName: String

  """"""
  professionalBio: String

  """"""
  portfolio: String

  """"""
  imdbLink: String

  """"""
  youtubeLink: String

  """"""
  vimeoLink: String

  """"""
  instagramLink: String

  """"""
  twitterLink: String

  """"""
  facebookLink: String
}

""""""
type CompletePurchaseBillingDetailsModel {
  """"""
  email: String

  """"""
  cardType: String

  """"""
  lastFour: String

  """"""
  invoiceId: String

  """"""
  total: Float

  """"""
  creditsApplied: Float

  """"""
  items: [BillingItemModel!]
}

"""Create Subscription Input"""
input CreateSubscriptionInput {
  """Account code"""
  accountCode: String!

  """Artist id"""
  artistId: Float!

  """Billing code"""
  billingCode: BillingCode!

  """Country id"""
  countryId: Float!

  """Next billing date"""
  nextBillDate: DateTime!

  """Coupon code"""
  coupon: String = null
}

""""""
enum BillingCode {
  """"""
  premium_m2m

  """"""
  premium_annual

  """"""
  registration

  """"""
  premium_comped

  """"""
  cb_m2m

  """"""
  cb_semiannual

  """"""
  cb_annual

  """"""
  la_cb_m2m

  """"""
  la_cb_semiannual

  """"""
  la_cb_annual

  """"""
  la_cbmh_annual

  """"""
  la_cbmh_semiannual

  """"""
  la_cbmh_m2m

  """"""
  mh_m2m

  """"""
  mh_semiannual

  """"""
  mh_annual

  """"""
  la_mh_m2m

  """"""
  la_mh_semiannual

  """"""
  la_mh_annual

  """"""
  pu_m2m

  """"""
  pu_semiannual

  """"""
  pu_annual

  """"""
  cbmh_m2m

  """"""
  cbmh_semiannual

  """"""
  cbmh_annual

  """"""
  la_cbmu_m2m

  """"""
  la_cbmu_semiannual

  """"""
  la_cbmu_annual

  """"""
  mhpu_m2m

  """"""
  mhpu_semiannual

  """"""
  mhpu_annual

  """"""
  cbpu_m2m

  """"""
  cbpu_semiannual

  """"""
  cbpu_annual

  """"""
  concierge_m2m

  """"""
  concierge_semiannual

  """"""
  concierge_annual

  """"""
  cbmhpu_m2m

  """"""
  cbmhpu_semiannual

  """"""
  cbmhpu_annual
}

""""""
input AddArtistFreeCreditsInput {
  """"""
  artistId: Int!

  """"""
  itemCode: BillingItemCode!

  """"""
  credits: Int!
}

"""Updates a user account based on given input values"""
input UpdateAccountInput {
  """"""
  accountId: Int

  """"""
  countryId: Int

  """"""
  firstName: String

  """"""
  lastName: String

  """"""
  email: String

  """
  Holds the generated token value, till it gets expired or the email update verification done successfully.
  """
  emailResetToken: String

  """
  Holds email reset token creation date and time till token gets expired or the email update verification done successfully.
  """
  emailResetTokenCreated: DateTime

  """
  Used for holding the new email value going to be updated to the actual account email
  """
  emailToReset: String

  """"""
  phone: String

  """"""
  timezoneId: Int

  """"""
  loginAttemptCount: Int

  """"""
  loginAttemptFailedAt: DateTime

  """"""
  rosterInvitationToken: String

  """"""
  languageLocaleId: Int
}

"""Creates a user account based on given input values"""
input AccountCreateInput {
  """"""
  countryId: ID!

  """"""
  email: String!

  """"""
  phoneNumber: String

  """"""
  firstName: String!

  """"""
  lastName: String!

  """"""
  password: String!

  """"""
  timeZoneId: Float!

  """"""
  systemRoleCode: SystemRoleEnum

  """"""
  professionalBio: String

  """Closest casting market for PC user"""
  dmaId: Int

  """Marketing option subscription option"""
  marketingOptIn: Boolean

  """"""
  termsOfUse: Boolean!

  """"""
  rosterInvitationToken: String

  """"""
  profileAccessToken: String

  """"""
  languageLocaleId: Int
}

""""""
enum SystemRoleEnum {
  """"""
  Api

  """"""
  Agent

  """"""
  Talent

  """"""
  Manager

  """"""
  RootUser

  """"""
  LegacyUser

  """"""
  ProjectCreator

  """"""
  CastingDirector

  """"""
  Creative

  """"""
  SharedProjectUser
}

""""""
type AuthToken {
  """"""
  access: String!

  """"""
  refresh: String!
}

""""""
input PCAccountUpdateInput {
  """"""
  accountId: ID!

  """"""
  companyName: String

  """"""
  institutionName: String

  """"""
  professionalBio: String

  """"""
  portfolio: String

  """"""
  imdbLink: String

  """"""
  youtubeLink: String

  """"""
  vimeoLink: String

  """"""
  instagramLink: String

  """"""
  twitterLink: String

  """"""
  facebookLink: String
}

"""Creates a internal user account based on given input values"""
input InternalAccountCreateInput {
  """"""
  email: String!

  """"""
  roleId: [ID!]!

  """"""
  env: String
}

"""Creates a end user account based on given input values"""
input EndUserAccountInput {
  """"""
  email: String!

  """"""
  firstName: String!

  """"""
  lastName: String!

  """"""
  phone: String!

  """"""
  companyAdmin: Boolean!

  """"""
  countryId: Int!

  """"""
  organizationIds: [Float!]!

  """"""
  roleId: Float!

  """"""
  timeZoneId: Float!
}

""""""
input AccountSchedulePreferencesInput {
  """"""
  thumbnailType: ThumbnailType!

  """"""
  showUnionStatus: Boolean!
}

""""""
input AccountProjectFiltersInput {
  """"""
  isKidsRolesOnly: Boolean

  """"""
  projectTypeIds: [Float!]

  """"""
  roleTypes: [String!]

  """"""
  castingOrganizationIds: [Float!]

  """"""
  dmaIds: [Float!]

  """"""
  hasRequests: Boolean

  """"""
  hasSelects: Boolean

  """"""
  hasSubmissions: Boolean

  """"""
  projectViewStatus: ProjectViewFilterType

  """"""
  projectName: String

  """"""
  roleName: String

  """"""
  projectUnionIds: [Float!]

  """"""
  submissionDueDate: String
}

""""""
input RegisterDeviceInput {
  """"""
  token: String!

  """"""
  deviceType: DeviceTokenType!
}

""""""
enum DeviceTokenType {
  """"""
  APN
}

"""Address Input Type"""
input AddressInput {
  """"""
  addressId: Int

  """Address Type CODE"""
  addressTypeCode: String!

  """Address Line 1"""
  addressLine1: String!

  """Address Line 2"""
  addressLine2: String

  """Address Line 3"""
  addressLine3: String

  """City"""
  city: String!

  """State / Province CODE"""
  stateCode: String

  """State Id"""
  stateId: Int

  """Country Id"""
  countryId: Int

  """Division City Id"""
  divisionCityId: Int

  """Postal Code"""
  postalCode: String

  """Note"""
  note: String

  """Other detail"""
  otherDetail: String
}

"""Input for Updating Artist"""
input ArtistUpdateInput {
  """Artist Id """
  artistId: Int!

  """First Name"""
  firstName: String

  """Last Name"""
  lastName: String

  """Account Id """
  accountId: Int

  """Organization Id """
  organizationId: Int

  """Profile access token granted by Rep"""
  profileAccessToken: String
}

""""""
input MediaInitUploadInput {
  """"""
  count: Int!

  """Entity CODE to which media should be assigned"""
  entity: String

  """Entity Id to which media should be assigned"""
  entityId: Int
}

""""""
input MediaMetadataInput {
  """"""
  guid: ID!

  """"""
  filename: String!

  """"""
  size: Int!

  """"""
  length: Int

  """"""
  width: Int

  """"""
  height: Int

  """"""
  transformation: MediaTransformationInput

  """The extension of uploaded file"""
  format: String!
}

""""""
input MediaTransformationInput {
  """"""
  xAxis: Float

  """"""
  yAxis: Float

  """"""
  width: Float

  """"""
  height: Float

  """"""
  rotate: Float

  """"""
  startOffset: String
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject

""""""
input UpdateMediaInput {
  """"""
  mediaId: Int!

  """"""
  mediaModerationStatusCode: String

  """"""
  paid: Boolean

  """"""
  name: String

  """"""
  tag: String

  """"""
  size: Int

  """"""
  length: Int
}

""""""
input AuditionSessionCreateInput {
  """Name of audition session"""
  name: String!

  """ID of the project to which will be assigned audition session"""
  projectId: Int!

  """Source of audition session"""
  sourceCode: String!

  """ID of the creator"""
  createdBy: Int
}

""""""
input AuditionSessionUpdateInput {
  """ID of existing audition submission"""
  id: Int!

  """Name of audition session"""
  name: String

  """Order of appearance"""
  order: Int

  """Source of audition session"""
  sourceCode: String

  """Note of audition session"""
  note: String
}

"""Audition Submission Snapshot input type"""
input AuditionSubmissionSnapshotInput {
  """Submission Ids"""
  submissionId: BigInt!

  """Snapshot Id"""
  snapshotId: Int!
}

""""""
input ChangeAuditionSessionTalentRoleNameInput {
  """"""
  roleName: String!

  """"""
  roleId: Int!

  """"""
  entityTypeCode: EntityTypeEnum!

  """"""
  entityId: BigInt!
}

"""Audition Session Group input type"""
input AuditionGroupInput {
  """Name for audition session group"""
  name: String

  """
  Id of audition session to which the audition session group will be assigned
  """
  auditionSessionId: Int

  """Thumbnail. Id of existing media"""
  thumbnailMediaId: Int

  """Order of appearance"""
  order: Int

  """Note for the group"""
  note: String

  """ID of the creator"""
  createdBy: Int
}

"""Audition Session Group input type"""
input AuditionGroupBulkUpdateInput {
  """Archive status"""
  archived: Boolean!
}

"""Audition Group Media input type"""
input AuditionGroupMediaInput {
  """Id of audition group to which media will be added"""
  auditionGroupId: Int!

  """List of Media items"""
  media: [AuditionGroupMediaItemInput!]!
}

"""Media input type for Audition Group"""
input AuditionGroupMediaItemInput {
  """Id of existing Media"""
  mediaId: Int!

  """Name for the media"""
  name: String

  """Order of appearance"""
  order: Int
}

""""""
input AddProfileToAuditionGroupInput {
  """"""
  profileId: Int!

  """"""
  roleId: Int!

  """"""
  tileSchemeValueCode: TileSchemeValueEnum!

  """"""
  auditionGroupId: Int!
}

""""""
enum TileSchemeValueEnum {
  """"""
  _1

  """"""
  _2

  """"""
  _3

  """"""
  _4

  """"""
  _5

  """"""
  _6

  """"""
  CB

  """"""
  PACKAGE_PICK_1

  """"""
  PRESENTATION_PICK_1
}

""""""
input AddProfileToAuditionGroupAddInInput {
  """"""
  stageName: String!

  """"""
  note: String

  """"""
  roleId: Int!

  """"""
  email: String!

  """"""
  auditionGroupId: Int!
}

""""""
input ChangeAuditionGroupTalentOrderInput {
  """"""
  groupId: Int!

  """"""
  submissionId: BigInt!

  """
  Submission ID behind which the item should be moved. If not passed will be moved to the beginning
  """
  behindSubmissionId: BigInt
}

""""""
input AuditionGroupMediaOrderUpdateInput {
  """"""
  auditionGroupId: Int!

  """"""
  groupMediaId: Int!

  """"""
  moveAfterGroupMediaId: Int
}

"""Add Note Input Type"""
input AddNoteInput {
  """
  Organization Id that will take assignment from the context if not supplied explicitly
  """
  organizationId: Int

  """Note Type CODE"""
  noteTypeCode: String

  """Note Modifier CODE"""
  noteModifierCode: String

  """Entity ID that note will be assigned to"""
  entityId: BigInt!

  """Entity Type CODE"""
  entityTypeCode: String!

  """Text of the note"""
  comment: String!
}

"""Update Note Input Type"""
input UpdateNoteInput {
  """Note ID which should be updated"""
  noteId: Int!

  """Note Type CODE"""
  noteTypeCode: String

  """Note Modifier CODE"""
  noteModifierCode: String

  """Entity ID that note will be assigned to"""
  entityId: Int

  """Entity Type CODE"""
  entityTypeCode: String

  """Text of the note"""
  comment: String
}

"""Add/Update Notification Subscription Input Type"""
input NotificationSubscriptionInput {
  """Account Id that notification subscription will be assigned to"""
  accountId: Int

  """Artist Id that notification subscription will be assigned to"""
  artistId: Int

  """Organization Id that notification subscription will be assigned to"""
  organizationId: Int

  """Entity Type Subscription Array"""
  entitySubscription: [EntitySubscriptionInput!]

  """Notification Type Subscription Array"""
  notificationTypeSubscription: [NotificationTypeSubscriptionInput!]

  """Notification Subscription ID which should be updated"""
  notificationId: ID

  """"""
  notificationPhone: ID
}

"""Input type for entity type subscription"""
input EntitySubscriptionInput {
  """Entity Type CODE"""
  entityTypeCode: String!

  """
  Entity value CODE. e.g if entityTypeCode is ROLE_TARGET then entityValueCode must be PRINCIPAL Or BACKGROUND
  """
  entityValueCode: String!
}

"""Input type for notification type subscription"""
input NotificationTypeSubscriptionInput {
  """Subscription status"""
  subscriptionStatus: Boolean!

  """Notification Type CODE"""
  notificationTypeCode: String!

  """Notification Nature CODE"""
  notificationNatureCode: String!
}

"""Audition Presentation input type"""
input AuditionPresentationInput {
  """Name for audition presentation"""
  name: String!

  """Project ID"""
  projectId: Int!

  """"""
  isLive: Boolean = false

  """List of linked audition sessions. Required for Live Presentation"""
  auditionSessionIds: [Int!] = []
}

"""Audition Presentation input type"""
input ShareSelectPresentationInput {
  """Project ID"""
  projectId: Int!

  """Role IDs"""
  roleIds: [Int!]!

  """Tile Scheme Codes"""
  tileSchemeCodes: [String!]!

  """Date of link expiration"""
  linkExpiresAt: DateTime
}

""""""
input CopyPresentationInput {
  """Name of new presentation"""
  name: String!

  """Presentation Id to copy"""
  presentationId: Int!

  """Project ID"""
  projectId: Int!
}

"""Presentation Update input type"""
input PresentationUpdateInput {
  """Presentation ID"""
  presentationId: Int!

  """Name for presentation"""
  name: String

  """Date of link expiration"""
  linkExpiresAt: DateTime

  """Password"""
  password: String

  """"""
  settings: PresentationSettingsInput
}

""""""
input PresentationSettingsInput {
  """"""
  allowDownloadMedia: Boolean

  """"""
  leaveFeedback: Boolean

  """"""
  seeOthersFeedback: Boolean
}

"""Send presentation link email input"""
input PresentationLinkEmailInput {
  """Presentation ID"""
  presentationId: Int!

  """Message"""
  message: String!

  """Email Recipients"""
  to: [String!]!

  """Email copy"""
  cc: [String!]

  """Reply to"""
  replyTo: String!

  """Subject"""
  subject: String!
}

"""Presentation Folder input type"""
input PresentationFolderInput {
  """Name for presentation folder"""
  name: String!

  """Presentation ID"""
  presentationId: Int!
}

""""""
input CustomizeTalentInFolderInput {
  """"""
  folderId: Int!

  """"""
  profileId: Int!

  """Note for submission"""
  note: String

  """Over scale note"""
  overscaleNote: String

  """Represents that profile is overscale or not"""
  isOverscale: Boolean

  """profile customized media(s)"""
  media: [PresentationFolderTalentCustomizedMediaInput!]
}

""""""
input PresentationFolderTalentCustomizedMediaInput {
  """Media Id"""
  mediaId: ID!

  """Is media primary? (Primary photo, video reel or audio reel)"""
  isPrimary: Boolean

  """Media order of appearance"""
  order: Int

  """Customize media file name"""
  name: String
}

"""Presentation Folder Update input type"""
input PresentationFolderUpdateInput {
  """Presentation Folder ID"""
  presentationFolderId: Int!

  """Name for presentation folder"""
  name: String!
}

"""Presentation Group Update input type"""
input PresentationGroupUpdateInput {
  """Presentation Group ID"""
  presentationGroupId: Int!

  """Name for presentation group"""
  name: String
}

""""""
input DeletePresentationProfilePickPublickInput {
  """"""
  presentationGuid: String!

  """"""
  pickId: String!

  """"""
  profileId: Int!

  """"""
  userName: String!
}

"""Presentation Download Archive Input Type"""
input PresentationMediaDownloadInput {
  """GUID of Presentation"""
  guid: String!

  """Presenatation Folder Id"""
  presentationFolderId: Int!

  """Group Id of Presentation"""
  presentationGroupId: Int

  """Email Id of Unauthenticated User"""
  unauthenticatedUserEmail: String
}

"""Input type for Profile Book Out dates"""
input ProfileBookOutInput {
  """Profile Id"""
  profileId: Float

  """Start Date"""
  startDate: DateTime

  """End Date"""
  endDate: DateTime

  """Profile Book Out Id"""
  profileBookoutId: Float
}

"""Input type for Create profile"""
input ProfileCreateInput {
  """First Name"""
  firstName: String

  """Last Name"""
  lastName: String

  """Stage Name"""
  stageName: String!

  """is minor"""
  minor: Boolean = false

  """for linking Profile to account not from current context"""
  accountId: Float

  """for linking Profile to an existing artist"""
  artistId: Float

  """profileStatusId"""
  profileStatusId: Int

  """profile status code"""
  profileStatusCode: String

  """minor date of birth"""
  minorDateOfBirth: DateTime

  """Date of birth"""
  dateOfBirth: DateTime

  """Organization Id"""
  organizationId: Float

  """Talent Email"""
  talentEmail: String

  """Send Email"""
  sendEmail: Boolean

  """Note"""
  note: String

  """Invitation token from Roster Invitation Request"""
  invitationToken: String

  """Profile Type code"""
  profileTypeCode: String

  """Profile access token granted by Rep"""
  profileAccessToken: String
}

"""Input type for update profile"""
input ProfileUpdateInput {
  """Profile id"""
  id: ID!

  """artist id"""
  artistId: ID

  """First Name"""
  firstName: String

  """Last Name"""
  lastName: String

  """Ethnic Appearance Ids"""
  ethnicAppearance: [OrderedItemInput!]

  """is Representation"""
  hasRepresentation: Boolean

  """Representation Ids"""
  seekingRepresentations: [ID!]

  """Stage Name"""
  stageName: String

  """gender"""
  gender: GenderInput

  """playableAge"""
  playableAgeRange: AgeRangeInput

  """playableAge at"""
  playableAge: Int

  """hairColorId"""
  hairColorId: ID

  """piercing note"""
  piercingNote: String

  """tattooId"""
  tattooId: ID

  """tattooNote"""
  tattooNote: String

  """hairStyleId"""
  hairStyleId: ID

  """eyeColorId"""
  eyeColorId: ID

  """multipleBirthId"""
  multipleBirthId: ID

  """documentIds"""
  documentIds: [ID!]

  """facialHairStyleIds"""
  facialHairStyleIds: [ID!]

  """piercingIds"""
  piercingIds: [ID!]

  """relationshipToMinorId"""
  relationshipToMinorId: ID

  """_relationship_note"""
  relationshipNote: String

  """sleeveId"""
  sleeveId: ID

  """neckId"""
  neckId: ID

  """coatId"""
  coatId: ID

  """profession"""
  profession: String

  """waistId"""
  waistId: ID

  """weightId"""
  weightId: ID

  """cupSizeId"""
  cupSizeId: ID

  """hatSizeId"""
  hatSizeId: ID

  """heightId"""
  heightId: ID

  """gloveSizeId"""
  gloveSizeId: ID

  """hipSizeId"""
  hipSizeId: ID

  """inseamId"""
  inseamId: ID

  """chestSizeId"""
  chestSizeId: ID

  """dressId"""
  dressId: ID

  """pregnancyDueDate"""
  pregnancyDue: DateTime

  """consentDate"""
  consentDate: DateTime

  """bustId"""
  bustId: ID

  """underbustId"""
  underbustId: ID

  """phone"""
  phone: String

  """otherExperiences"""
  otherExperiences: String

  """managerEmail"""
  managerEmail: String

  """talentEmail"""
  talentEmail: String

  """managerEmail"""
  defaultSubmissionNote: String

  """pursuing ids"""
  pursuingIds: [ID!]

  """tshirt size ids"""
  tshirtSizeIds: [Float!]

  """unique atribute ids"""
  uniqueAttributeIds: [ID!]

  """wardrobe ids"""
  wardrobeIds: [ID!]

  """willingness ids"""
  willingnessIds: [ID!]

  """rosterIds"""
  rosterIds: [ID!]

  """is minor"""
  minor: Boolean

  """profile status code"""
  profileStatusCode: String

  """blurb"""
  blurb: ID

  """Talent Unions"""
  talentUnions: [TalentUnionInput!]

  """Working Locations"""
  workingLocations: [OrderedItemInput!]

  """Skills and Skills Levels"""
  skills: [SkillInput!]

  """Profile Shoe Size"""
  shoeSize: [ProfileShoeSizeInput!]

  """Profile Size"""
  size: [ProfileSizeInput!]

  """Hide credit year"""
  hideCreditYear: Boolean

  """If Profile is overscaled"""
  isOverscaled: Boolean

  """Overscale Note"""
  overscaleNote: String

  """Pants IDs"""
  pantsIds: [ID!]

  """Minor date of birth"""
  minorDateOfBirth: DateTime

  """Date of birth"""
  dateOfBirth: DateTime

  """Profile access token granted by Rep"""
  profileAccessToken: String

  """"""
  ageInYears: Boolean

  """Work permit expiration date"""
  workPermitExp: DateTime
}

"""
Input type for ordered items like Working Location or Ethnic Appearance
"""
input OrderedItemInput {
  """"""
  id: ID!

  """"""
  order: Int!
}

"""Input type for Gender picker"""
input GenderInput {
  """
  Gender Appearance Ids. NOTE: Ok for now. TODO: Should simply be integer, not
  array. Function update_profile_gender_appearance has _gender_appearance_id integer[]
  """
  genderAppearanceIds: [ID!]

  """Gender Identity Ids"""
  genderIdentityIds: [ID!]

  """Gender Other Identity Note"""
  genderOtherIdentityNote: String
}

"""Input type for talent union"""
input TalentUnionInput {
  """"""
  unionId: ID!

  """"""
  unionMemberId: String
}

"""Input type for skill and skill level"""
input SkillInput {
  """"""
  id: ID!

  """"""
  levelId: Float

  """"""
  note: String

  """"""
  profileMediaId: Float
}

"""Input type for Profile Shoe Size"""
input ProfileShoeSizeInput {
  """Shoe Size Id"""
  shoeSizeId: Int

  """Shoe Modifier Id"""
  shoeModifierId: Int
}

"""Input type for Profile Size"""
input ProfileSizeInput {
  """Size Id"""
  sizeId: Int

  """Size Modifier Id"""
  sizeModifierId: Int
}

"""Input type to update profile skill"""
input ProfileSkillInput {
  """Profile Skill Id"""
  profileSkillId: BigInt!

  """Skill Level Id"""
  skillLevelId: ID

  """Note"""
  note: ID

  """Profile Media Id"""
  profileMediaId: ID
}

""""""
input AttachMediaToProfileInput {
  """Profile Id"""
  profileId: Int!

  """Media Id"""
  mediaId: Int!

  """Is media primary? (Primary photo, video reel or audio reel)"""
  isPrimary: Boolean

  """Media order of appearance"""
  order: Int

  """Media Moderation Status Code can be found in Tackle box"""
  mediaModerationStatusCode: String

  """"""
  paid: Boolean!

  """"""
  tag: String
}

"""Profile Media"""
input ProfileMediaInput {
  """Profile Media Id"""
  profileMediaId: ID!

  """Is media primary? (Primary photo, video reel or audio reel)"""
  isPrimary: Boolean

  """Is media hidden on profile?"""
  isHidden: Boolean

  """Media order of appearance"""
  order: Int
}

"""Input type for Profile Vehicle"""
input ProfileVehicleInput {
  """Vehicle type make id"""
  vehicleTypeMakeId: Float!

  """Vehicle year"""
  year: Float

  """Vehicle name"""
  name: String
}

"""Input type for Update Profile Vehicle"""
input UpdateProfileVehicleInput {
  """Vehicle type make id"""
  vehicleTypeMakeId: Float!

  """Vehicle year"""
  year: Float

  """Vehicle name"""
  name: String
}

"""Input type for Profile Pet"""
input ProfilePetInput {
  """Pet Id"""
  petId: Int!

  """Pet Size Id"""
  petSizeId: Int

  """Pet count"""
  count: Int!
}

""""""
input SendDirectMessageToTalentsInput {
  """"""
  roleId: Int

  """"""
  profileIds: [Int!]!

  """"""
  message: String!

  """"""
  subject: String

  """"""
  talentCanSeeSenderAddress: Boolean = false
}

""""""
input ContactSubTalentInput {
  """"""
  roleId: Int!

  """"""
  submissionStatusType: RepsSubmissionTypeEnum!

  """"""
  message: String!

  """"""
  subject: String

  """"""
  talentCanSeeSenderAddress: Boolean = false

  """"""
  includeProjectRole: Boolean = true
}

"""Enum of Represented Talents Submissions Types"""
enum RepsSubmissionTypeEnum {
  """"""
  SELECTED

  """"""
  SUBMITTED
}

"""Input type for Credit"""
input CreditInput {
  """Profile id"""
  profileId: Int!

  """Credit type id"""
  creditTypeId: Int!

  """Year"""
  year: Int

  """Role name"""
  role: String!

  """Credit title"""
  title: String!

  """The director of the Project"""
  director: String!

  """Highlighted"""
  highlighted: Boolean

  """Display order descending"""
  displayOrder: Int
}

"""Input type for Credit"""
input CreditUpdateInput {
  """Credit id"""
  id: Int!

  """Credit type id"""
  creditTypeId: Int

  """Year"""
  year: Int

  """Role name"""
  role: String

  """Credit title"""
  title: String

  """The director of the Project"""
  director: String

  """Highlighted"""
  highlighted: Boolean

  """Display Credit Type order descending"""
  displayOrder: Int
}

"""Input type for Credit Order"""
input CreditOrderInput {
  """Credit id"""
  id: Int!

  """Credit order"""
  creditOrder: Int!
}

"""Create profile conflict input"""
input CreateProfileConflictInput {
  """"""
  profileId: Int!

  """"""
  conflictId: Int!

  """"""
  note: String

  """"""
  expiration: DateTime
}

"""Update profile conflict input"""
input UpdateProfileConflictInput {
  """"""
  profileConflictId: Int!

  """"""
  conflictId: Int

  """"""
  note: String

  """"""
  expiration: DateTime
}

"""Input type for updating submission status"""
input UpdateSubmissionStatusInput {
  """Submission ID"""
  submissionId: BigInt!

  """New submissionstatus to set"""
  newSubmissionStatusCode: String!

  """ID of the creator"""
  createdBy: Int
}

"""Input type for updating submission"""
input SubmissionUpdateInput {
  """Submission ID"""
  submissionId: BigInt!

  """Submission status CODE"""
  statusCode: String

  """Profile ID"""
  profileId: Int

  """Tile Schema Value CODE"""
  tileSchemeValueCode: String

  """Profile working location id"""
  dmaId: Int

  """Note for submission"""
  note: String

  """Over scale note"""
  overscaleNote: String

  """Represents that profile is overscale or not"""
  isOverscale: Boolean

  """Request media(s)"""
  requestMedia: [SubmissionMediaInput!]

  """Submission profile media(s)"""
  submissionProfileMedia: [SubmissionMediaInput!]
}

"""Submission Media"""
input SubmissionMediaInput {
  """Media Id"""
  mediaId: ID!

  """Is media primary? (Primary photo, video reel or audio reel)"""
  isPrimary: Boolean

  """Is media hidden on profile?"""
  isHidden: Boolean

  """Media order of appearance"""
  order: Int

  """Customize media file name"""
  name: String
}

"""Input type for creating profile submission"""
input CreateProfileSubmissionInput {
  """Role Id"""
  roleId: Int!

  """Submission status code"""
  submissionStatusCode: String!

  """Array of profile ids"""
  profileIds: [Int!]!

  """Profile working location id"""
  dmaId: Int

  """Request media(s)"""
  requestMedia: [SubmissionMediaInput!]

  """Submission profile media(s)"""
  submissionProfileMedia: [SubmissionMediaInput!]

  """Note for submission"""
  note: String

  """Over scale note"""
  overscaleNote: String

  """Represents that profile is overscale or not"""
  isOverscale: Boolean

  """ID of the creator"""
  createdBy: Int
}

""""""
input CreateProfileSubmissionOrGetInput {
  """"""
  roleId: Int!

  """"""
  profileId: Int!
}

""""""
type SubmissionCreated {
  """"""
  created: Boolean!

  """"""
  submissions: [Submission!]!
}

"""Submission Quick Creation Input type"""
input SubmissionQuickAddInput {
  """"""
  firstName: String!

  """"""
  lastName: String!

  """"""
  email: String

  """"""
  phone: String

  """"""
  roleId: Int!

  """"""
  profileTypeCode: String!
}

""""""
enum SubmissionStatusCodeEnum {
  """"""
  BOOKED

  """"""
  DRAFT

  """"""
  ON_AVAIL

  """"""
  REVIEWED

  """"""
  SELECTED

  """"""
  TO_REVIEW

  """"""
  UNDER_CONSIDERATION

  """"""
  UNSUBMITTED
}

"""Input type for PC project approve"""
input ApprovePCProjectInput {
  """"""
  projectId: Int

  """Send notifications to talent (FFY)"""
  sendNotifications: Boolean = true
}

""""""
input ProjectNotificationToRepsInput {
  """"""
  projectId: Int!

  """"""
  message: String!
}

"""Add Note Input Type"""
input ProjectNoteInput {
  """Text of the note"""
  comment: String!

  """Project ID"""
  projectId: BigInt
}

"""Input type for Project"""
input CreateProjectInput {
  """"""
  projectParentId: ID

  """"""
  organizationId: Int

  """"""
  name: String!

  """"""
  internalName: String

  """"""
  projectTypeId: ID!

  """"""
  hidden: Boolean

  """"""
  tileSchemeId: ID

  """"""
  projectStatusId: ID

  """"""
  projectStatusCode: String

  """Contract Status Code"""
  contractStatusCode: String

  """"""
  submissionsDueBy: DateTime

  """"""
  requestBrief: Boolean

  """"""
  requestBriefInstruction: String

  """"""
  contactInfoPermissions: Boolean!

  """"""
  castingDirector: String

  """"""
  castingAssociate: String

  """"""
  castingAssistant: String

  """"""
  contactPhone: String

  """"""
  contactEmail: String

  """"""
  usage: String

  """"""
  additionalProvisions: String

  """"""
  synopsis: String

  """"""
  notes: String

  """"""
  network: String

  """"""
  studio: String

  """"""
  executiveProducer: String

  """"""
  producer: String

  """"""
  writer: String

  """"""
  director: String

  """"""
  productionCompany: String

  """"""
  adAgency: String

  """"""
  photographer: String

  """"""
  newSeriesName: String

  """"""
  projectUnionId: ID

  """"""
  unionContractId: String

  """"""
  conflictIds: [ID!]

  """"""
  conflictNote: String

  """"""
  rate: String

  """Project sides visibility CODE"""
  attachmentVisibilityCode: String

  """Uploaded media ids"""
  attachmentIds: [ID!]

  """Uploaded script Id"""
  scriptFileId: Int

  """"""
  workCity: String

  """"""
  auditionCity: String

  """"""
  auditionDates: [DateTime!]

  """"""
  workDates: [DateTime!]

  """"""
  projectOrganization: [ProjectOrganizationInput!]

  """"""
  hideProjectRate: Boolean

  """"""
  fieldRestrictionSettings: [ProjectFieldRestrictionInput!]

  """"""
  roleDefaults: RoleDefaultsInput
}

"""Add organization as project attribute"""
input ProjectOrganizationInput {
  """"""
  organizationId: ID!

  """"""
  accessTypeId: ID!
}

""""""
input ProjectFieldRestrictionInput {
  """"""
  fields: [ProjectFieldRestrictionFieldOption!]!

  """"""
  restrictedFor: ProjectFieldRestrictionOption!
}

"""Role Default Options"""
input RoleDefaultsInput {
  """"""
  locationDates: [RoleDateWithLocationInput!]

  """List of Publication Setting Input"""
  publicationSettings: [RolePublicationSettingInput!]

  """"""
  fieldRestrictions: [RoleFieldRestrictionInput!]

  """"""
  wardrobe: String

  """"""
  workRequirements: String
}

"""Role's Date with Location input type"""
input RoleDateWithLocationInput {
  """Name of City"""
  locationName: String

  """CODE of DateType enum"""
  dateTypeCode: String!

  """Start date"""
  startDate: DateTime

  """End date"""
  endDate: DateTime

  """ID of RoleDate object. Used for update existing date."""
  dateId: ID
}

"""Publication Role setting"""
input RolePublicationSettingInput {
  """Publication Setting CODE"""
  publicationSetting: String!

  """List of DMAs CODEs for talents"""
  dmas: [String!]

  """List of Representation Age Categories CODEs"""
  repAgeCategories: [String!]

  """List of Representation Categories CODEs"""
  repCategories: [String!]

  """List of Representation Type CODEs"""
  repTypes: [String!]

  """Representative List ID Selected"""
  representativeListId: Int

  """Representative IDs"""
  representativeIds: [Int!]
}

""""""
input RoleFieldRestrictionInput {
  """"""
  fields: [RoleFieldsRestrictionsFieldOption!]!

  """"""
  restrictedFor: ProjectFieldRestrictionOption!
}

"""Input type for Project update"""
input UpdateProjectInput {
  """"""
  projectId: ID!

  """"""
  projectTypeId: ID

  """"""
  projectParentId: ID

  """"""
  name: String

  """"""
  hidden: Boolean

  """"""
  tileSchemeId: ID

  """"""
  projectStatusId: ID

  """"""
  projectStatusCode: String

  """Contract Status Code"""
  contractStatusCode: String

  """"""
  submissionsDueBy: DateTime

  """"""
  requestBrief: Boolean

  """"""
  requestBriefInstruction: String

  """"""
  contactInfoPermissions: Boolean

  """"""
  castingDirector: String

  """"""
  castingAssociate: String

  """"""
  castingAssistant: String

  """"""
  contactPhone: String

  """"""
  contactEmail: String

  """"""
  usage: String

  """"""
  additionalProvisions: String

  """"""
  synopsis: String

  """"""
  notes: String

  """"""
  network: String

  """"""
  studio: String

  """"""
  executiveProducer: String

  """"""
  producer: String

  """"""
  writer: String

  """"""
  director: String

  """"""
  productionCompany: String

  """"""
  adAgency: String

  """"""
  photographer: String

  """"""
  projectUnionId: ID

  """"""
  unionContractId: String

  """"""
  internalName: String

  """"""
  conflictIds: [ID!]

  """"""
  conflictNote: String

  """Project sides visibility CODE"""
  attachmentVisibilityCode: String

  """Uploaded media ids"""
  attachmentIds: [ID!]

  """"""
  projectOrganization: [ProjectOrganizationInput!]

  """"""
  rate: String

  """"""
  newSeriesName: String

  """"""
  hideProjectRate: Boolean

  """IPC project release location codes"""
  releaseLocations: [String!]

  """"""
  fieldRestrictionSettings: [ProjectFieldRestrictionInput!]

  """"""
  roleDefaults: RoleDefaultsInput
}

"""Adds a Profile to Project."""
input AddProfileToProjectInput {
  """"""
  projectId: ID!

  """"""
  roleId: ID!

  """Field is DEPRECATED!!!"""
  submissionStatusId: ID

  """Submission Status CODE"""
  submissionStatusCode: String!

  """"""
  profileId: ID!

  """Field is DEPRECATED!!!"""
  tileSchemeValueId: ID

  """Tile Schema Value CODE"""
  tileSchemeValueCode: String!
}

"""Input type for PC Project"""
input CreatePCProjectInput {
  """"""
  projectParentId: ID

  """"""
  organizationId: Int

  """"""
  name: String!

  """"""
  internalName: String

  """"""
  projectTypeId: ID!

  """"""
  hidden: Boolean

  """"""
  tileSchemeId: ID

  """"""
  projectStatusId: ID

  """"""
  projectStatusCode: String

  """Contract Status Code"""
  contractStatusCode: String

  """"""
  submissionsDueBy: DateTime

  """"""
  requestBrief: Boolean

  """"""
  requestBriefInstruction: String

  """"""
  contactInfoPermissions: Boolean!

  """"""
  castingDirector: String

  """"""
  castingAssociate: String

  """"""
  castingAssistant: String

  """"""
  contactPhone: String

  """"""
  contactEmail: String

  """"""
  usage: String

  """"""
  additionalProvisions: String

  """"""
  synopsis: String

  """"""
  notes: String

  """"""
  network: String

  """"""
  studio: String

  """"""
  executiveProducer: String

  """"""
  producer: String

  """"""
  writer: String

  """"""
  director: String

  """"""
  productionCompany: String

  """"""
  adAgency: String

  """"""
  photographer: String

  """"""
  newSeriesName: String

  """"""
  projectUnionId: ID

  """"""
  unionContractId: String

  """"""
  conflictIds: [ID!]

  """"""
  conflictNote: String

  """"""
  rate: String

  """Project sides visibility CODE"""
  attachmentVisibilityCode: String

  """Uploaded media ids"""
  attachmentIds: [ID!]

  """Uploaded script Id"""
  scriptFileId: Int

  """"""
  workCity: String

  """"""
  auditionCity: String

  """"""
  auditionDates: [DateTime!]

  """"""
  workDates: [DateTime!]

  """"""
  projectOrganization: [ProjectOrganizationInput!]

  """"""
  hideProjectRate: Boolean

  """"""
  fieldRestrictionSettings: [ProjectFieldRestrictionInput!]

  """"""
  roleDefaults: RoleDefaultsInput

  """"""
  canTalentSubmitSelfTape: Boolean

  """PC project release location codes"""
  releaseLocations: [String!]

  """
  If null/undefined/false than PC project audition address not specified, if
  true than the isSpecificLocation should be not null/undefined
  """
  isAuditionInPerson: Boolean

  """
  Can not be null/undefined while isAuditionInPerson is true, if this field is
  true than API will use specificLocationInput, if false than API use
  determinedLocationInput
  """
  isSpecificLocation: Boolean

  """"""
  specificLocationInput: PCProjectSpecificAddressInput

  """"""
  determinedLocationInput: PCProjectDeterminedAddressInput
}

"""Specific location Address Input for creating IPC project"""
input PCProjectSpecificAddressInput {
  """Country CODE"""
  countryCode: String!

  """Address Line 1"""
  addressLine1: String!

  """Address Line 2"""
  addressLine2: String

  """City"""
  city: String!

  """State / Province Id"""
  stateId: Int!

  """ZIP/Postal Code"""
  postalCode: String!

  """Location notes"""
  locationNotes: String
}

"""Determined location Address Input for creating PC project"""
input PCProjectDeterminedAddressInput {
  """Country CODE"""
  countryCode: String!

  """City"""
  city: String!

  """Location notes"""
  locationNotes: String
}

"""Input type for PC Project update"""
input UpdatePCProjectInput {
  """"""
  projectId: ID!

  """"""
  projectTypeId: ID

  """"""
  projectParentId: ID

  """"""
  name: String

  """"""
  hidden: Boolean

  """"""
  tileSchemeId: ID

  """"""
  projectStatusId: ID

  """"""
  projectStatusCode: String

  """Contract Status Code"""
  contractStatusCode: String

  """"""
  submissionsDueBy: DateTime

  """"""
  requestBrief: Boolean

  """"""
  requestBriefInstruction: String

  """"""
  contactInfoPermissions: Boolean

  """"""
  castingDirector: String

  """"""
  castingAssociate: String

  """"""
  castingAssistant: String

  """"""
  contactPhone: String

  """"""
  contactEmail: String

  """"""
  usage: String

  """"""
  additionalProvisions: String

  """"""
  synopsis: String

  """"""
  notes: String

  """"""
  network: String

  """"""
  studio: String

  """"""
  executiveProducer: String

  """"""
  producer: String

  """"""
  writer: String

  """"""
  director: String

  """"""
  productionCompany: String

  """"""
  adAgency: String

  """"""
  photographer: String

  """"""
  projectUnionId: ID

  """"""
  unionContractId: String

  """"""
  internalName: String

  """"""
  conflictIds: [ID!]

  """"""
  conflictNote: String

  """Project sides visibility CODE"""
  attachmentVisibilityCode: String

  """Uploaded media ids"""
  attachmentIds: [ID!]

  """"""
  projectOrganization: [ProjectOrganizationInput!]

  """"""
  rate: String

  """"""
  newSeriesName: String

  """"""
  hideProjectRate: Boolean

  """IPC project release location codes"""
  releaseLocations: [String!]

  """"""
  fieldRestrictionSettings: [ProjectFieldRestrictionInput!]

  """"""
  roleDefaults: RoleDefaultsInput

  """"""
  canTalentSubmitSelfTape: Boolean

  """"""
  isAuditionInPerson: Boolean

  """"""
  isSpecificLocation: Boolean

  """"""
  specificLocationInput: UpdatePCProjectSpecificAddressInput

  """"""
  determinedLocationInput: UpdatePCProjectDeterminedAddressInput
}

"""Specific location Address Input for creating IPC project"""
input UpdatePCProjectSpecificAddressInput {
  """Country CODE"""
  countryCode: ID

  """Address Line 1"""
  addressLine1: ID

  """Address Line 2"""
  addressLine2: String

  """City"""
  city: ID

  """State / Province Id"""
  stateId: Int

  """ZIP/Postal Code"""
  postalCode: ID

  """Location notes"""
  locationNotes: String
}

"""Determined location Address Input for creating IPC project"""
input UpdatePCProjectDeterminedAddressInput {
  """Country CODE"""
  countryCode: ID

  """City"""
  city: ID

  """Location notes"""
  locationNotes: ID
}

"""Input type for Role creation"""
input RoleCreateInput {
  """"""
  roleParentId: ID

  """"""
  projectId: ID!

  """"""
  roleStatusCode: String!

  """"""
  name: String!

  """"""
  internalName: String

  """"""
  roleType: RoleTypeInput!

  """Role Union CODE"""
  roleUnionCode: String

  """"""
  rushCall: Boolean

  """Paid Type CODE"""
  paidTypeCode: String

  """Scale"""
  scale: Boolean

  """"""
  rateType: Boolean

  """CODE of Currency object"""
  currencyCode: String

  """Rate"""
  rate: Float

  """rate max"""
  rateMax: Float

  """CODE of RatePer object"""
  ratePerCode: String

  """"""
  rateNote: String

  """"""
  rateSummary: String

  """"""
  spot: String

  """"""
  roleGenderCodes: [String!]

  """"""
  ageMinMonths: Int

  """"""
  ageMaxMonths: Int

  """"""
  ageMinor: Int

  """"""
  description: String

  """"""
  sexualSituationCodes: [String!]

  """"""
  sexualSituationDescription: String

  """"""
  wardrobe: String

  """"""
  locationCode: String

  """"""
  workRequirement: String

  """"""
  submissionDueDate: DateTime

  """"""
  closeSubmissions: Boolean

  """"""
  submissionInstruction: String

  """"""
  requestMediaTypeCodes: [String!]

  """"""
  ageInYears: Boolean

  """"""
  requestMediaInstruction: String

  """List of Publication Setting Input"""
  rolePublicationSettings: [RolePublicationSettingInput!]

  """"""
  backgroundTalentIntended: Float

  """"""
  roleEthnicityNationality: String

  """"""
  roleSkills: [RoleSkillInput!]

  """"""
  sides: [RoleMediaInput!]

  """
  RoleMediaInput array of role media input for add/ update the media along with the relevant role
  """
  photos: [RoleMediaInput!]

  """List of Ethnic Appearances associated with role"""
  ethnicAppearances: [String!]

  """Roles Side Visibility"""
  roleSidesVisibilityCode: String

  """"""
  compensations: [RoleCompensationInput!]

  """"""
  locationDateInformations: [RoleDateWithLocationInput!]

  """Time Zone Code"""
  timeZoneCode: String

  """List of Representative List Ids"""
  representativesLists: [Float!]

  """"""
  fieldRestrictionSettings: [RoleFieldRestrictionInput!]
}

"""Input type for role type"""
input RoleTypeInput {
  """Role type CODE"""
  roleTypeCode: String!

  """Role target CODE"""
  roleTargetCode: String!

  """Project Type CODE"""
  projectTypeCode: String!
}

"""Input type for skill"""
input RoleSkillInput {
  """Skill CODE"""
  skillCode: String!
}

"""Input type for role media"""
input RoleMediaInput {
  """Media ID"""
  mediaId: Float!

  """Is this sides media"""
  isSides: Boolean!

  """Name"""
  name: String
}

"""Input type for role compensation"""
input RoleCompensationInput {
  """Role compensation type code"""
  compensationCode: String!

  """Role other compensation description"""
  otherCompensation: String
}

"""Input type for Role update"""
input RoleUpdateInput {
  """"""
  roleId: ID!

  """"""
  roleParentId: ID

  """"""
  projectId: ID

  """"""
  roleStatusCode: String

  """"""
  name: String

  """"""
  internalName: String

  """"""
  roleType: RoleTypeInput

  """"""
  roleUnionCode: String

  """"""
  rushCall: Boolean

  """"""
  paidTypeCode: String

  """"""
  scale: Boolean

  """"""
  rateType: Boolean

  """"""
  currencyCode: String

  """"""
  rate: Float

  """"""
  rateMax: Float

  """"""
  ratePerCode: String

  """"""
  rateNote: String

  """"""
  rateSummary: String

  """"""
  spot: String

  """"""
  ageMinMonths: Int

  """"""
  ageMaxMonths: Int

  """"""
  ageInYears: Boolean

  """"""
  description: String

  """"""
  sexualSituationCodes: [String!]

  """"""
  sexualSituationDescription: String

  """"""
  wardrobe: String

  """"""
  locationCode: String

  """"""
  workRequirement: String

  """"""
  submissionDueDate: DateTime

  """"""
  closeSubmissions: Boolean

  """"""
  submissionInstruction: String

  """"""
  requestMediaTypeCodes: [String!]

  """"""
  requestMediaInstruction: String

  """"""
  roleSkills: [RoleSkillInput!]

  """"""
  roleAccount: [ID!]

  """"""
  roleOrganization: [ID!]

  """"""
  roleGenderCodes: [String!]

  """"""
  rolePublicationSetting: RolePublicationSettingInput

  """List of Publication Setting Input"""
  rolePublicationSettings: [RolePublicationSettingInput!]

  """"""
  sides: [UpdateRoleMediaInput!]

  """
  UpdateRoleMediaInput array of role media input for add/ update the media along with the relevant role
  """
  photos: [UpdateRoleMediaInput!]

  """List of Ethnic Appearances associated with role"""
  ethnicAppearances: [String!]

  """"""
  compensations: [RoleCompensationInput!]

  """"""
  locationDateInformations: [RoleDateWithLocationInput!]

  """updates role date info in all roles within the project"""
  updateLocationDateInformationInProject: Boolean

  """Time Zone Code"""
  timeZoneCode: String

  """"""
  backgroundTalentIntended: Float

  """"""
  roleEthnicityNationality: String

  """Role Sides Visibility"""
  roleSidesVisibilityCode: String

  """"""
  fieldRestrictionSettings: [RoleFieldRestrictionInput!]
}

"""Input type for role media"""
input UpdateRoleMediaInput {
  """Role-Media relation ID"""
  roleMediaId: Float

  """Media id for creating new media record."""
  mediaId: Float!

  """Is this sides media"""
  isSides: Boolean!

  """Name"""
  name: String

  """Is this media marked for deletion"""
  isDeleted: Boolean!
}

""""""
input RoleUpdateWardrobeInput {
  """"""
  roleId: Int!

  """"""
  wardrobe: String!
}

"""Input type for Organization Feature"""
input OrganizationFeatureInput {
  """"""
  featureId: Int!

  """"""
  enabled: Boolean!
}

""""""
input OrganizationAccountInput {
  """"""
  organizationId: Int!

  """"""
  isAdmin: Boolean!

  """"""
  enabled: Boolean!
}

"""Input type for Organization"""
input CreateOrganizationInput {
  """"""
  organizationParentId: ID

  """"""
  name: String!

  """"""
  abbreviation: String

  """"""
  systemRoleId: ID

  """"""
  logoMediaId: ID

  """"""
  tileSchemeId: ID

  """"""
  creatorId: ID

  """Devisions could have multiple locations/dma's"""
  dmaIds: [ID!]

  """"""
  representationTypeId: ID

  """"""
  note: String

  """"""
  projectCastingDirector: String

  """"""
  projectCastingAssociate: String

  """"""
  projectCastingAssistant: String

  """"""
  scheduleAddressNote: String

  """"""
  websiteUrl: String

  """"""
  diversityDisclaimer: String

  """"""
  profileListId: ID

  """"""
  addresses: [AddressInput!]

  """"""
  contacts: [ContactInput!]

  """"""
  representationCategoryIds: [ID!]

  """"""
  representationAgeCategoryIds: [ID!]

  """"""
  phone: String

  """"""
  featureId: [ID!]

  """"""
  features: [OrganizationFeatureInput!]
}

"""Input type for contact"""
input ContactInput {
  """"""
  contactId: Int

  """Defines organization main contact"""
  mainContact: Boolean!

  """Name"""
  name: String

  """Email"""
  email: String

  """Phone"""
  phone: String!

  """"""
  enabled: Boolean
}

"""Input type for Organization update"""
input UpdateOrganizationInput {
  """"""
  organizationId: Int!

  """"""
  organizationParentId: Int

  """"""
  name: String

  """"""
  abbreviation: String

  """"""
  systemRoleId: Int

  """"""
  logoMediaId: Int

  """"""
  creatorId: Int

  """"""
  tileSchemeId: Int

  """"""
  representationTypeId: Int

  """"""
  note: String

  """"""
  projectCastingDirector: String

  """"""
  projectCastingAssociate: String

  """"""
  projectCastingAssistant: String

  """"""
  scheduleAddressNote: String

  """"""
  websiteUrl: String

  """"""
  diversityDisclaimer: String

  """"""
  profileListId: Int

  """"""
  countryId: Int

  """"""
  address: [AddressInput!]

  """"""
  contactList: [ContactInput!]

  """"""
  representationCategoryIds: [Int!]

  """"""
  representationAgeCategoryIds: [Int!]

  """"""
  featureIds: [Int!]

  """"""
  phone: String

  """Devisions could have multiple locations/dma's"""
  dmaIds: [Int!]

  """"""
  divisionFeaturesList: [FeatureInput!]

  """"""
  organizationStatusCode: String

  """"""
  deletedContactIds: [Int!]
}

""""""
input FeatureInput {
  """"""
  featureId: Float!

  """"""
  enabled: Boolean!
}

"""Schedule Report Input Arguments"""
input ScheduleReportCreateInput {
  """"""
  scheduleId: Int!

  """"""
  repContactInfo: Boolean

  """"""
  confirmationStatuses: Boolean

  """"""
  castingNotes: Boolean

  """"""
  submissionNotes: Boolean

  """"""
  includeTimeframes: Boolean

  """"""
  displayTalentPhotoOptions: [DisplayTalentPhotoOptionsEnum!]

  """"""
  displayTalentInfoOptions: [DisplayTalentInfoOptionsEnum!]
}

"""Schedule Size Sheeets Report Input Arguments"""
input ScheduleSizeSheetsReportCreateInput {
  """"""
  scheduleId: Int!

  """"""
  displayTalentPhotoOptions: [DisplayTalentPhotoOptionsEnum!]!

  """"""
  displayTalentInfoOptions: [DisplayTalentInfoOptionsEnum!]!

  """"""
  displayTalentPerPageOptions: DisplayTalentPerPageOptionsEnum!
}

"""Presentation Report Create Input Arguments"""
input PresentationReportCreateInput {
  """"""
  presentationFolderIds: [Int!]

  """"""
  displayOptions: PresentationReportDisplayOptionsModel

  """"""
  presentationId: Int!

  """"""
  clientNamesFilter: [String!]
}

"""Presentation Report Display Options Model"""
input PresentationReportDisplayOptionsModel {
  """"""
  displayTalentPhotoOptions: [DisplayTalentPhotoOptionsEnum!]

  """"""
  displayTalentInfoOptions: [DisplayTalentInfoOptionsEnum!]

  """"""
  displayTalentPerPageOptions: DisplayTalentPerPageOptionsEnum

  """"""
  displayOnlyTalentWithPicks: [DisplayOnlyTalentWithPicksEnum!]
}

"""Project Report Input Arguments"""
input ProjectReportCreateInput {
  """"""
  projectId: Int!
}

"""Project Report Input Arguments"""
input ProjectSubmissionCreateInput {
  """"""
  projectId: Int!

  """"""
  talentStatus: TalentStatusEnum!

  """"""
  roleIds: [Int!]!
}

"""Project Report Input Arguments"""
input ProjectReportCDCreateInput {
  """"""
  projectId: Int!

  """"""
  displayRoleOption: DisplayRoleOptionsEnum!

  """"""
  roleTypes: [String!]!
}

"""Talent Submission Report Input Arguments"""
input TalentSubmissionReportCreateInput {
  """"""
  profileId: Int!

  """"""
  dateFrom: DateTime!

  """"""
  dateTo: DateTime!
}

""""""
input AgencyCallListReportCreateInput {
  """"""
  scheduleId: Int!
}

""""""
input PresentationReportCreatePublicInput {
  """"""
  presentationKey: ID!

  """"""
  presentationFolderIds: [Int!]

  """"""
  publicUserName: String!
}

"""Update List Name Input"""
input UpdateListNameInput {
  """List Id"""
  listId: Float!

  """List Name"""
  listName: String!
}

"""Add Profile List Input"""
input AddProfileListInput {
  """List Name"""
  listName: String!

  """List of profile ids"""
  profileIds: [Int!]!
}

"""Add or Delete List Entities Input"""
input AddOrDeleteListEntitiesInput {
  """List Id"""
  listId: Float!

  """List entities ids"""
  entitiesIds: [BigInt!]!
}

"""Update Representative List Input"""
input UpdateRepresentativeListInput {
  """List Id"""
  listId: Float!

  """List of Representative List Ids"""
  representativeListIds: [BigInt!]!
}

"""Add Representative List Input"""
input AddRepresentativeListInput {
  """List Name"""
  listName: String!

  """List of repIds"""
  representativeIds: [Float!]!

  """"""
  publicationList: Boolean
}

"""Schedule Input"""
input CreateScheduleInput {
  """Schedule Name"""
  name: String!

  """Project Id"""
  projectId: ID!

  """Schedule Type Code"""
  scheduleTypeCode: String!

  """Schedule Date"""
  scheduleDate: String!

  """Address Id"""
  addressId: Int

  """Time Zone Id"""
  timeZoneId: ID

  """Time Zone CODE"""
  timeZoneCode: String

  """Note"""
  note: String

  """Is location hidden"""
  isLocationHidden: Boolean
}

"""Update Schedule Input"""
input UpdateScheduleInput {
  """Schedule Id"""
  scheduleId: Int!

  """Schedule Name"""
  name: String

  """Project Id"""
  projectId: Int

  """Schedule Type Code"""
  scheduleTypeCode: String

  """Schedule Date"""
  scheduleDate: String

  """Time Zone CODE"""
  timeZoneCode: String

  """Note"""
  note: String

  """Address Id"""
  addressId: Int

  """Is location hidden"""
  isLocationHidden: Boolean
}

"""Input object for assigning submissions to the timeframe"""
input AddSubmissionsToTimeframeInput {
  """Schedule Id"""
  scheduleId: Int

  """Timeframe Id"""
  timeframeId: Int

  """Calendar Slot Id"""
  slotId: Int

  """Slot's start time"""
  startTime: DateTime

  """List of submission Ids"""
  submissionIds: [BigInt!]!

  """List of role Ids"""
  roleIds: [Int!]

  """"""
  tileSchemeValueCodes: [String!]

  """"""
  searchInput: SubmissionSearchInput
}

"""Holds the Input for Deleting Submission from a Slot"""
input DeleteSubmissionFromSlotInput {
  """Submission Id"""
  submissionId: ID!

  """Slot Id"""
  slotId: ID!

  """Message for Cancellation"""
  cancellationMessage: String
}

""""""
input DeleteSubmissionsFromSlotInput {
  """"""
  slotSubmissions: [SlotSubmissionsInput!]!

  """Message for Cancellation"""
  cancellationMessage: String
}

""""""
input SlotSubmissionsInput {
  """Slot Id"""
  slotId: Float!

  """List of SubmissionIds."""
  submissionIds: [BigInt!]!
}

"""Cancel Schedule Input"""
input CancelScheduleInput {
  """Schedule cancellation message"""
  cancellationMessage: String

  """Schedule ID"""
  scheduleId: ID!
}

""""""
input MoveSubmissionsFromSlotsInput {
  """"""
  from: [SlotSubmissionsInput!]!

  """"""
  newSlotId: Int!
}

"""AddTimeframe input type"""
input AddTimeframeInput {
  """Schedule Id"""
  scheduleId: ID!

  """Timeframe Name"""
  name: String

  """Start time"""
  startTime: DateTime!

  """End time"""
  endTime: DateTime!

  """Slot Durations"""
  slotDurations: [Float!]

  """"""
  isBreak: Boolean

  """Input type for Role Talents"""
  roleTalents: [RoleTalent!]!
}

"""Input type for Role Talents"""
input RoleTalent {
  """Role Id"""
  roleId: ID!

  """No. of talents in each slot"""
  talentsInSlot: Float!

  """List of Selected Tile Schemes"""
  selectedTileSchemes: [Float!]

  """List of CODE of Selected Tile Schema"""
  selectedTileSchemaCodes: [String!]!

  """"""
  scheduleSelectInput: SchedulesSelectInput
}

"""DeleteTimeframe input type"""
input DeleteTimeframeInput {
  """Schedule Id"""
  scheduleId: Float!

  """Timeframe Id"""
  timeframeId: Float!

  """Timeframe cancelation note"""
  cancelationNote: String
}

""""""
input AddProfileToTimeSlotAddInInput {
  """"""
  stageName: String!

  """"""
  note: String

  """"""
  roleId: Int!

  """"""
  email: String!

  """"""
  slotId: Int!

  """"""
  scheduleId: Int!
}

""""""
input AddProfileToTimeSlotInput {
  """"""
  profileId: Int!

  """"""
  roleId: Int!

  """"""
  tileSchemeValue: TileSchemeValueEnum!

  """"""
  slotId: Int!

  """"""
  scheduleId: Int!
}

""""""
input ShiftTimeframeInput {
  """"""
  scheduleId: Int!

  """"""
  timeframeId: Int!

  """"""
  newStartTime: DateTime!
}

""""""
type ScheduleTimeframeShiftedResult {
  """"""
  timeframeIds: [Int!]!

  """"""
  submissionIds: [BigInt!]!
}

"""Create Chat Message Input"""
input ChatMessageCreateInput {
  """"""
  topicKey: String!

  """"""
  messageBody: String!
}

""""""
input CreateSavedSearchInput {
  """"""
  name: String!

  """"""
  isDefault: Boolean = false

  """"""
  searchArgs: CastingBillboardSearchInput!

  """"""
  notificationType: String = "NONE"
}

""""""
input UpdateSavedSearchInput {
  """"""
  id: ID!

  """"""
  name: String!

  """"""
  isDefault: Boolean = false

  """"""
  notificationType: String = "NONE"
}

""""""
enum MicroServices {
  """"""
  FAST_CAPTURE

  """"""
  BACKLOT
}

""""""
input AddBillingInfoInput {
  """"""
  tokenId: String!

  """"""
  primaryPaymentMethod: Boolean

  """"""
  backupPaymentMethod: Boolean

  """"""
  threeDSecureActionResultTokenId: String
}

""""""
input UpdateBillingInfoInput {
  """"""
  tokenId: String

  """"""
  billingInfoId: String!

  """"""
  primaryPaymentMethod: Boolean

  """"""
  backupPaymentMethod: Boolean

  """"""
  threeDSecureActionResultTokenId: String
}

""""""
input RemoveBillingInfoInput {
  """"""
  billingInfoId: String!
}

""""""
input SetSubscriptionPaymentMethodInput {
  """"""
  subscriptionId: Int!

  """"""
  billingInfoId: String!
}

""""""
enum RequestSendTo {
  """"""
  ONLY_NEW

  """"""
  NEW_AND_PENDING
}

""""""
input CancelRequestInput {
  """"""
  submissionIds: [Int!]

  """"""
  note: String
}

""""""
type RepWorksheetItem {
  """Request ID"""
  id: ID!

  """Request Type"""
  type: String!

  """Request Status"""
  status: RepRequestStatus!

  """"""
  updatedAt: DateTime

  """Date when request was created"""
  createdAt: DateTime!

  """Talent's response to a request"""
  talentResponse: RepWorksheetResponse

  """Response to a request"""
  response: RepWorksheetResponse

  """How many times a request has been forwarded to a talent"""
  forwardCount: Int

  """"""
  project: RepWorksheetProject @deprecated(reason: "Will be removed")

  """"""
  talent: RepWorksheetTalent @deprecated(reason: "Will be removed")

  """Timezone of a Schedule"""
  scheduleTimeZone: WfTimeZone @deprecated(reason: "Will be removed")

  """Date of Slot"""
  slotDate: DateTime @deprecated(reason: "Will be removed")
}

"""Talent info"""
type RepWorksheetTalent {
  """Talent's ID"""
  id: Int!

  """Talent's stage name"""
  stageName: String!

  """Talents phone"""
  phone: String

  """Talent's email"""
  email: String

  """Talent's cover"""
  coverUrl: String
}

""""""
input UpdateDueDateInput {
  """"""
  dueDate: DateTime = null

  """"""
  dueDateTimeZoneId: Int = null
}

""""""
union RequestUnion = MediaRequest | AskQuestionRequest

""""""
input MediaRequestInput {
  """"""
  name: String!

  """"""
  projectId: Int!

  """"""
  includeSides: Boolean!

  """"""
  maxNumberOfMediaFiles: Int!

  """"""
  isDraft: Boolean!

  """"""
  talentInstructions: String!

  """"""
  messageForRepresentatives: String = null

  """"""
  submissionIds: [Int!]!

  """"""
  roleIds: [Int!]

  """"""
  mediaTypes: [RequestMediaType!]!

  """"""
  tileSchemeValueCodes: [String!]

  """"""
  excludeSubmissionIds: [Int!]

  """"""
  dueDate: DateTime = null

  """"""
  dueDateTimeZoneId: Int = null

  """"""
  allowAdditionalMedia: Boolean
}

""""""
input MediaResponseInput {
  """"""
  id: ID!

  """"""
  response: MediaResponseStatus = null

  """"""
  photos: [Int!] = null

  """"""
  audios: [Int!] = null

  """"""
  videos: [Int!] = null

  """"""
  documents: [Int!] = null

  """"""
  note: String = null

  """"""
  mediaAlias: [MediaInput!]
}

""""""
enum MediaResponseStatus {
  """"""
  DECLINED

  """"""
  CONFIRMED

  """"""
  MEDIA_ADDED

  """"""
  ADDITIONAL_MEDIA_ADDED
}

"""Media Input Object"""
input MediaInput {
  """Media ID"""
  id: Int!

  """"""
  name: String!
}

"""Media files to change"""
input MediaChangeInput {
  """Media sub request ID to change"""
  id: ID!

  """List of the media IDs to change"""
  media: [Int!]!

  """"""
  note: String = null
}

""""""
input WfSubmissionSearchInput {
  """"""
  stageName: String

  """"""
  roleIds: [Int!]

  """"""
  tileSchemeValueCodes: [String!]
}

""""""
input AskQuestionRequestInput {
  """"""
  name: String!

  """"""
  question: String!

  """"""
  projectId: Int!

  """"""
  includeSides: Boolean!

  """"""
  isDraft: Boolean!

  """"""
  submissionIds: [Int!]!

  """"""
  roleIds: [Int!]

  """"""
  messageForRepresentatives: String = null

  """"""
  tileSchemeValueCodes: [String!]

  """"""
  excludeSubmissionIds: [Int!]

  """"""
  dueDate: DateTime = null

  """"""
  dueDateTimeZoneId: Int = null
}

""""""
input AskQuestionResponseInput {
  """"""
  id: ID!

  """"""
  message: String!
}

"""Create Roster Invitation input"""
input RosterInvitationRequestInput {
  """"""
  invitations: [RosterInvitationTalentInput!]!

  """"""
  note: String = null

  """"""
  includeOwnEmail: Boolean!
}

""""""
input RosterInvitationTalentInput {
  """"""
  name: String!

  """"""
  email: String!
}

"""'Roster Invitation Request' type"""
type RosterInvitationRequest {
  """Request's ID"""
  id: ID!

  """Note for the invited talent"""
  note: String

  """Should be email address of invitor included into the request or not"""
  includeOwnEmail: Boolean!

  """"""
  invitations: [RosterTalentInvitation!]!
}

"""
Schedule Invite Request input. The Schedule Invite is always sent from a
schedule and some fields are based on the schedule data.
"""
input ScheduleInviteRequestInput {
  """Schedule Id"""
  scheduleId: Int!

  """Schedule type: AUDITION / CALLBACK"""
  type: ScheduleRequestType!

  """Field for choosing which requests should trigger email notification."""
  scheduleReceiver: ScheduleReceiver!

  """
  A message to Representatives of the talents that are connected to submissions.
  """
  noteForRepresentative: String = null

  """A message to Talent of the talents that are connected to submissions."""
  noteForTalents: String = null

  """Filter Requests by role"""
  roleIds: [Int!]
}

""""""
enum ScheduleReceiver {
  """"""
  ALL

  """"""
  UPDATED

  """"""
  UPDATED_AND_UNCONFIRMED
}

"""
Schedule Invite Response input that can be sent by a Representative or Talent user.
"""
input ScheduleInviteResponseInput {
  """Schedule Invite Response id."""
  id: ID!

  """A note. Should be filled if declining or rescheduling the invite."""
  responseNote: String = null

  """
  A response: a user can confirm, decline or request rescheduling the Schedule.
  """
  response: ScheduleInviteResponseStatus!
}

"""Schedule Invite Response input that can be sent by a Casting Director"""
input ScheduleInviteSetStatusInput {
  """Schedule Invite Response id."""
  id: ID!

  """
  A response: a user can confirm, decline or request rescheduling the Schedule.
  """
  response: ScheduleInviteResponseStatus!
}

""""""
input SendVoiceOverMediaRequestInput {
  """"""
  roleId: Int!

  """"""
  talentInstructions: String!

  """"""
  submissionIds: [Int!]!
}

"""Account status object"""
type OnboardingStatus {
  """Primary ID"""
  id: ID!

  """code"""
  code: String!

  """name"""
  name: String!

  """Is this enabled?"""
  enabled: Boolean!

  """Sort order"""
  sortOrder: Int
}

"""Update or Create B21 Profile from BAU"""
input ProfileInput {
  """Profile ID"""
  profileId: Int!

  """Profile primary location ID"""
  primaryLocationId: Int!

  """Profile min playable age"""
  minPlayableAge: Int!

  """Profile max playable age"""
  maxPlayableAge: Int!

  """Profile primary appearance ID"""
  primaryAppearanceId: Int!

  """Artist ID"""
  artistId: Int
}

""""""
type ScheduleReminderContextNotificationContextAndRecipient {
  """"""
  to: String

  """"""
  toOrgId: Int

  """"""
  toAccountId: Int

  """"""
  toProfileId: Int

  """"""
  context: ScheduleReminderContext!
}

""""""
enum AccountOnboardingStatusEnum {
  """"""
  BAU_ACTIVE

  """"""
  BAU_UNCLAIMED

  """"""
  BAU_UNVERIFIED

  """"""
  BAU_VERIFIED
}

""""""
enum AccountStatusEnum {
  """"""
  ACTIVE

  """"""
  CLOSED

  """"""
  INCOMPLETE

  """"""
  JOINED

  """"""
  LOCKED

  """"""
  UNCLAIMED

  """"""
  UNVERIFIED
}

""""""
enum AddressTypeEnum {
  """"""
  AUDITION

  """"""
  CALLBACK

  """"""
  COMPANY
}

""""""
enum CompensationEnum {
  """"""
  COPY

  """"""
  CREDIT

  """"""
  MEAL

  """"""
  OTHER
}

""""""
enum ConflictEnum {
  """"""
  ACNE_PRODUCTS

  """"""
  ADHESIVE_BANDAGES

  """"""
  ADULT_INCONTINENCE

  """"""
  ADULT_NUTRITION

  """"""
  AERONAUTICAL_COMPANIES

  """"""
  AESTHETIC_FACIAL_INJECTABLES

  """"""
  AGRICULTURAL_CHEMICAL

  """"""
  AGRICULTURAL_FUNGICIDES

  """"""
  AGRICULTURAL_PRODUCTS

  """"""
  AGRICULTURE

  """"""
  AIR_CARE

  """"""
  AIR_FILTERS

  """"""
  AIR_FRESHENERS

  """"""
  AIRLINES

  """"""
  AIR_TRAVEL

  """"""
  ALCOHOL

  """"""
  ALCOHOL_TOBACCO

  """"""
  ALLERGY_MEDICATION

  """"""
  ANALPHYLAXIS

  """"""
  ANESTHESIA

  """"""
  ANTACIDS

  """"""
  ANTIAGING

  """"""
  ANTICOAGULANTS

  """"""
  ANTIDEPRESSENT

  """"""
  ANTIFUNGAL

  """"""
  ANTIPERSPERANT_DEODORANT

  """"""
  ANTIPLATELET

  """"""
  ANTIVIRALS

  """"""
  APPAREL

  """"""
  APPLIANCES

  """"""
  ARTHRITIS_MEDICATIONS

  """"""
  ASTHMA

  """"""
  ATHLETIC_BRANDS_SPORTSWEAR

  """"""
  ATRIAL_FIBRILLATION

  """"""
  AUDIO_EQUIPMENT

  """"""
  AUTO_INSURANCE

  """"""
  AUTOMOBILE_DEALERSHIPS

  """"""
  AUTOMOBILE_SERVICES

  """"""
  AUTOMOTIVE

  """"""
  AUTO_PARTS

  """"""
  AUTO_RACING

  """"""
  BABY_DIAPERS

  """"""
  BABY_FORMULA

  """"""
  BABY_PRODUCTS

  """"""
  BACKGROUND_CHECKING

  """"""
  BAKING_PRODUCTS

  """"""
  BANKING

  """"""
  BANKS

  """"""
  BATTERIES

  """"""
  BEAUTY

  """"""
  BEDS__MATTRESSES_AND_PILLOWS

  """"""
  BEERS

  """"""
  BIG_BOX_STORES

  """"""
  BLADES_AND_RAZORS

  """"""
  BODY_LOTION

  """"""
  BONE_DENSITY

  """"""
  BOTTLED_WATER

  """"""
  BOWLING

  """"""
  BREAD

  """"""
  BREAKFAST_CEREAL

  """"""
  BROKERAGE

  """"""
  BROKERAGE_SERVICES

  """"""
  CABLE_SERVICE_PROVIDERS

  """"""
  CALLING_CARDS

  """"""
  CAMERA_COMPANIES

  """"""
  CANCER

  """"""
  CANDY

  """"""
  CANNED_FOODS

  """"""
  CARBONATED_BEVERAGES

  """"""
  CARDIOVASCULAR

  """"""
  CASH_ADVANCE

  """"""
  CASINOS

  """"""
  CASUAL_APPAREL

  """"""
  CASUAL_DINING

  """"""
  CAT_FOOD

  """"""
  CHAIN_RESTAURANTS

  """"""
  CHECK_CASHING

  """"""
  CHEESE

  """"""
  CHEWING_GUMS

  """"""
  CHILDREN

  """"""
  CHILDRENS_HOSPITALS

  """"""
  CHIPS_SEMICONDUCTOR_MANUFACTURERS

  """"""
  CHIPS_SNACKS

  """"""
  CHOCOLATE

  """"""
  CHOLESTEROL

  """"""
  CHRISTMAS

  """"""
  CHROHNS_DISEASE

  """"""
  CHRONIC_BRONCHITIS

  """"""
  CIGARETTES

  """"""
  CLEANING_PRODUCTS

  """"""
  CLINICS

  """"""
  CLOTHING

  """"""
  COFFEE

  """"""
  COFFEE_MAKERS

  """"""
  COLA

  """"""
  COLD_FLU_MEDICATIONS

  """"""
  COLLEGES

  """"""
  COMPRESSION_WEAR

  """"""
  COMPUTER_HARDWARE

  """"""
  CONCRETE

  """"""
  CONDIMENTS

  """"""
  CONFECTIONARY

  """"""
  CONSUMER_ELECTRONICS

  """"""
  CONSUMER_TECHNOLOGY

  """"""
  CONTRACEPTION

  """"""
  CONVENVIENCE_STORES

  """"""
  COOKIES

  """"""
  COOKING_SPRAYS

  """"""
  CORPORATE_BANKING

  """"""
  COSMETIC_INJECTABLES

  """"""
  COSMETICS

  """"""
  COUGH_COLD_REMEDIES

  """"""
  COUGH_DROPS

  """"""
  CRACKERS

  """"""
  CRAFT_STORES

  """"""
  CREDIT_DEBIT_CARDS

  """"""
  CREDIT_UNIONS

  """"""
  CRUISE_LINES

  """"""
  CURLING_IRONS

  """"""
  DAIRY

  """"""
  DATING_SITES

  """"""
  DEALERSHIPS

  """"""
  DELI_MEATS

  """"""
  DEMENTIA_PRODUCTS

  """"""
  DENTAL

  """"""
  DENTAL_PRODUCTS

  """"""
  DENTAL_SERVICES

  """"""
  DEPARTMENT_STORES

  """"""
  DERMATOLOGY

  """"""
  DESSERTS

  """"""
  DETERGENT

  """"""
  DIABETES_MEDICATION

  """"""
  DIABETIC_PERIPHERAL_NEUROPATHY_DRUGS

  """"""
  DICED_TOMATOES

  """"""
  DIGITAL_TV_SERVICE_PROVIDERS

  """"""
  DINEIN_RESTAURANTS

  """"""
  DISCOUNT_RETAIL

  """"""
  DISCOUNT_SHOE_RETAILERS

  """"""
  DOG_FOOD

  """"""
  DOG_TREATS

  """"""
  DOLLAR_STORES

  """"""
  DRUG_STORES

  """"""
  ECIGARETTES

  """"""
  ECOMMERCE

  """"""
  EDUCATION

  """"""
  EDUCATIONAL_INSTITUTIONS

  """"""
  EGGS

  """"""
  ELDERLY_CARE

  """"""
  ELECTRICAL_COMPANY

  """"""
  ELECTRONICS

  """"""
  ELECTRONICS_RETAIL_STORES

  """"""
  EMAIL_MARKETING

  """"""
  EMPHYSEMA

  """"""
  ENERGY_COMPANIES

  """"""
  ENERGY_DRINKS

  """"""
  ENERGY_PROVIDERS

  """"""
  ENTERPRISE_SOFTWARE

  """"""
  ENTERTAINMENT

  """"""
  EPINEPHRINE

  """"""
  ERECTILE_DYSFUNCTION

  """"""
  EXERCISE_EQUIPMENT

  """"""
  EYECARE

  """"""
  EYEGLASSES

  """"""
  EYEWEAR

  """"""
  FABRIC

  """"""
  FABRIC_SOFTENERS

  """"""
  FANTASY_SPORTS

  """"""
  FASHION

  """"""
  FAST_FOOD_RESTAURANTS

  """"""
  FEMININE_HYGIENE_PRODUCTS

  """"""
  FIBER_SUPPLEMENTS

  """"""
  FIBROMYALGIA

  """"""
  FINANCIAL

  """"""
  FINANCIAL_INSTITUTIONS

  """"""
  FINANCIAL_SERVICE_GROUPS

  """"""
  FITNESS

  """"""
  FITNESS_CENTERS_GYMS

  """"""
  FITNESS_TRACKERS

  """"""
  FLOORING_COMPANIES

  """"""
  FOOD

  """"""
  FOOTWEAR

  """"""
  FRAGRANCE

  """"""
  FROZEN_DESSERT

  """"""
  FROZEN_FOODS

  """"""
  FROZEN_MEALS

  """"""
  FROZEN_PIZZA

  """"""
  FRUIT_DRIED

  """"""
  FRUIT_FRESH

  """"""
  FRUIT_JUICE

  """"""
  FURNITURE

  """"""
  GAMING

  """"""
  GAMING_RETAILERS

  """"""
  GAS_COMPANY

  """"""
  GAS_STATIONS

  """"""
  GASTREOENTEROLOGY

  """"""
  GLAUCOMA

  """"""
  GLUCOSE_MONITORS

  """"""
  GOLF_EQUIPMENT

  """"""
  GROCERY_STORES

  """"""
  HAIR

  """"""
  HAIR_CARE

  """"""
  HAIR_COLOR

  """"""
  HAIR_GROWTH

  """"""
  HAIR_PRODUCTS

  """"""
  HAIR_REGROWTH

  """"""
  HAIR_REMOVAL

  """"""
  HARDWARE

  """"""
  HEALTHCARE

  """"""
  HEALTH_INSURANCE

  """"""
  HEARTBURN

  """"""
  HEMATOLOGY

  """"""
  HIGH_SPEED_INTERNET_SERVICE_PROVIDERS

  """"""
  HIV_AIDS_PHAMACEUTICALS

  """"""
  HMOS

  """"""
  HOLIDAYS

  """"""
  HOME

  """"""
  HOME_COOLING

  """"""
  HOME_FURNISHINGS

  """"""
  HOME_HEATING

  """"""
  HOME_IMPROVEMENT

  """"""
  HOME_IMPROVEMENT_STORES

  """"""
  HOME_INSURANCE

  """"""
  HOME_SECURITY_AUTOMATION

  """"""
  HOSPITALS

  """"""
  HOT_BEVERAGES

  """"""
  HOTEL_HOSPITALITY

  """"""
  HOUSEHOLD

  """"""
  HOUSEHOLD_PAPER_GOODS

  """"""
  HVAC

  """"""
  HYGIENE

  """"""
  ICE_CREAM

  """"""
  INCONTIENCE

  """"""
  INSURANCE

  """"""
  INTERNET_SERVICE_PROVIDERS

  """"""
  INTIMATES

  """"""
  JEWELRY

  """"""
  KIDS_APPAREL

  """"""
  KITCHEN_APPLIANCES

  """"""
  LANGUAGE_INSTITUTES

  """"""
  LAPTOPS

  """"""
  LAWN_GARDEN

  """"""
  LAXATIVES

  """"""
  LEGACY_CONFLICT

  """"""
  LIFE_INSURANCE

  """"""
  LIGHTBULBS

  """"""
  LIQUOR

  """"""
  LIVER_DISEASE

  """"""
  LOCAL_CASINOS

  """"""
  LOCAL_FAST_FOOD

  """"""
  LOCAL_GAMING

  """"""
  LOCAL_HOSPITALS

  """"""
  MAKEUP

  """"""
  MALT_BEVERAGES

  """"""
  MAYONNAISE_BRANDS

  """"""
  MEAL_KIT_DELIVERY_SERVICES

  """"""
  MEAT

  """"""
  MEDICAL_CENTERS

  """"""
  MEDICAL_GRADE_SILICONE

  """"""
  MEDICARE

  """"""
  MEDICATION

  """"""
  MENOPAUSE

  """"""
  MILK_ALTERNATIVES

  """"""
  MINTS

  """"""
  MLB

  """"""
  MOBILE_CELL_PHONES

  """"""
  MOBILITY

  """"""
  MOISTURIZER

  """"""
  MOTOR_OIL

  """"""
  MOUTHWASH

  """"""
  MUTUAL_FUNDS

  """"""
  NBA

  """"""
  NEUROPATHY

  """"""
  NFL

  """"""
  NHL

  """"""
  NONALCOHOLIC_MALT_BEVERAGES

  """"""
  NUT_BUTTERS

  """"""
  OFFICE_SUPPLY_RETAILERS

  """"""
  ONCOLOGY

  """"""
  ONLINE_AUTO_SALES

  """"""
  ONLINE_TRAVEL_SITES

  """"""
  ORAL_CARE

  """"""
  ORAL_DENTURE_PRODUCTS

  """"""
  ORAL_HYGIENE

  """"""
  OVER_THE_COUNTER

  """"""
  PAIN_RELIEF

  """"""
  PAPER_TOWEL

  """"""
  PASTA

  """"""
  PERFUMES

  """"""
  PERSONAL_BANKING

  """"""
  PET_PRODUCTS

  """"""
  PETROLEUM

  """"""
  PETS

  """"""
  PET_STORES

  """"""
  PHARMACEUTICAL

  """"""
  PHARMACIES

  """"""
  PHONE_CHARGERS

  """"""
  PHONE_SERVICE_PROVIDERS

  """"""
  PLUMBING

  """"""
  PPOS

  """"""
  PREPACKAGED_LUNCH

  """"""
  PROFESSIONAL_SPORT_LEAGUES

  """"""
  PSORIASIS

  """"""
  QUICK_SERVICE_RESTAURANTS

  """"""
  QUICK_SERVICE_RESTAURANTS_BURGER

  """"""
  QUICK_SERVICE_RESTAURANTS_CHICKEN

  """"""
  QUICK_SERVICE_RESTAURANTS_PIZZA

  """"""
  QUICK_SERVICE_RESTAURANTS_SANDWICH

  """"""
  QUICK_SERVICE_RESTAURANTS_SEAFOOD

  """"""
  RECOMMERCE_RESALE

  """"""
  REGIONAL_CASINOS

  """"""
  REGIONAL_FAST_FOOD

  """"""
  REGIONAL_GAMING

  """"""
  REGIONAL_HOSPITALS

  """"""
  REGIONAL_LOTTERIES

  """"""
  RENTAL_CARS

  """"""
  RESORTS

  """"""
  RESTAURANTS

  """"""
  RETAIL

  """"""
  RETAIL_CHAINS

  """"""
  RETIREMENT_SERVICES

  """"""
  RHEUMATOID_ARTHRITIS

  """"""
  RHEUMATOLOGY

  """"""
  RX

  """"""
  SALTY_SNACKS

  """"""
  SATELLITE_TV_SERVICE_PROVIDERS

  """"""
  SAUCES

  """"""
  SAUSAGE

  """"""
  SEAFOOD

  """"""
  SHAMPOO_CONDITIONER

  """"""
  SHOES

  """"""
  SKIN_CARE

  """"""
  SMARTHOME

  """"""
  SNACK_BARS

  """"""
  SNACKS

  """"""
  SOCIAL_MEDIA

  """"""
  SOCIAL_SECURITY

  """"""
  SOFTWARE

  """"""
  SOUPS

  """"""
  SPIRITS

  """"""
  SPORTING_GOODS

  """"""
  SPORTS

  """"""
  SPORTS_DRINKS

  """"""
  SPORTS_MEDIA

  """"""
  SPORTSWEAR

  """"""
  STATE_LOTTERIES

  """"""
  STREAMING_TV_PROVIDERS

  """"""
  SUGAR_BASED

  """"""
  SUNSCREEN

  """"""
  SUPERMARKETS

  """"""
  SUPPLEMENTAL_HEALTH_INSURANCE

  """"""
  SUPPLEMENTS

  """"""
  SWEET_SNACKS

  """"""
  TABLET_READERS

  """"""
  TABLETS

  """"""
  TANNING_PRODUCTS

  """"""
  TAX_PREPARATION

  """"""
  TEA

  """"""
  TECHNOLOGY

  """"""
  TECHNOLOGY_COMPANIES

  """"""
  TEETH_WHITENING

  """"""
  TELECOMMUNICATIONS

  """"""
  TESTOSTERONE

  """"""
  THEME_PARKS

  """"""
  THRIFT_STORES

  """"""
  TIRE_COMPANIES

  """"""
  TIRE_RETAILERS

  """"""
  TNF_BLOCKERS

  """"""
  TOBACCO

  """"""
  TOILET_PAPER

  """"""
  TOOTHPASTES

  """"""
  TOURISM

  """"""
  TOYS

  """"""
  TRADE_SCHOOLS

  """"""
  TRAVEL

  """"""
  TRAVEL_PRODUCTS

  """"""
  TRAVEL_SERVICES

  """"""
  TRUCKS

  """"""
  UNDERWEAR

  """"""
  UNIVERSITIES

  """"""
  UTILITIES

  """"""
  VACATION

  """"""
  VACATION_DESTINATIONS

  """"""
  VACCINES

  """"""
  VACUUM_CLEANERS

  """"""
  VIDEO_GAMES

  """"""
  VISION

  """"""
  VITAMINS

  """"""
  WATCHES

  """"""
  WATER

  """"""
  WATER_FILTERS

  """"""
  WEBSITES

  """"""
  WEED_KILLERS

  """"""
  WEIGHT_LOSS_DIET

  """"""
  WINE

  """"""
  WIRELESS_PHONE_SERVICE_PROVIDERS

  """"""
  YOGURT
}

""""""
enum ContractStatusEnum {
  """"""
  APPROVED

  """"""
  PENDING
}

""""""
enum CountryEnum {
  """"""
  _00

  """"""
  AD

  """"""
  AE

  """"""
  AF

  """"""
  AG

  """"""
  AI

  """"""
  AL

  """"""
  AM

  """"""
  AN

  """"""
  AO

  """"""
  AQ

  """"""
  AR

  """"""
  AS

  """"""
  AT

  """"""
  AU

  """"""
  AW

  """"""
  AX

  """"""
  AZ

  """"""
  BA

  """"""
  BB

  """"""
  BD

  """"""
  BE

  """"""
  BF

  """"""
  BG

  """"""
  BH

  """"""
  BI

  """"""
  BJ

  """"""
  BL

  """"""
  BM

  """"""
  BN

  """"""
  BO

  """"""
  BQ

  """"""
  BR

  """"""
  BS

  """"""
  BT

  """"""
  BV

  """"""
  BW

  """"""
  BY

  """"""
  BZ

  """"""
  CA

  """"""
  CC

  """"""
  CD

  """"""
  CF

  """"""
  CG

  """"""
  CH

  """"""
  CI

  """"""
  CK

  """"""
  CL

  """"""
  CM

  """"""
  CN

  """"""
  CO

  """"""
  CR

  """"""
  CS

  """"""
  CU

  """"""
  CV

  """"""
  CW

  """"""
  CX

  """"""
  CY

  """"""
  CZ

  """"""
  DE

  """"""
  DJ

  """"""
  DK

  """"""
  DM

  """"""
  DO

  """"""
  DZ

  """"""
  EC

  """"""
  EE

  """"""
  EG

  """"""
  EH

  """"""
  ER

  """"""
  ES

  """"""
  ET

  """"""
  FI

  """"""
  FJ

  """"""
  FK

  """"""
  FM

  """"""
  FO

  """"""
  FR

  """"""
  GA

  """"""
  GB

  """"""
  GD

  """"""
  GE

  """"""
  GF

  """"""
  GG

  """"""
  GH

  """"""
  GI

  """"""
  GL

  """"""
  GM

  """"""
  GN

  """"""
  GP

  """"""
  GQ

  """"""
  GR

  """"""
  GS

  """"""
  GT

  """"""
  GU

  """"""
  GW

  """"""
  GY

  """"""
  HK

  """"""
  HM

  """"""
  HN

  """"""
  HR

  """"""
  HT

  """"""
  HU

  """"""
  ID

  """"""
  IE

  """"""
  IL

  """"""
  IM

  """"""
  IN

  """"""
  IO

  """"""
  IQ

  """"""
  IR

  """"""
  IS

  """"""
  IT

  """"""
  JE

  """"""
  JM

  """"""
  JO

  """"""
  JP

  """"""
  KE

  """"""
  KG

  """"""
  KH

  """"""
  KI

  """"""
  KM

  """"""
  KN

  """"""
  KP

  """"""
  KR

  """"""
  KW

  """"""
  KY

  """"""
  KZ

  """"""
  LA

  """"""
  LB

  """"""
  LC

  """"""
  LI

  """"""
  LK

  """"""
  LR

  """"""
  LS

  """"""
  LT

  """"""
  LU

  """"""
  LV

  """"""
  LY

  """"""
  MA

  """"""
  MC

  """"""
  MD

  """"""
  ME

  """"""
  MF

  """"""
  MG

  """"""
  MH

  """"""
  MK

  """"""
  ML

  """"""
  MM

  """"""
  MN

  """"""
  MO

  """"""
  MP

  """"""
  MQ

  """"""
  MR

  """"""
  MS

  """"""
  MT

  """"""
  MU

  """"""
  MV

  """"""
  MW

  """"""
  MX

  """"""
  MY

  """"""
  MZ

  """"""
  NA

  """"""
  NC

  """"""
  NE

  """"""
  NF

  """"""
  NG

  """"""
  NI

  """"""
  NL

  """"""
  NO

  """"""
  NP

  """"""
  NR

  """"""
  NU

  """"""
  NZ

  """"""
  OM

  """"""
  PA

  """"""
  PE

  """"""
  PF

  """"""
  PG

  """"""
  PH

  """"""
  PK

  """"""
  PL

  """"""
  PM

  """"""
  PN

  """"""
  PR

  """"""
  PS

  """"""
  PT

  """"""
  PW

  """"""
  PY

  """"""
  QA

  """"""
  RE

  """"""
  RO

  """"""
  RS

  """"""
  RU

  """"""
  RW

  """"""
  SA

  """"""
  SB

  """"""
  SC

  """"""
  SD

  """"""
  SE

  """"""
  SG

  """"""
  SH

  """"""
  SI

  """"""
  SJ

  """"""
  SK

  """"""
  SL

  """"""
  SM

  """"""
  SN

  """"""
  SO

  """"""
  SR

  """"""
  SS

  """"""
  ST

  """"""
  SV

  """"""
  SX

  """"""
  SY

  """"""
  SZ

  """"""
  TC

  """"""
  TD

  """"""
  TF

  """"""
  TG

  """"""
  TH

  """"""
  TJ

  """"""
  TK

  """"""
  TL

  """"""
  TM

  """"""
  TN

  """"""
  TO

  """"""
  TR

  """"""
  TT

  """"""
  TV

  """"""
  TW

  """"""
  TZ

  """"""
  UA

  """"""
  UG

  """"""
  UM

  """"""
  US

  """"""
  UY

  """"""
  UZ

  """"""
  VA

  """"""
  VC

  """"""
  VE

  """"""
  VG

  """"""
  VI

  """"""
  VN

  """"""
  VU

  """"""
  WF

  """"""
  WS

  """"""
  XK

  """"""
  YE

  """"""
  YT

  """"""
  ZA

  """"""
  ZM

  """"""
  ZW
}

""""""
enum CreditCardTypeEnum {
  """"""
  COMMERCIAL

  """"""
  CORPORATE

  """"""
  DANCE

  """"""
  DOCUMENTARY

  """"""
  EDUCATION

  """"""
  FILM

  """"""
  HOSTING

  """"""
  INDUSTRIAL

  """"""
  INFOMERCIAL

  """"""
  MODELING

  """"""
  MUSIC

  """"""
  MUSICAL_THEATER

  """"""
  MUSIC_VIDEO

  """"""
  ONLINE_CONTENT

  """"""
  OPERA

  """"""
  PRINT

  """"""
  RADIO

  """"""
  REALITY_TV

  """"""
  SHORT_FILM

  """"""
  STAND_UP_COMEDY

  """"""
  TELEVISION

  """"""
  THEATER

  """"""
  TRAINING

  """"""
  VIDEO_GAME

  """"""
  VOICE_OVER

  """"""
  WEB_SERIES
}

""""""
enum CurrencyEnum {
  """"""
  AED

  """"""
  AFN

  """"""
  ALL

  """"""
  AMD

  """"""
  ANG

  """"""
  AOA

  """"""
  ARS

  """"""
  AUD

  """"""
  AWG

  """"""
  AZN

  """"""
  BAM

  """"""
  BBD

  """"""
  BDT

  """"""
  BGN

  """"""
  BHD

  """"""
  BIF

  """"""
  BMD

  """"""
  BND

  """"""
  BOB

  """"""
  BRL

  """"""
  BSD

  """"""
  BTN

  """"""
  BWP

  """"""
  BYR

  """"""
  BZD

  """"""
  CAD

  """"""
  CDF

  """"""
  CHF

  """"""
  CLP

  """"""
  CNY

  """"""
  COP

  """"""
  CRC

  """"""
  CUC

  """"""
  CUP

  """"""
  CVE

  """"""
  CZK

  """"""
  DJF

  """"""
  DKK

  """"""
  DOP

  """"""
  DZD

  """"""
  EGP

  """"""
  ERN

  """"""
  ETB

  """"""
  EUR

  """"""
  FJD

  """"""
  FKP

  """"""
  GBP

  """"""
  GEL

  """"""
  GGP

  """"""
  GHS

  """"""
  GIP

  """"""
  GMD

  """"""
  GNF

  """"""
  GTQ

  """"""
  GYD

  """"""
  HKD

  """"""
  HNL

  """"""
  HRK

  """"""
  HTG

  """"""
  HUF

  """"""
  IDR

  """"""
  ILS

  """"""
  INR

  """"""
  IQD

  """"""
  IRR

  """"""
  ISK

  """"""
  JMD

  """"""
  JOD

  """"""
  JPY

  """"""
  KES

  """"""
  KGS

  """"""
  KHR

  """"""
  KMF

  """"""
  KPW

  """"""
  KRW

  """"""
  KWD

  """"""
  KYD

  """"""
  KZT

  """"""
  LAK

  """"""
  LBP

  """"""
  LKR

  """"""
  LRD

  """"""
  LSL

  """"""
  LYD

  """"""
  MAD

  """"""
  MDL

  """"""
  MGA

  """"""
  MKD

  """"""
  MMK

  """"""
  MNT

  """"""
  MOP

  """"""
  MRO

  """"""
  MUR

  """"""
  MVR

  """"""
  MWK

  """"""
  MXN

  """"""
  MYR

  """"""
  MZN

  """"""
  NAD

  """"""
  NGN

  """"""
  NIO

  """"""
  NOK

  """"""
  NPR

  """"""
  NZD

  """"""
  OMR

  """"""
  PAB

  """"""
  PEN

  """"""
  PGK

  """"""
  PHP

  """"""
  PKR

  """"""
  PLN

  """"""
  PYG

  """"""
  QAR

  """"""
  RON

  """"""
  RSD

  """"""
  RUB

  """"""
  RWF

  """"""
  SAR

  """"""
  SBD

  """"""
  SCR

  """"""
  SDG

  """"""
  SEK

  """"""
  SGD

  """"""
  SHP

  """"""
  SLL

  """"""
  SOS

  """"""
  SRD

  """"""
  SSP

  """"""
  STD

  """"""
  SYP

  """"""
  SZL

  """"""
  THB

  """"""
  TJS

  """"""
  TMT

  """"""
  TND

  """"""
  TOP

  """"""
  TRY

  """"""
  TTD

  """"""
  TWD

  """"""
  TZS

  """"""
  UAH

  """"""
  UGX

  """"""
  USD

  """"""
  UYU

  """"""
  UZS

  """"""
  VEF

  """"""
  VND

  """"""
  VUV

  """"""
  WST

  """"""
  XAF

  """"""
  XCD

  """"""
  XOF

  """"""
  XPF

  """"""
  YER

  """"""
  ZAR

  """"""
  ZMW
}

""""""
enum DmaEnum {
  """"""
  ADELAIDE

  """"""
  ALBUQUERQUE

  """"""
  ANCHORAGE

  """"""
  ATLANTA

  """"""
  AUCKLAND

  """"""
  AUSTIN

  """"""
  BALTIMORE

  """"""
  BARCELONA

  """"""
  BELFAST

  """"""
  BIRMINGHAM

  """"""
  BOGOTA

  """"""
  BOISE

  """"""
  BOSTON

  """"""
  BRISBANE

  """"""
  BUENOS_AIRES

  """"""
  BUFFALO

  """"""
  CALGARY

  """"""
  CANBERRA

  """"""
  CAPE_TOWN

  """"""
  CARACAS

  """"""
  CARDIFF

  """"""
  CHARLESTON

  """"""
  CHARLOTTE

  """"""
  CHICAGO

  """"""
  CHRISTCHURCH

  """"""
  CINCINNATI

  """"""
  CLEVELAND

  """"""
  DALLAS

  """"""
  DARWIN

  """"""
  DENVER

  """"""
  DETROIT

  """"""
  DUBLIN

  """"""
  EDINBURGH

  """"""
  GLASGOW

  """"""
  GUADALAJARA

  """"""
  HALIFAX

  """"""
  HOBART

  """"""
  HONOLULU

  """"""
  HOUSTON

  """"""
  INDIANAPOLIS

  """"""
  JACKSONVILLE

  """"""
  JOHANNESBURG

  """"""
  KANSAS_CITY_MO

  """"""
  LAS_VEGAS

  """"""
  LEEDS

  """"""
  LIMA

  """"""
  LIVERPOOL

  """"""
  LONDON

  """"""
  LOS_ANGELES

  """"""
  LOUISVILLE

  """"""
  MADRID

  """"""
  MANCHESTER

  """"""
  MELBOURNE

  """"""
  MEMPHIS

  """"""
  MEXICO_CITY

  """"""
  MIAMI

  """"""
  MILWAUKEE

  """"""
  MINNEAPOLIS

  """"""
  MONTERREY

  """"""
  MONTREAL

  """"""
  NASHVILLE

  """"""
  NEW_ORLEANS

  """"""
  NEW_YORK_CITY

  """"""
  OKLAHOMA_CITY

  """"""
  ORLANDO

  """"""
  OTTAWA

  """"""
  PARIS

  """"""
  PERTH

  """"""
  PHILADELPHIA

  """"""
  PHOENIX

  """"""
  PITTSBURGH

  """"""
  PORTLAND

  """"""
  PROVIDENCE

  """"""
  QUEBEC_CITY

  """"""
  REGINA

  """"""
  RENO

  """"""
  RICHMOND

  """"""
  RIO_DE_JANEIRO

  """"""
  SACRAMENTO

  """"""
  SALT_LAKE_CITY

  """"""
  SAN_ANTONIO

  """"""
  SAN_DIEGO

  """"""
  SAN_FRANCISCO

  """"""
  SAN_JUAN

  """"""
  SANTIAGO

  """"""
  SAO_PAULO

  """"""
  SEATTLE

  """"""
  SPOKANE

  """"""
  ST_LOUIS

  """"""
  SYDNEY

  """"""
  TAMPA

  """"""
  TORONTO

  """"""
  VANCOUVER

  """"""
  WASHINGTON_DC

  """"""
  WELLINGTON

  """"""
  WINNIPEG
}

""""""
enum FeatureEnum {
  """"""
  ALLOW_CASTING_TO_HIDE_ROLE_RATES

  """"""
  AUDIO_VIDEO_UPLOAD

  """"""
  AUTOMATICALLY_SHARE_CREATED_PROFILES_WITH_TALENT

  """"""
  CAN_ACCESS_TALENT_SCOUT

  """"""
  CASTING_BILLBOARD_SUBMISSION

  """"""
  CREATEPROFILE

  """"""
  CREATEPROJECT

  """"""
  GATE_MEDIA_REQUEST

  """"""
  GETPROFILE

  """"""
  GETPROJECT

  """"""
  LOCK_AGE_RANGE_FOR_TALENT

  """"""
  PHOTO_UPLOAD

  """"""
  SET_DEFAULTS_TO_BACKGROUND_FOR_EXTRAS_CASTING

  """"""
  SYSTEM_ACCESS

  """"""
  UPDATEPROFILE

  """"""
  UPDATEPROJECT
}

""""""
enum ItemEnum {
  """"""
  AUDIO_UPLOAD

  """"""
  PHOTO_UPLOAD

  """"""
  SUBMISSION

  """"""
  SUBMISSION_TRENDS

  """"""
  SYSTEM_ACCESS

  """"""
  VIDEO_UPLOAD
}

""""""
enum LanguageEnum {
  """"""
  ENGLISH

  """"""
  SPANISH
}

""""""
enum MediaModerationStatusEnum {
  """"""
  PENDING

  """"""
  READY

  """"""
  REQUIRED
}

""""""
enum MediaStorageEnum {
  """"""
  ARCHIVED

  """"""
  MIGRATION_CLEANED

  """"""
  MIGRATION_DATA

  """"""
  MIGRATION_FILE_MISSING

  """"""
  MIGRATION_MOVED

  """"""
  MIGRATION_PROCESSED

  """"""
  MIGRATION_READY

  """"""
  READY
}

""""""
enum MediaTypeCodeEnum {
  """"""
  AUDIO

  """"""
  DOCUMENT

  """"""
  PHOTO

  """"""
  VIDEO
}

""""""
enum NoteModifierEnum {
  """"""
  BAD_ARTIST

  """"""
  BAD_PROFILE

  """"""
  GOOD_ARTIST

  """"""
  GOOD_PROFILE

  """"""
  VERY_BAD_ARTIST

  """"""
  VERY_BAD_PROFILE

  """"""
  VERY_GOOD_ARTIST

  """"""
  VERY_GOOD_PROFILE
}

""""""
enum NotificationNatureEnum {
  """"""
  ALERT

  """"""
  EMAIL

  """"""
  PUSH

  """"""
  TEXT
}

""""""
enum NotificationTypeEnum {
  """"""
  MARKETING

  """"""
  PROJECT

  """"""
  PROJECT_APPROVAL

  """"""
  REQUEST
}

""""""
enum OrganizationStatusEnum {
  """"""
  ACTIVE

  """"""
  CLOSED

  """"""
  JOINED

  """"""
  UNCLAIMED
}

""""""
enum PaidTypeEnum {
  """"""
  NO

  """"""
  PAY_IS_DEFERRED

  """"""
  UNLISTED

  """"""
  YES
}

""""""
enum PetEnum {
  """"""
  BIRD

  """"""
  CAT

  """"""
  CHICKEN

  """"""
  DOG

  """"""
  DOG_AKITA

  """"""
  DOG_BEAGLE

  """"""
  DOG_BORDER_COLLIE

  """"""
  DOG_BOXER

  """"""
  DOG_BULLDOG

  """"""
  DOG_CAVALIER_KING_CHARLES_SPANIEL

  """"""
  DOG_CHIHUAHUA

  """"""
  DOG_DACHSHUND

  """"""
  DOG_ENGLISH_COCKER_SPANIEL

  """"""
  DOG_ENGLISH_SETTER

  """"""
  DOG_FRENCH_BULLDOG

  """"""
  DOG_GERMAN_SHEPHERD

  """"""
  DOG_GERMAN_SPITZ

  """"""
  DOG_GOLDEN_RETRIEVER

  """"""
  DOG_JACK_RUSSELL_TERRIER

  """"""
  DOG_LABRADOR

  """"""
  DOG_MALTESE

  """"""
  DOG_MINIATURE_SCHNAUZER

  """"""
  DOG_OTHER

  """"""
  DOG_PIT_BULL

  """"""
  DOG_POMERANIAN

  """"""
  DOG_POODLE

  """"""
  DOG_PUG

  """"""
  DOG_ROTTWEILER

  """"""
  DOG_SHIH_TZU

  """"""
  DOG_SIBERIAN_HUSKY

  """"""
  DOG_UNKNOWN_MIXED

  """"""
  DOG_YORKSHIRE_TERRIER

  """"""
  DUCK

  """"""
  FISH

  """"""
  GOAT

  """"""
  GOOSE

  """"""
  HAMSTER

  """"""
  HORSE

  """"""
  IGUANA

  """"""
  LIZARD

  """"""
  MOUSE

  """"""
  PIG

  """"""
  RABBIT

  """"""
  REPTILE

  """"""
  RODENTS

  """"""
  SNAKE

  """"""
  SPIDER

  """"""
  TURTLE
}

""""""
enum PlanTermEnum {
  """"""
  ANNUAL

  """"""
  MONTHLY

  """"""
  SEMIANNUAL
}

""""""
enum PresentationTypeEnum {
  """"""
  AUDITION_PRESENTATION

  """"""
  CASTING_PACKAGE

  """"""
  REP_PACKAGE

  """"""
  SEND_MEDIA_TO_CASTIT

  """"""
  SHARED_SELECTS
}

""""""
enum ProfileStatusEnum {
  """"""
  ACTIVE

  """"""
  ADD_IN

  """"""
  CREATE_PROFILE_STEP_1

  """"""
  CREATE_PROFILE_STEP_2

  """"""
  CREATE_PROFILE_STEP_3

  """"""
  CREATE_PROFILE_STEP_4

  """"""
  DELETED

  """"""
  INACTIVE

  """"""
  MIGRATED_INCOMPLETE

  """"""
  SELECT_MEMBERSHIP

  """"""
  UNCLAIMED

  """"""
  VERIFY_AGE
}

""""""
enum ProfileTypeEnum {
  """"""
  B21

  """"""
  FASTCAST
}

""""""
enum projectSidesVisibilityEnum {
  """"""
  REPRESENTATIVES_AND_CB

  """"""
  REPRESENTATIVES_ONLY
}

""""""
enum ProjectStatusEnum {
  """"""
  ACTIVE

  """"""
  ARCHIVED

  """"""
  ARCHIVE_IN_PROGRESS

  """"""
  DRAFT

  """"""
  EDIT_TO_ACTIVE_PROJECT

  """"""
  MODIFICATIONS_COMPLETE

  """"""
  MODIFICATIONS_REQUESTED

  """"""
  NEW_PROJECT_PENDING

  """"""
  NOT_YET_PUBLISHED

  """"""
  REJECTED

  """"""
  RESTORE_IN_PROGRESS

  """"""
  SUBMISSIONS_CLOSED
}

""""""
enum ProjectTypeEnum {
  """"""
  AUDIO

  """"""
  AUDIO_AUDIO_BOOKS

  """"""
  AUDIO_PODCAST

  """"""
  AUDIO_RADIO

  """"""
  AUDIO_VOICE_OVER

  """"""
  COMMERCIAL

  """"""
  COMMERCIAL_COMMERCIAL

  """"""
  COMMERCIAL_INDUSTRIAL

  """"""
  COMMERCIAL_INFOMERCIAL

  """"""
  COMMERCIAL_INTERNET_COMMERCIAL

  """"""
  COMMERCIAL_PSA

  """"""
  EPISODIC

  """"""
  EPISODIC_DAYTIME_DRAMA

  """"""
  EPISODIC_GAME_SHOW

  """"""
  EPISODIC_MINI_SERIES

  """"""
  EPISODIC_PILOT

  """"""
  EPISODIC_REALITY_TV

  """"""
  EPISODIC_RE_ENACTMENT

  """"""
  EPISODIC_STREAMING_SERIES

  """"""
  EPISODIC_TALK_SHOW

  """"""
  EPISODIC_TELEVISION_SERIES

  """"""
  EPISODIC_WEB_SERIES

  """"""
  FILM

  """"""
  FILM_DOCUMENTARY

  """"""
  FILM_FEATURE_FILM

  """"""
  FILM_SHORT_FILM

  """"""
  FILM_SHORT_VIDEO

  """"""
  FILM_TELEVISION_FILM

  """"""
  GAMING

  """"""
  GAMING_MOBILE_APP

  """"""
  GAMING_VIDEO_GAME

  """"""
  GAMING_VIRTUAL_REALITY

  """"""
  LIVE_EVENT

  """"""
  LIVE_EVENT_BRAND_AMBASSADOR

  """"""
  LIVE_EVENT_CABARET

  """"""
  LIVE_EVENT_COMEDY_SHOW

  """"""
  LIVE_EVENT_EDUCATIONAL_TRAINING

  """"""
  LIVE_EVENT_LIVE_EVENT

  """"""
  LIVE_EVENT_PROMOTIONAL_EVENT

  """"""
  LIVE_EVENT_RUNWAY_SHOW

  """"""
  LIVE_EVENT_VARIETY_SHOW

  """"""
  OTHER

  """"""
  OTHER_DIRECTORS_REEL

  """"""
  OTHER_MUSIC

  """"""
  OTHER_MUSIC_VIDEO

  """"""
  OTHER_OTHER

  """"""
  OTHER_SKETCH

  """"""
  PRINT

  """"""
  PRINT_PRINT

  """"""
  PRINT_STOCK_PHOTOGRAPHY

  """"""
  PROMO

  """"""
  STUDENT

  """"""
  STUDENT_STUDENT_FILM

  """"""
  STUDENT_STUDENT_PROJECT

  """"""
  THEATRE

  """"""
  THEATRE_THEATRE
}

""""""
enum PublicationSettingsEnum {
  """"""
  REPRESENTATIVES

  """"""
  TALENT_ON_THE_CASTING_BILLBOARD
}

""""""
enum PursuingEnum {
  """"""
  ACTING

  """"""
  DANCE

  """"""
  MODELING

  """"""
  STUNT

  """"""
  VOICE_OVER
}

""""""
enum RatePerEnum {
  """"""
  FLAT_FEE

  """"""
  PER_10_HOURS

  """"""
  PER_2_HOURS

  """"""
  PER_3_HOURS

  """"""
  PER_4_HOURS

  """"""
  PER_5_HOURS

  """"""
  PER_6_HOURS

  """"""
  PER_7_HOURS

  """"""
  PER_8_HOURS

  """"""
  PER_9_HOURS

  """"""
  PER_DAY

  """"""
  PER_HOUR

  """"""
  PER_WEEK

  """"""
  SESSION_FEE
}

""""""
enum RepresentationAgeCategoryEnum {
  """"""
  ADULT

  """"""
  ADULT_YOUTH

  """"""
  YOUTH
}

""""""
enum RepresentationCategoryEnum {
  """"""
  BACKGROUND

  """"""
  COMMERCIAL

  """"""
  DANCE

  """"""
  HOSTING

  """"""
  INFLUENCERS

  """"""
  PRINCIPAL

  """"""
  PRINT

  """"""
  REAL_PEOPLE

  """"""
  SPORTS_STUNTS

  """"""
  THEATRICAL

  """"""
  VOICE_OVER
}

""""""
enum RepresentationTypeEnum {
  """"""
  AGENCY

  """"""
  CASTING_COMPANY

  """"""
  DECISION_MAKER

  """"""
  MANAGEMENT

  """"""
  PROJECT_CREATOR

  """"""
  SHARED_PROJECT_USER
}

""""""
enum RequestStatusEnum {
  """"""
  ACTION_REQUIRED_NEW_REQUEST

  """"""
  ACTION_REQUIRED_RESCHEDULED

  """"""
  ACTION_REQUIRED_REVIEW_RESPONSE

  """"""
  ACTION_REQUIRED_SEE_UPDATES

  """"""
  CANCELED

  """"""
  COMPLETED

  """"""
  DRAFT

  """"""
  PENDING

  """"""
  PENDING_CHANGE_REQUESTED

  """"""
  PENDING_ON_HOLD
}

""""""
enum RequestTypeEnum {
  """"""
  ASK_A_QUESTION

  """"""
  AUDITION_INVITE

  """"""
  CALLBACK_INVITE

  """"""
  QUESTION_TO_REPRESENTATIVE

  """"""
  SUBMISSION_MEDIA_REQUEST

  """"""
  TALENT_ROSTER_INVITE
}

""""""
enum ResponseStatusEnum {
  """"""
  CANCELED

  """"""
  CLOSED

  """"""
  COMPLETED

  """"""
  OPEN

  """"""
  PENDING

  """"""
  SENT
}

""""""
enum RoleDateTypeEnum {
  """"""
  AUDITION_LOCATION

  """"""
  CALLBACK_AUDITION_LOCATION

  """"""
  FITTING_LOCATION

  """"""
  WORKING_LOCATION
}

""""""
enum RoleSidesVisibilityEnum {
  """"""
  DONT_SHOW

  """"""
  REPRESENTATIVES_AND_CB

  """"""
  REPRESENTATIVES_ONLY
}

""""""
enum RoleStatusEnum {
  """"""
  ACTIVE

  """"""
  ARCHIVED

  """"""
  ARCHIVE_IN_PROGRESS

  """"""
  EDIT_TO_ACTIVE_ROLE

  """"""
  INTERNAL

  """"""
  MODIFICATIONS_COMPLETE

  """"""
  MODIFICATIONS_REQUESTED

  """"""
  NEW_ROLE_PENDING

  """"""
  NOT_YET_PUBLISHED

  """"""
  REJECTED

  """"""
  REQUESTING_ADDITIONAL_SUBMISSIONS

  """"""
  RESTORE_IN_PROGRESS

  """"""
  SUBMISSIONS_CLOSED
}

""""""
enum RoleTargetEnum {
  """"""
  BACKGROUND

  """"""
  PRINCIPAL
}

""""""
enum RoleTypeEnum {
  """"""
  BACKGROUND

  """"""
  BRAND_AMBASSADOR

  """"""
  CO_STAR

  """"""
  ENSEMBLE

  """"""
  FEATURED_BACKGROUND

  """"""
  FRACTIONAL_SERIES_REGULAR

  """"""
  GUEST_STAR

  """"""
  HOST

  """"""
  LEAD

  """"""
  MODEL

  """"""
  ON_CAMERA

  """"""
  ONE_DAY_GUEST_STAR

  """"""
  OTHER

  """"""
  PHOTO_DOUBLE

  """"""
  PRECISION_DRIVER

  """"""
  PRINCIPAL

  """"""
  RECURRING

  """"""
  RECURRING_CO_STAR

  """"""
  RECURRING_GUEST_STAR

  """"""
  SERIES_REGULAR

  """"""
  SPECIAL_ABILITY

  """"""
  STAND_BY

  """"""
  STAND_IN

  """"""
  STUDIO_AUDIENCE

  """"""
  STUNT

  """"""
  SUPPORTING

  """"""
  SWING

  """"""
  UNDER_5

  """"""
  VOICE_OVER
}

""""""
enum RoleUnionEnum {
  """"""
  NON_UNION

  """"""
  UNION

  """"""
  UNION_NON_UNION
}

""""""
enum SexualSituationEnum {
  """"""
  NUDITY

  """"""
  SEXUAL_SITUATIONS
}

""""""
enum SizeGenderEnum {
  """"""
  BOY

  """"""
  FEMALE

  """"""
  GIRL

  """"""
  INFANT

  """"""
  KID

  """"""
  MALE

  """"""
  TODDLER
}

""""""
enum SkillEnum {
  """"""
  ACTING_STYLES

  """"""
  ACTING_STYLES_ARTAUD

  """"""
  ACTING_STYLES_BRECHT

  """"""
  ACTING_STYLES_GROTOWSKY

  """"""
  ACTING_STYLES_IMPROVISATION_GENERAL

  """"""
  ACTING_STYLES_IMPROVISATION_LONG_FORM

  """"""
  ACTING_STYLES_IMPROVISATION_MUSICAL

  """"""
  ACTING_STYLES_IMPROVISATION_SHORT_FORM

  """"""
  ACTING_STYLES_KABUKI

  """"""
  ACTING_STYLES_MEISNER

  """"""
  ACTING_STYLES_METHOD

  """"""
  ACTING_STYLES_SHAKESPEAREAN

  """"""
  ACTING_STYLES_SKETCH

  """"""
  ACTING_STYLES_STAND_UP

  """"""
  ACTING_STYLES_STANISLAVSKI

  """"""
  ACTING_STYLES_VIOLA_SPOLIN

  """"""
  BAND_STYLES

  """"""
  BAND_STYLES_A_CAPPELLA

  """"""
  BAND_STYLES_ALTERNATIVE

  """"""
  BAND_STYLES_ART_ROCK

  """"""
  BAND_STYLES_BACHATA

  """"""
  BAND_STYLES_BIG_BAND

  """"""
  BAND_STYLES_BLUEGRASS

  """"""
  BAND_STYLES_BLUES

  """"""
  BAND_STYLES_BOLERO

  """"""
  BAND_STYLES_BOY_GROUP

  """"""
  BAND_STYLES_CELTIC

  """"""
  BAND_STYLES_CLASSICAL_MUSIC

  """"""
  BAND_STYLES_CORRIDO

  """"""
  BAND_STYLES_COUNTRY

  """"""
  BAND_STYLES_CUMBIA

  """"""
  BAND_STYLES_ELECTRONIC

  """"""
  BAND_STYLES_FOLK

  """"""
  BAND_STYLES_FUNK

  """"""
  BAND_STYLES_GIRL_GROUP

  """"""
  BAND_STYLES_GOSPEL

  """"""
  BAND_STYLES_HARDCORE

  """"""
  BAND_STYLES_HIP_HOP

  """"""
  BAND_STYLES_INDIE

  """"""
  BAND_STYLES_INDUSTRIAL

  """"""
  BAND_STYLES_INSTRUMENTAL

  """"""
  BAND_STYLES_JAZZ

  """"""
  BAND_STYLES_LATIN

  """"""
  BAND_STYLES_MARIACHI

  """"""
  BAND_STYLES_METAL

  """"""
  BAND_STYLES_NEW_WAVE

  """"""
  BAND_STYLES_NORTENO

  """"""
  BAND_STYLES_ONE_MAN

  """"""
  BAND_STYLES_OTHER

  """"""
  BAND_STYLES_POP

  """"""
  BAND_STYLES_POP_ROCK

  """"""
  BAND_STYLES_PUNK

  """"""
  BAND_STYLES_RANCHERO

  """"""
  BAND_STYLES_RAP

  """"""
  BAND_STYLES_REGGAE

  """"""
  BAND_STYLES_REGGAETON

  """"""
  BAND_STYLES_RHYTHM_AND_BLUES

  """"""
  BAND_STYLES_ROCK

  """"""
  BAND_STYLES_ROCKABILLY

  """"""
  BAND_STYLES_ROCK_AND_ROLL

  """"""
  BAND_STYLES_SALSA

  """"""
  BAND_STYLES_SWING

  """"""
  BAND_STYLES_TRIBAL

  """"""
  BAND_STYLES_WEDDING

  """"""
  CIRCUS_SKILLS

  """"""
  CIRCUS_SKILLS_AERIAL_HOOP_LYRA

  """"""
  CIRCUS_SKILLS_AERIAL_ROPE

  """"""
  CIRCUS_SKILLS_AERIAL_SILKS

  """"""
  CIRCUS_SKILLS_AERIAL_WORK_GENERAL

  """"""
  CIRCUS_SKILLS_CLOWNING

  """"""
  CIRCUS_SKILLS_CONTORTION

  """"""
  CIRCUS_SKILLS_CYR_WHEEL

  """"""
  CIRCUS_SKILLS_FIRE_EATING

  """"""
  CIRCUS_SKILLS_FIRE_JUGGLING

  """"""
  CIRCUS_SKILLS_HIGH_WIRE

  """"""
  CIRCUS_SKILLS_JUGGLING

  """"""
  CIRCUS_SKILLS_RHONRAD_GERMAN_WHEEL

  """"""
  CIRCUS_SKILLS_STILT_WALKING

  """"""
  CIRCUS_SKILLS_TIGHT_ROPE

  """"""
  CIRCUS_SKILLS_TRAPEZE

  """"""
  CIRCUS_SKILLS_UNICYCLE

  """"""
  DANCE

  """"""
  DANCE_AFRICAN

  """"""
  DANCE_BALLET

  """"""
  DANCE_BALLROOM

  """"""
  DANCE_BELLY

  """"""
  DANCE_BOLLYWOOD_INDIAN

  """"""
  DANCE_BREAK

  """"""
  DANCE_CHA_CHA

  """"""
  DANCE_CLOG

  """"""
  DANCE_CLUB_FREESTYLE

  """"""
  DANCE_CONTEMPORARY

  """"""
  DANCE_CONTRA_DANCE

  """"""
  DANCE_DISCO

  """"""
  DANCE_EXOTIC_DANCING

  """"""
  DANCE_FLAMENCO

  """"""
  DANCE_FLEXING_BONE_BREAKING

  """"""
  DANCE_FOLK

  """"""
  DANCE_HIP_HOP

  """"""
  DANCE_HOUSE

  """"""
  DANCE_HULA

  """"""
  DANCE_IRISH

  """"""
  DANCE_JAZZ

  """"""
  DANCE_JIVE

  """"""
  DANCE_KRUMP

  """"""
  DANCE_LINE

  """"""
  DANCE_MODERN

  """"""
  DANCE_MODERN_JAZZ

  """"""
  DANCE_POINTE

  """"""
  DANCE_POLE

  """"""
  DANCE_POLKA

  """"""
  DANCE_POP_AND_LOCK

  """"""
  DANCE_REGGAE

  """"""
  DANCE_ROBOT

  """"""
  DANCE_ROCK_AND_ROLL

  """"""
  DANCE_RUMBA

  """"""
  DANCE_SALSA

  """"""
  DANCE_SAMBA

  """"""
  DANCE_SQUARE

  """"""
  DANCE_SWING

  """"""
  DANCE_TANGO

  """"""
  DANCE_TAP

  """"""
  DANCE_TUTTING

  """"""
  DANCE_VOGUE

  """"""
  DANCE_WAACKING

  """"""
  DANCE_WALTZ

  """"""
  DIALECTS

  """"""
  DIALECTS_AMERICAN

  """"""
  DIALECTS_AMERICAN_MID_ATLANTIC

  """"""
  DIALECTS_AMERICAN_MIDWESTERN_MINNESOTA_WISCONSIN

  """"""
  DIALECTS_AMERICAN_NEW_ENGLAND_BOSTON

  """"""
  DIALECTS_AMERICAN_NEW_JERSEY

  """"""
  DIALECTS_AMERICAN_NEW_YORK_BRONX_BROOKLYN_QUEENS

  """"""
  DIALECTS_AMERICAN_NEW_YORK_LONG_ISLAND

  """"""
  DIALECTS_AMERICAN_SOUTHERN

  """"""
  DIALECTS_ARMENIAN

  """"""
  DIALECTS_AUSTRALIAN

  """"""
  DIALECTS_AUSTRALIAN_ABORIGINAL

  """"""
  DIALECTS_BELGIAN

  """"""
  DIALECTS_BRITISH

  """"""
  DIALECTS_CAJUN

  """"""
  DIALECTS_CANADIAN

  """"""
  DIALECTS_CHINESE

  """"""
  DIALECTS_COCKNEY

  """"""
  DIALECTS_EAST_INDIAN

  """"""
  DIALECTS_FRENCH

  """"""
  DIALECTS_FRENCH_CANADIAN

  """"""
  DIALECTS_GERMAN

  """"""
  DIALECTS_IRISH

  """"""
  DIALECTS_ITALIAN

  """"""
  DIALECTS_JAMAICAN

  """"""
  DIALECTS_JAPANESE

  """"""
  DIALECTS_LATIN_AMERICA_ARGENTINE

  """"""
  DIALECTS_LATIN_AMERICA_BRAZILIAN

  """"""
  DIALECTS_LATIN_AMERICA_CHILEAN

  """"""
  DIALECTS_LATIN_AMERICA_COASTAL

  """"""
  DIALECTS_LATIN_AMERICA_COLOMBIAN

  """"""
  DIALECTS_LATIN_AMERICA_CUBAN

  """"""
  DIALECTS_LATIN_AMERICA_NORTHERN

  """"""
  DIALECTS_LIVERPOOL

  """"""
  DIALECTS_MEXICAN

  """"""
  DIALECTS_MIDDLE_EASTERN_ARABIC_PERSIAN

  """"""
  DIALECTS_PUERTO_RICAN

  """"""
  DIALECTS_RECEIVED_PRONUNCIATION

  """"""
  DIALECTS_RUSSIAN

  """"""
  DIALECTS_SCANDINAVIAN

  """"""
  DIALECTS_SCOTTISH

  """"""
  DIALECTS_SOUTH_AFRICAN

  """"""
  DIALECTS_SPANISH_AMERICAS

  """"""
  DIALECTS_SPANISH_CASTILIAN

  """"""
  DIALECTS_SPANISH_SPAIN

  """"""
  DIALECTS_SWISS_GERMAN

  """"""
  DIALECTS_TORRES_STRAIT_ISLANDER

  """"""
  DIALECTS_WELSH

  """"""
  DRIVING_BOATING_PILOTING

  """"""
  DRIVING_BOATING_PILOTING_4WD

  """"""
  DRIVING_BOATING_PILOTING_AIRPLANE

  """"""
  DRIVING_BOATING_PILOTING_ATV

  """"""
  DRIVING_BOATING_PILOTING_BOAT_GENERAL

  """"""
  DRIVING_BOATING_PILOTING_BOAT_JUMPING

  """"""
  DRIVING_BOATING_PILOTING_CANOEING

  """"""
  DRIVING_BOATING_PILOTING_DUNE_BUGGY

  """"""
  DRIVING_BOATING_PILOTING_HELICOPTER

  """"""
  DRIVING_BOATING_PILOTING_HOT_AIR_BALLOON

  """"""
  DRIVING_BOATING_PILOTING_JET_SKIING

  """"""
  DRIVING_BOATING_PILOTING_KAYAKING

  """"""
  DRIVING_BOATING_PILOTING_KITE_SURFING

  """"""
  DRIVING_BOATING_PILOTING_MOTORBOAT

  """"""
  DRIVING_BOATING_PILOTING_MOTORCYCLE_DIRT_BIKE

  """"""
  DRIVING_BOATING_PILOTING_MOTORCYCLE_ROAD

  """"""
  DRIVING_BOATING_PILOTING_PADDLE_BOARDING

  """"""
  DRIVING_BOATING_PILOTING_RAFTING

  """"""
  DRIVING_BOATING_PILOTING_ROAD_DRIVING

  """"""
  DRIVING_BOATING_PILOTING_ROWING

  """"""
  DRIVING_BOATING_PILOTING_SAILING

  """"""
  DRIVING_BOATING_PILOTING_SCULLING

  """"""
  DRIVING_BOATING_PILOTING_SEMI_TRUCK

  """"""
  DRIVING_BOATING_PILOTING_SNOWMOBILE

  """"""
  DRIVING_BOATING_PILOTING_STICK_SHIFT

  """"""
  DRIVING_BOATING_PILOTING_TRACK_DRIVING

  """"""
  HOBBIES

  """"""
  HOBBIES_ASTROLOGY

  """"""
  HOBBIES_CARPENTRY

  """"""
  HOBBIES_COOKING

  """"""
  HOBBIES_CROCHET

  """"""
  HOBBIES_GAMING_VIDEO_COMPUTER

  """"""
  HOBBIES_KNITTING

  """"""
  HOBBIES_POTTERY

  """"""
  INSTRUMENTS

  """"""
  INSTRUMENTS_ACCORDION

  """"""
  INSTRUMENTS_AUTOHARP

  """"""
  INSTRUMENTS_BAGPIPES

  """"""
  INSTRUMENTS_BANJO

  """"""
  INSTRUMENTS_BANJO_UKE

  """"""
  INSTRUMENTS_BASS_DOUBLE_UPRIGHT

  """"""
  INSTRUMENTS_BASS_GUITAR_ACOUSTIC

  """"""
  INSTRUMENTS_BASS_GUITAR_ELECTRIC

  """"""
  INSTRUMENTS_BASSOON

  """"""
  INSTRUMENTS_BONES

  """"""
  INSTRUMENTS_BONGOS

  """"""
  INSTRUMENTS_CAJON_DE_TAPEO

  """"""
  INSTRUMENTS_CELLO

  """"""
  INSTRUMENTS_CLARINET

  """"""
  INSTRUMENTS_CONGA

  """"""
  INSTRUMENTS_DRUMS

  """"""
  INSTRUMENTS_DULCIMER

  """"""
  INSTRUMENTS_FIDDLE

  """"""
  INSTRUMENTS_FINGER_CYMBALS

  """"""
  INSTRUMENTS_FLUTE

  """"""
  INSTRUMENTS_FRENCH_HORN

  """"""
  INSTRUMENTS_GUIRO

  """"""
  INSTRUMENTS_GUITAR_ACOUSTIC

  """"""
  INSTRUMENTS_GUITAR_ELECTRIC

  """"""
  INSTRUMENTS_GUITAR_GENERAL

  """"""
  INSTRUMENTS_GUITARRON

  """"""
  INSTRUMENTS_HARMONICA

  """"""
  INSTRUMENTS_HARP

  """"""
  INSTRUMENTS_JARANA

  """"""
  INSTRUMENTS_KAZOO

  """"""
  INSTRUMENTS_MANDOLIN

  """"""
  INSTRUMENTS_MARACAS

  """"""
  INSTRUMENTS_MARIMBA

  """"""
  INSTRUMENTS_MELODICA

  """"""
  INSTRUMENTS_OBOE

  """"""
  INSTRUMENTS_ORGAN

  """"""
  INSTRUMENTS_PERCUSSSION

  """"""
  INSTRUMENTS_PIANO_GENERAL

  """"""
  INSTRUMENTS_PIANO_JAZZ

  """"""
  INSTRUMENTS_PIANO_KEYBOARD

  """"""
  INSTRUMENTS_PICCOLO

  """"""
  INSTRUMENTS_RECORDER

  """"""
  INSTRUMENTS_SAXOPHONE

  """"""
  INSTRUMENTS_SYNTHESIZER

  """"""
  INSTRUMENTS_TAMBOURINE

  """"""
  INSTRUMENTS_TOLOLOCHE

  """"""
  INSTRUMENTS_TROMBONE

  """"""
  INSTRUMENTS_TRUMPET

  """"""
  INSTRUMENTS_TUBA

  """"""
  INSTRUMENTS_TUBA_SOUSAPHONE

  """"""
  INSTRUMENTS_UKULELE

  """"""
  INSTRUMENTS_VIOLA

  """"""
  INSTRUMENTS_VIOLIN

  """"""
  JOBS

  """"""
  JOBS_BARTENDER

  """"""
  JOBS_BULLFIGHTER

  """"""
  JOBS_CARD_DEALER

  """"""
  JOBS_CHEF

  """"""
  JOBS_COMEDIAN

  """"""
  JOBS_DISC_JOCKEY

  """"""
  JOBS_MASSAGE_THERAPIST

  """"""
  JOBS_MEDICAL

  """"""
  JOBS_STENOGRAPHER

  """"""
  JOBS_STRIPPER

  """"""
  LANGUAGES

  """"""
  LANGUAGES_ABKHAZIAN

  """"""
  LANGUAGES_AFRIKAANS

  """"""
  LANGUAGES_ALBANIAN

  """"""
  LANGUAGES_AMERICAN_SIGN_LANGUAGE

  """"""
  LANGUAGES_AMHARIC

  """"""
  LANGUAGES_ARABIC

  """"""
  LANGUAGES_ARMENIAN

  """"""
  LANGUAGES_AUSTRALIAN_ABORIGINAL

  """"""
  LANGUAGES_AUSTRALIAN_SIGN_LANGUAGE

  """"""
  LANGUAGES_AYMARA

  """"""
  LANGUAGES_AZERBAIJANI

  """"""
  LANGUAGES_BELARUSIAN

  """"""
  LANGUAGES_BENGALI

  """"""
  LANGUAGES_BERBER

  """"""
  LANGUAGES_BISAYA

  """"""
  LANGUAGES_BISLAMA

  """"""
  LANGUAGES_BOSNIAN

  """"""
  LANGUAGES_BRITISH_SIGN_LANGUAGE

  """"""
  LANGUAGES_BULGARIAN

  """"""
  LANGUAGES_BURMESE

  """"""
  LANGUAGES_CATALAN

  """"""
  LANGUAGES_CELTIC_GAELIC

  """"""
  LANGUAGES_CHICHEWA_NYANJA

  """"""
  LANGUAGES_CHINESE_CANTONESE

  """"""
  LANGUAGES_CHINESE_MANDARIN

  """"""
  LANGUAGES_CHINESE_OTHER_VARIETY

  """"""
  LANGUAGES_CROATIAN

  """"""
  LANGUAGES_CZECH

  """"""
  LANGUAGES_DANISH

  """"""
  LANGUAGES_DARI

  """"""
  LANGUAGES_DHIVEHI

  """"""
  LANGUAGES_DUTCH

  """"""
  LANGUAGES_DZONGKHA

  """"""
  LANGUAGES_ENGLISH

  """"""
  LANGUAGES_ESTONIAN

  """"""
  LANGUAGES_FIJIAN

  """"""
  LANGUAGES_FILIPINO

  """"""
  LANGUAGES_FINNISH

  """"""
  LANGUAGES_FLEMISH

  """"""
  LANGUAGES_FRENCH

  """"""
  LANGUAGES_FRENCH_CANADA

  """"""
  LANGUAGES_GEORGIAN

  """"""
  LANGUAGES_GERMAN

  """"""
  LANGUAGES_GREEK

  """"""
  LANGUAGES_GUARANI

  """"""
  LANGUAGES_GUJARATI

  """"""
  LANGUAGES_HAITIAN_CREOLE

  """"""
  LANGUAGES_HEBREW

  """"""
  LANGUAGES_HINDI

  """"""
  LANGUAGES_HIRI_MOTU

  """"""
  LANGUAGES_HUNGARIAN

  """"""
  LANGUAGES_ICELANDIC

  """"""
  LANGUAGES_ILOCANO

  """"""
  LANGUAGES_INDONESIAN

  """"""
  LANGUAGES_ITALIAN

  """"""
  LANGUAGES_JAPANESE

  """"""
  LANGUAGES_KAZAKH

  """"""
  LANGUAGES_KHMER

  """"""
  LANGUAGES_KINYARWANDA

  """"""
  LANGUAGES_KIRUNDI

  """"""
  LANGUAGES_KOREAN

  """"""
  LANGUAGES_KURDISH

  """"""
  LANGUAGES_KYRGYZ

  """"""
  LANGUAGES_LAO

  """"""
  LANGUAGES_LATIN

  """"""
  LANGUAGES_LATVIAN

  """"""
  LANGUAGES_LITHUANIAN

  """"""
  LANGUAGES_LUXEMBOURGISH

  """"""
  LANGUAGES_MACEDONIAN

  """"""
  LANGUAGES_MALAGASY

  """"""
  LANGUAGES_MALAY

  """"""
  LANGUAGES_MALTESE

  """"""
  LANGUAGES_MAORI

  """"""
  LANGUAGES_MOLDOVAN

  """"""
  LANGUAGES_MONGOLIAN

  """"""
  LANGUAGES_MONTENEGRIN

  """"""
  LANGUAGES_NDEBELE

  """"""
  LANGUAGES_NEPALI

  """"""
  LANGUAGES_NORTHERN_SOTHO

  """"""
  LANGUAGES_NORWEGIAN

  """"""
  LANGUAGES_OSSETIAN

  """"""
  LANGUAGES_PAPIAMENTO

  """"""
  LANGUAGES_PASHTO

  """"""
  LANGUAGES_PERSIAN_FARSI

  """"""
  LANGUAGES_POLISH

  """"""
  LANGUAGES_PORTUGUESE

  """"""
  LANGUAGES_QUECHUA

  """"""
  LANGUAGES_ROMANIAN

  """"""
  LANGUAGES_ROMANSH

  """"""
  LANGUAGES_RUSSIAN

  """"""
  LANGUAGES_SANGO

  """"""
  LANGUAGES_SERBIAN

  """"""
  LANGUAGES_SEYCHELLOIS_CREOLE

  """"""
  LANGUAGES_SHONA

  """"""
  LANGUAGES_SINHALA

  """"""
  LANGUAGES_SLOVAK

  """"""
  LANGUAGES_SLOVENE

  """"""
  LANGUAGES_SOMALI

  """"""
  LANGUAGES_SOTHO

  """"""
  LANGUAGES_SPANISH

  """"""
  LANGUAGES_SRANAN_TONGO

  """"""
  LANGUAGES_SWAHILI

  """"""
  LANGUAGES_SWATI

  """"""
  LANGUAGES_SWEDISH

  """"""
  LANGUAGES_TAGALOG

  """"""
  LANGUAGES_TAIWANESE

  """"""
  LANGUAGES_TAJIK

  """"""
  LANGUAGES_TAMIL

  """"""
  LANGUAGES_TETUM

  """"""
  LANGUAGES_THAI

  """"""
  LANGUAGES_TIGRE

  """"""
  LANGUAGES_TIGRINYA

  """"""
  LANGUAGES_TOISAN

  """"""
  LANGUAGES_TOK_PISIN

  """"""
  LANGUAGES_TORRES_STRAIT_ISLANDER

  """"""
  LANGUAGES_TSONGA

  """"""
  LANGUAGES_TSWANA

  """"""
  LANGUAGES_TURKISH

  """"""
  LANGUAGES_TURKMEN

  """"""
  LANGUAGES_UKRAINIAN

  """"""
  LANGUAGES_URDU

  """"""
  LANGUAGES_UZBEK

  """"""
  LANGUAGES_VENDA

  """"""
  LANGUAGES_VIETNAMESE

  """"""
  LANGUAGES_WELSH

  """"""
  LANGUAGES_XHOSA

  """"""
  LANGUAGES_YIDDISH

  """"""
  LANGUAGES_YORUBA

  """"""
  LANGUAGES_ZULU

  """"""
  MILITARY

  """"""
  MILITARY_AIR_FORCE

  """"""
  MILITARY_ARMY

  """"""
  MILITARY_COAST_GUARD

  """"""
  MILITARY_MARINES

  """"""
  MILITARY_NATIONAL_GUARD

  """"""
  MILITARY_NAVY

  """"""
  MILITARY_NAVY_SEALS

  """"""
  MILITARY_OTHER

  """"""
  MILITARY_R_O_T_C_

  """"""
  MILITARY_ROYAL_AIR_FORCE

  """"""
  MILITARY_SPECIAL_FORCES

  """"""
  PERFORMANCE_SKILLS

  """"""
  PERFORMANCE_SKILLS_BURLESQUE

  """"""
  PERFORMANCE_SKILLS_CARD_TRICKS

  """"""
  PERFORMANCE_SKILLS_DRAG

  """"""
  PERFORMANCE_SKILLS_EAR_PROMPTING

  """"""
  PERFORMANCE_SKILLS_HOSTING

  """"""
  PERFORMANCE_SKILLS_IMPERSONATIONS_IMPRESSIONS

  """"""
  PERFORMANCE_SKILLS_MAGIC

  """"""
  PERFORMANCE_SKILLS_MASCOT

  """"""
  PERFORMANCE_SKILLS_MIMING

  """"""
  PERFORMANCE_SKILLS_PUPPETRY

  """"""
  PERFORMANCE_SKILLS_STAND_IN

  """"""
  PERFORMANCE_SKILLS_TELEPROMPTER

  """"""
  PERFORMANCE_SKILLS_VENTRILOQUISM

  """"""
  PERFORMANCE_SKILLS_WHISTLING

  """"""
  PERFORMANCE_SKILLS_YO_YO

  """"""
  RODEO

  """"""
  RODEO_BARREL_RACING

  """"""
  RODEO_BULL_RIDING

  """"""
  RODEO_CALA

  """"""
  RODEO_CHARRO_COMPLETO

  """"""
  RODEO_COLAS

  """"""
  RODEO_ESCARAMUZA_CHARRA

  """"""
  RODEO_JINETEO_DE_YEGUA

  """"""
  RODEO_JINETEO_TORO

  """"""
  RODEO_MANGANAS_A_PIE_Y_A_CABALLO

  """"""
  RODEO_MUTTON_BUSTING

  """"""
  RODEO_PASO_DE_LA_MUERTE

  """"""
  RODEO_PIALES

  """"""
  RODEO_ROPING

  """"""
  RODEO_TERNA_EN_EL_RUEDO

  """"""
  SINGING_STYLES

  """"""
  SINGING_STYLES_A_CAPPELLA

  """"""
  SINGING_STYLES_BEATBOXING

  """"""
  SINGING_STYLES_BLUES

  """"""
  SINGING_STYLES_CELTIC

  """"""
  SINGING_STYLES_COUNTRY

  """"""
  SINGING_STYLES_FLAMENCO

  """"""
  SINGING_STYLES_FOLK

  """"""
  SINGING_STYLES_GOSPEL

  """"""
  SINGING_STYLES_GREGORIAN_CHANT

  """"""
  SINGING_STYLES_GUTTURAL_DEATH_GROWL

  """"""
  SINGING_STYLES_HEAVY_METAL_HARDCORE_PUNK

  """"""
  SINGING_STYLES_JAZZ

  """"""
  SINGING_STYLES_LOUNGE

  """"""
  SINGING_STYLES_MOTOWN

  """"""
  SINGING_STYLES_MUSICAL_THEATRE

  """"""
  SINGING_STYLES_OPERA

  """"""
  SINGING_STYLES_POP

  """"""
  SINGING_STYLES_RANCHERO

  """"""
  SINGING_STYLES_RAP

  """"""
  SINGING_STYLES_R_B

  """"""
  SINGING_STYLES_REGGAE

  """"""
  SINGING_STYLES_ROCK

  """"""
  SINGING_STYLES_SINGING_GENERAL

  """"""
  SINGING_STYLES_VIBRATO

  """"""
  SINGING_STYLES_YODELING

  """"""
  SPORTS

  """"""
  SPORTS_COMBAT_SPORTS

  """"""
  SPORTS_COMBAT_SPORTS_BOXING

  """"""
  SPORTS_COMBAT_SPORTS_FENCING

  """"""
  SPORTS_COMBAT_SPORTS_KICKBOXING

  """"""
  SPORTS_COMBAT_SPORTS_MMA

  """"""
  SPORTS_COMBAT_SPORTS_SUMO

  """"""
  SPORTS_COMBAT_SPORTS_WRESTLING_GENERAL

  """"""
  SPORTS_COMBAT_SPORTS_WRESTLING_GRECO_ROMAN

  """"""
  SPORTS_COMBAT_SPORTS_WRESTLING_LUCHA_LIBRE

  """"""
  SPORTS_CYCLING

  """"""
  SPORTS_CYCLING_BMX

  """"""
  SPORTS_CYCLING_CYCLING_GENERAL

  """"""
  SPORTS_CYCLING_DOWNHILL_BIKING

  """"""
  SPORTS_CYCLING_FLATLAND_FREESTYLE

  """"""
  SPORTS_CYCLING_HALF_PIPE_VERT_WALL

  """"""
  SPORTS_CYCLING_JUMPING

  """"""
  SPORTS_CYCLING_MOUNTAIN_BIKING

  """"""
  SPORTS_CYCLING_RECUMBENT

  """"""
  SPORTS_CYCLING_ROAD_BIKING

  """"""
  SPORTS_CYCLING_TRIALS_RIDING

  """"""
  SPORTS_EQUESTRIAN_SPORTS

  """"""
  SPORTS_EQUESTRIAN_SPORTS_BARE_BACK

  """"""
  SPORTS_EQUESTRIAN_SPORTS_DRESSAGE

  """"""
  SPORTS_EQUESTRIAN_SPORTS_ENDURANCE_RIDING

  """"""
  SPORTS_EQUESTRIAN_SPORTS_ENGLISH_RIDING

  """"""
  SPORTS_EQUESTRIAN_SPORTS_HARNESS_RACING

  """"""
  SPORTS_EQUESTRIAN_SPORTS_HORSEBACK_RIDING_GENERAL

  """"""
  SPORTS_EQUESTRIAN_SPORTS_HORSE_JUMPING

  """"""
  SPORTS_EQUESTRIAN_SPORTS_POLO

  """"""
  SPORTS_EQUESTRIAN_SPORTS_RODEO

  """"""
  SPORTS_EQUESTRIAN_SPORTS_ROPE

  """"""
  SPORTS_EQUESTRIAN_SPORTS_SIDE_SADDLE

  """"""
  SPORTS_EQUESTRIAN_SPORTS_WESTERN

  """"""
  SPORTS_EXTREME_SPORTS

  """"""
  SPORTS_EXTREME_SPORTS_BASE_JUMPING

  """"""
  SPORTS_EXTREME_SPORTS_BUNGEE_JUMPING

  """"""
  SPORTS_EXTREME_SPORTS_CANOPYING

  """"""
  SPORTS_EXTREME_SPORTS_FREEDIVING

  """"""
  SPORTS_EXTREME_SPORTS_GLIDING

  """"""
  SPORTS_EXTREME_SPORTS_HANG_GLIDING

  """"""
  SPORTS_EXTREME_SPORTS_INLINE_SKATING_GENERAL

  """"""
  SPORTS_EXTREME_SPORTS_INLINE_SKATING_STUNTS_COMPETITIVE

  """"""
  SPORTS_EXTREME_SPORTS_MOUNTAIN_BOARDING

  """"""
  SPORTS_EXTREME_SPORTS_PARKOUR

  """"""
  SPORTS_EXTREME_SPORTS_SKATEBOARDING_GENERAL

  """"""
  SPORTS_EXTREME_SPORTS_SKATEBOARDING_HALF_PIPE_VERT

  """"""
  SPORTS_EXTREME_SPORTS_SKATEBOARDING_SLALOM

  """"""
  SPORTS_EXTREME_SPORTS_SKATEBOARDING_STREET

  """"""
  SPORTS_EXTREME_SPORTS_SKATEBOARDING_STUNTS_COMPETITIVE

  """"""
  SPORTS_EXTREME_SPORTS_SKY_DIVING

  """"""
  SPORTS_EXTREME_SPORTS_SKY_SURFING

  """"""
  SPORTS_EXTREME_SPORTS_SUPERCROSS

  """"""
  SPORTS_EXTREME_SPORTS_WING_SUIT

  """"""
  SPORTS_GYMNASTIC_SPORTS

  """"""
  SPORTS_GYMNASTIC_SPORTS_ACROBATIC_GYMNASTICS

  """"""
  SPORTS_GYMNASTIC_SPORTS_BALANCE_BEAM

  """"""
  SPORTS_GYMNASTIC_SPORTS_BATON_TWIRLING

  """"""
  SPORTS_GYMNASTIC_SPORTS_CHEERLEADING

  """"""
  SPORTS_GYMNASTIC_SPORTS_HIGH_BAR

  """"""
  SPORTS_GYMNASTIC_SPORTS_PARALLEL_BARS

  """"""
  SPORTS_GYMNASTIC_SPORTS_POMMEL_HORSE

  """"""
  SPORTS_GYMNASTIC_SPORTS_RHYTHMIC_GYMNASTICS

  """"""
  SPORTS_GYMNASTIC_SPORTS_STILL_RINGS

  """"""
  SPORTS_GYMNASTIC_SPORTS_TRAMPOLINE

  """"""
  SPORTS_GYMNASTIC_SPORTS_TUMBLING

  """"""
  SPORTS_GYMNASTIC_SPORTS_UNEVEN_BARS

  """"""
  SPORTS_GYMNASTIC_SPORTS_VAULT

  """"""
  SPORTS_GYM_SPORTS

  """"""
  SPORTS_GYM_SPORTS_AEROBICS

  """"""
  SPORTS_GYM_SPORTS_BODY_BUILDING

  """"""
  SPORTS_GYM_SPORTS_CROSSFIT_TRAINING

  """"""
  SPORTS_GYM_SPORTS_JOGGING

  """"""
  SPORTS_GYM_SPORTS_PILATES

  """"""
  SPORTS_GYM_SPORTS_ROPE_CLIMBING

  """"""
  SPORTS_GYM_SPORTS_SPINNING

  """"""
  SPORTS_GYM_SPORTS_TAE_BO

  """"""
  SPORTS_GYM_SPORTS_WEIGHT_LIFTING

  """"""
  SPORTS_GYM_SPORTS_YOGA

  """"""
  SPORTS_GYM_SPORTS_ZUMBA

  """"""
  SPORTS_MARTIAL_ARTS

  """"""
  SPORTS_MARTIAL_ARTS_AIKIDO

  """"""
  SPORTS_MARTIAL_ARTS_BRAZILIAN_JIU_JITSU

  """"""
  SPORTS_MARTIAL_ARTS_CAPOEIRA

  """"""
  SPORTS_MARTIAL_ARTS_ESCRIMA

  """"""
  SPORTS_MARTIAL_ARTS_GRAPPLING

  """"""
  SPORTS_MARTIAL_ARTS_HAND_TO_HAND

  """"""
  SPORTS_MARTIAL_ARTS_HAPKIDO

  """"""
  SPORTS_MARTIAL_ARTS_JEET_KUNE_DO

  """"""
  SPORTS_MARTIAL_ARTS_JIU_JITSU

  """"""
  SPORTS_MARTIAL_ARTS_JUDO

  """"""
  SPORTS_MARTIAL_ARTS_KARATE

  """"""
  SPORTS_MARTIAL_ARTS_KENDO

  """"""
  SPORTS_MARTIAL_ARTS_KRAV_MAGA

  """"""
  SPORTS_MARTIAL_ARTS_KUNG_FU

  """"""
  SPORTS_MARTIAL_ARTS_MUAY_LAO

  """"""
  SPORTS_MARTIAL_ARTS_MUAY_THAI

  """"""
  SPORTS_MARTIAL_ARTS_SAMBO

  """"""
  SPORTS_MARTIAL_ARTS_SANSHOU

  """"""
  SPORTS_MARTIAL_ARTS_TAE_KWON_DO

  """"""
  SPORTS_MARTIAL_ARTS_TAI_CHI

  """"""
  SPORTS_MARTIAL_ARTS_VALE_TUDO

  """"""
  SPORTS_OUTDOOR_SPORTS

  """"""
  SPORTS_OUTDOOR_SPORTS_ARCHERY

  """"""
  SPORTS_OUTDOOR_SPORTS_CLAY_SHOOTING

  """"""
  SPORTS_OUTDOOR_SPORTS_FISHING

  """"""
  SPORTS_OUTDOOR_SPORTS_FLY_FISHING

  """"""
  SPORTS_OUTDOOR_SPORTS_GOLFING

  """"""
  SPORTS_OUTDOOR_SPORTS_HIKING

  """"""
  SPORTS_OUTDOOR_SPORTS_HUNTING

  """"""
  SPORTS_OUTDOOR_SPORTS_MOUNTAIN_CLIMBING

  """"""
  SPORTS_OUTDOOR_SPORTS_RAPPELLING

  """"""
  SPORTS_OUTDOOR_SPORTS_ROCK_CLIMBING

  """"""
  SPORTS_OUTDOOR_SPORTS_SKEET_SHOOTING

  """"""
  SPORTS_OUTDOOR_SPORTS_TRAP_SHOOTING

  """"""
  SPORTS_RACQUET_SPORTS

  """"""
  SPORTS_RACQUET_SPORTS_BADMINTON

  """"""
  SPORTS_RACQUET_SPORTS_FRONTENIS

  """"""
  SPORTS_RACQUET_SPORTS_RACQUETBALL

  """"""
  SPORTS_RACQUET_SPORTS_SQUASH

  """"""
  SPORTS_RACQUET_SPORTS_TENNIS

  """"""
  SPORTS_RECREATIONAL_SPORTS

  """"""
  SPORTS_RECREATIONAL_SPORTS_BOWLING

  """"""
  SPORTS_RECREATIONAL_SPORTS_CROQUET

  """"""
  SPORTS_RECREATIONAL_SPORTS_DARTS

  """"""
  SPORTS_RECREATIONAL_SPORTS_FRISBEE

  """"""
  SPORTS_RECREATIONAL_SPORTS_FRISBEE_GOLF

  """"""
  SPORTS_RECREATIONAL_SPORTS_HACKY_SACK

  """"""
  SPORTS_RECREATIONAL_SPORTS_HULA_HOOP

  """"""
  SPORTS_RECREATIONAL_SPORTS_JUMP_ROPE_DOUBLE_DUTCH

  """"""
  SPORTS_RECREATIONAL_SPORTS_JUMP_ROPE_GENERAL

  """"""
  SPORTS_RECREATIONAL_SPORTS_LASER_TAG

  """"""
  SPORTS_RECREATIONAL_SPORTS_PAINTBALL

  """"""
  SPORTS_RECREATIONAL_SPORTS_POGO_STICK

  """"""
  SPORTS_RECREATIONAL_SPORTS_RAZOR_SCOOTER

  """"""
  SPORTS_RECREATIONAL_SPORTS_ROLLER_SKATING

  """"""
  SPORTS_RECREATIONAL_SPORTS_SEGWAY_RIDING

  """"""
  SPORTS_RECREATIONAL_SPORTS_SHUFFLE_BOARD

  """"""
  SPORTS_RECREATIONAL_SPORTS_ZORBING

  """"""
  SPORTS_TABLE_SPORTS

  """"""
  SPORTS_TABLE_SPORTS_AIR_HOCKEY

  """"""
  SPORTS_TABLE_SPORTS_BILLIARDS

  """"""
  SPORTS_TABLE_SPORTS_FOOSBALL

  """"""
  SPORTS_TABLE_SPORTS_POOL

  """"""
  SPORTS_TABLE_SPORTS_SNOOKER

  """"""
  SPORTS_TABLE_SPORTS_TABLE_TENNIS_PING_PONG

  """"""
  SPORTS_TEAM_SPORTS

  """"""
  SPORTS_TEAM_SPORTS_AMERICAN_FOOTBALL

  """"""
  SPORTS_TEAM_SPORTS_AUSTRALIAN_FOOTBALL

  """"""
  SPORTS_TEAM_SPORTS_BASEBALL

  """"""
  SPORTS_TEAM_SPORTS_BASKETBALL

  """"""
  SPORTS_TEAM_SPORTS_BEACH_VOLLEYBALL

  """"""
  SPORTS_TEAM_SPORTS_CRICKET

  """"""
  SPORTS_TEAM_SPORTS_DODGE_BALL

  """"""
  SPORTS_TEAM_SPORTS_FIELD_HOCKEY

  """"""
  SPORTS_TEAM_SPORTS_HANDBALL

  """"""
  SPORTS_TEAM_SPORTS_HURLING

  """"""
  SPORTS_TEAM_SPORTS_ICE_HOCKEY

  """"""
  SPORTS_TEAM_SPORTS_INDOOR_SOCCER

  """"""
  SPORTS_TEAM_SPORTS_LACROSSE

  """"""
  SPORTS_TEAM_SPORTS_ROLLER_HOCKEY

  """"""
  SPORTS_TEAM_SPORTS_RUGBY_LEAGUE

  """"""
  SPORTS_TEAM_SPORTS_RUGBY_UNION

  """"""
  SPORTS_TEAM_SPORTS_SOCCER

  """"""
  SPORTS_TEAM_SPORTS_SOFTBALL

  """"""
  SPORTS_TEAM_SPORTS_VOLLEYBALL

  """"""
  SPORTS_TRACK_AND_FIELD

  """"""
  SPORTS_TRACK_AND_FIELD_BROAD_JUMP

  """"""
  SPORTS_TRACK_AND_FIELD_DECATHLON

  """"""
  SPORTS_TRACK_AND_FIELD_DISCUS

  """"""
  SPORTS_TRACK_AND_FIELD_DISTANCE_RUNNING

  """"""
  SPORTS_TRACK_AND_FIELD_HAMMER

  """"""
  SPORTS_TRACK_AND_FIELD_HEPTATHLON

  """"""
  SPORTS_TRACK_AND_FIELD_HIGH_JUMP

  """"""
  SPORTS_TRACK_AND_FIELD_HURDLE

  """"""
  SPORTS_TRACK_AND_FIELD_JAVELIN

  """"""
  SPORTS_TRACK_AND_FIELD_LONG_JUMP

  """"""
  SPORTS_TRACK_AND_FIELD_MARATHON

  """"""
  SPORTS_TRACK_AND_FIELD_POLE_VAULT

  """"""
  SPORTS_TRACK_AND_FIELD_RELAY

  """"""
  SPORTS_TRACK_AND_FIELD_RUNNING

  """"""
  SPORTS_TRACK_AND_FIELD_SHOT_PUT

  """"""
  SPORTS_TRACK_AND_FIELD_SPRINTING

  """"""
  SPORTS_TRACK_AND_FIELD_TRACK_GENERAL

  """"""
  SPORTS_TRACK_AND_FIELD_TRIATHLON

  """"""
  SPORTS_TRACK_AND_FIELD_TRIPLE_JUMP

  """"""
  SPORTS_WATER_SPORTS

  """"""
  SPORTS_WATER_SPORTS_BODYBOARDING

  """"""
  SPORTS_WATER_SPORTS_BODY_SURFING

  """"""
  SPORTS_WATER_SPORTS_BOOGIE_BOARDING

  """"""
  SPORTS_WATER_SPORTS_DIVING

  """"""
  SPORTS_WATER_SPORTS_SCUBA_DIVING

  """"""
  SPORTS_WATER_SPORTS_SKIM_BOARDING

  """"""
  SPORTS_WATER_SPORTS_SNORKELING

  """"""
  SPORTS_WATER_SPORTS_SURFING

  """"""
  SPORTS_WATER_SPORTS_SWIMMING_BACK_STROKE

  """"""
  SPORTS_WATER_SPORTS_SWIMMING_BREAST_STROKE

  """"""
  SPORTS_WATER_SPORTS_SWIMMING_BUTTERFLY

  """"""
  SPORTS_WATER_SPORTS_SWIMMING_FREESTYLE

  """"""
  SPORTS_WATER_SPORTS_SWIMMING_GENERAL

  """"""
  SPORTS_WATER_SPORTS_SWIMMING_SYNCHRONIZED

  """"""
  SPORTS_WATER_SPORTS_WAKEBOARDING

  """"""
  SPORTS_WATER_SPORTS_WATER_POLO

  """"""
  SPORTS_WATER_SPORTS_WATER_SKIING

  """"""
  SPORTS_WATER_SPORTS_WINDSURFING

  """"""
  SPORTS_WINTER_SPORTS

  """"""
  SPORTS_WINTER_SPORTS_BIATHLON

  """"""
  SPORTS_WINTER_SPORTS_CROSS_COUNTRY_SKIING

  """"""
  SPORTS_WINTER_SPORTS_FIGURE_SKATING

  """"""
  SPORTS_WINTER_SPORTS_ICE_SKATING

  """"""
  SPORTS_WINTER_SPORTS_LUGE

  """"""
  SPORTS_WINTER_SPORTS_SKI_JUMPING

  """"""
  SPORTS_WINTER_SPORTS_SNOWBOARDING

  """"""
  SPORTS_WINTER_SPORTS_SNOW_SKIING

  """"""
  SPORTS_WINTER_SPORTS_SPEED_SKATING

  """"""
  STUNTS

  """"""
  STUNTS_AIR_RAMS

  """"""
  STUNTS_BREAKAWAYS

  """"""
  STUNTS_BREAK_FALLS

  """"""
  STUNTS_BUILDING_FALLS

  """"""
  STUNTS_CAR_HITS

  """"""
  STUNTS_CREATURE_SUIT_WORK

  """"""
  STUNTS_FULL_FIRE_BURNS

  """"""
  STUNTS_HIGH_FALLS_ABOVE_50

  """"""
  STUNTS_HIGH_FALLS_BELOW_50

  """"""
  STUNTS_HORSE_FALLS

  """"""
  STUNTS_PARTIAL_FIRE_BURNS

  """"""
  STUNTS_PRATFALLS

  """"""
  STUNTS_PRECISION_DRIVING

  """"""
  STUNTS_RATCHETS

  """"""
  STUNTS_SADDLE_FALLS

  """"""
  STUNTS_SQUIB_HITS

  """"""
  STUNTS_STAGE_COMBAT

  """"""
  STUNTS_STAIR_FALLS

  """"""
  STUNTS_WIRE_WORK

  """"""
  VOCAL_RANGE

  """"""
  VOCAL_RANGE_ALTO

  """"""
  VOCAL_RANGE_BARITONE

  """"""
  VOCAL_RANGE_BASS

  """"""
  VOCAL_RANGE_MEZZO_SOPRANO

  """"""
  VOCAL_RANGE_SOPRANO

  """"""
  VOCAL_RANGE_TENOR

  """"""
  WEAPONS_FIREARMS

  """"""
  WEAPONS_FIREARMS_AUTOMATIC_WEAPON

  """"""
  WEAPONS_FIREARMS_BO_STAFF

  """"""
  WEAPONS_FIREARMS_BROADSWORD

  """"""
  WEAPONS_FIREARMS_CROSS_BOW

  """"""
  WEAPONS_FIREARMS_DAGGERS

  """"""
  WEAPONS_FIREARMS_HANDGUN

  """"""
  WEAPONS_FIREARMS_KAMA

  """"""
  WEAPONS_FIREARMS_LONG_BOW

  """"""
  WEAPONS_FIREARMS_NUNCHUCKS

  """"""
  WEAPONS_FIREARMS_RAPIER

  """"""
  WEAPONS_FIREARMS_RIFLE

  """"""
  WEAPONS_FIREARMS_SAI

  """"""
  WEAPONS_FIREARMS_SHOTGUN

  """"""
  WEAPONS_FIREARMS_STAFF

  """"""
  WEAPONS_FIREARMS_SWORDS

  """"""
  WEAPONS_FIREARMS_THROWING_KNIVES

  """"""
  WEAPONS_FIREARMS_THROWING_STARS

  """"""
  WEAPONS_FIREARMS_TONFA

  """"""
  WEAPONS_FIREARMS_WHIP
}

""""""
enum SkillLevelEnum {
  """"""
  BEGINNER

  """"""
  EXPERT

  """"""
  INTERMEDIATE
}

""""""
enum SubmissionStatusEnum {
  """"""
  BOOKED

  """"""
  DRAFT

  """"""
  ON_AVAIL

  """"""
  REVIEWED

  """"""
  SELECTED

  """"""
  TO_REVIEW

  """"""
  UNDER_CONSIDERATION

  """"""
  UNSUBMITTED
}

""""""
enum SubscriptionStatusEnum {
  """"""
  ACTIVE

  """"""
  CANCELED

  """"""
  EXPIRED

  """"""
  FUTURE

  """"""
  PAUSED

  """"""
  PENDING
}

""""""
enum TileSchemaValueEnum {
  """"""
  _1

  """"""
  _2

  """"""
  _3

  """"""
  _4

  """"""
  _5

  """"""
  _6

  """"""
  CB

  """"""
  PACKAGE_PICK_1

  """"""
  PRESENTATION_PICK_1
}

""""""
enum UnitSystemEnum {
  """"""
  IMPERIAL

  """"""
  METRIC
}

""""""
enum UrlTypeEnum {
  """"""
  FACEBOOK

  """"""
  IMDB

  """"""
  INSTAGRAM

  """"""
  PAST_WORK

  """"""
  PORTFOLIO

  """"""
  TWITTER

  """"""
  VIMEO

  """"""
  WEBSITE

  """"""
  YOUTUBE
}

""""""
enum WillingnessEnum {
  """"""
  ANIMALS

  """"""
  ANIMALS_WORK_WITH_CATS

  """"""
  ANIMALS_WORK_WITH_DOGS

  """"""
  EXTRAS_WORK

  """"""
  OTHER

  """"""
  OTHER_COLOR_HAIR

  """"""
  OTHER_CUT_HAIR

  """"""
  OTHER_EAT_MEAT

  """"""
  OTHER_GROW_OR_SHAVE_FACIAL_HAIR

  """"""
  OTHER_KISSING_SCENE

  """"""
  OTHER_SAME_SEX_KISSING_SCENE

  """"""
  OTHER_SEXUAL_SITUATIONS

  """"""
  OTHER_SMOKE

  """"""
  REVEAL

  """"""
  REVEAL_APPEAR_IN_LINGERIE_OR_SWIMSUIT

  """"""
  REVEAL_CROSS_DRESS

  """"""
  REVEAL_NUDE

  """"""
  REVEAL_SEMI_NUDE
}
